{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Statistic.jsx","components/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Timeline.jsx","components/ChartComponent.jsx","components/Popup.jsx","components/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/DragAndDropList.jsx","components/WorkoutCreator.jsx","components/ImageSearch/ImageCard.jsx","components/ImageSearch/ImageField.jsx","components/ExerciseForm.jsx","components/ExercisePreview.jsx","components/FileUpload.jsx","components/DeleteSelectorField.jsx","components/Settings.jsx","components/WgerSearch/WgerSearchSettings.jsx","components/WgerSearch/WgerSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setStoppedAt","timeInExercise","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","addWeight","newWeight","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","index","workoutStoppedAt","pause","undefined","combineReducers","current","action","userData","history","workouts","exercises","muscles","shouldLoadDefaultData","muscle","startId","getId","prop","map","key","parseInt","value","date","Date","title","filter","ex","find","w","splice","position","name","duration","updatedWorkouts","deleted","e","shouldLoadMuscles","newMuscles","forEach","push","console","log","wger","data","languages","equipment","language","speech","isSameDay","date1","date2","getDate","getMonth","getYear","getWorkout","workoutList","getExercise","exerciseList","list","sortedIds","item","sort","a","b","length","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","array","calcStats","setState","Array","from","statistics","keys","Math","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","today","getFullYear","isToday","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","time","isNaN","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","Speech","init","lang","speak","text","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","PauseScreen","queue","endPause","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","previous","pauseTimer","runTimer","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","setPause","ready","pushWorkoutHistory","currentWorkout","setIndex","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","Dropdown","icon","idForNewExercise","Timeline","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","todayNoTraining","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","elem","arr","filteredTrainings","trainingsOnSelectedDay","t","Set","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","weightValue","lastAnchorTag","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","weightHistory","latestTrainings","training","getWeightHistory","step","onChange","evt","target","onKeyDown","keyCode","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","WorkoutCreator","match","params","loadWorkout","_","prevState","ids","editWorkout","usersExercises","removeExerciseFromWorkout","renderSelector","onMouseOver","preventSelect","onMouseLeave","stopPropagation","addExerciseToWorkout","border","usersWorkouts","removeWorkout","created","addWorkout","renderExerciseList","defaultPauseTime","allWorkouts","workoutName","ImageCard","spans","imageRef","React","createRef","addEventListener","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","get","cancelToken","CancelToken","c","request","results","alt_description","urls","regular","imageList","showImage","imageUrl","href","preventDefault","htmlFor","event","contentStyle","searchImages","autoComplete","imageSearch","ExerciseForm","formChanged","getMuscles","window","beforeunload","returnValue","removeEventListener","form","when","message","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","validate","errors","onSubmit","back","touched","handleChange","handleBlur","handleSubmit","onKeyPress","which","onBlur","newId","createMuscle","m","deleteMuscle","as","ImageField","muscleName","dispatch","response","ExercisePreview","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DeleteSelectorField","checked","historyField","toLowerCase","delete","Settings","overwriteChecked","setDefaultValue","confirm","deleteAll","encodeURIComponent","file","json","setUserData","addUserData","error","fileLoadingError","saveData","download","fieldsToDelete","isClearable","short_name","full_name","deleteKey","setSearchSettings","WgerSearch","searchSettings","status","shouldReload","searchData","url","Object","join","Axios","prev","settingsProps","WgerSearchSettings","renderArrowButtons","App","loadDefaultData","path","component","exact","onLeave","alert","all","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"8SAEeA,MAAMC,OAAO,CAAEC,QAAS,4BCmB1BC,EAAa,SAAAC,GACxB,MAAO,CACLC,KAAM,cACNC,QAASF,IAKAG,EAAe,SAAAC,GAC1B,MAAO,CACLH,KAAM,iBACNC,QAASE,IA6BAC,EAAc,SAAAC,GACzB,MAAO,CAAEL,KAAM,eAAgBC,QAASI,IAG7BC,EAAiB,SAAAC,GAC5B,MAAO,CAAEP,KAAM,kBAAmBC,QAASM,IAYhCC,EAAe,SAACC,EAAUC,GACrC,MAAO,CAAEV,KAAM,gBAAiBC,QAAS,CAAEQ,WAAUC,QAS1CC,EAAU,SAAAC,GACrB,MAAO,CAAEZ,KAAM,WAAYC,QAASW,IAIzBC,EAAY,SAAAC,GACvB,MAAO,CAAEd,KAAM,aAAcC,QAASa,I,mCC9F3BC,EAAY,WACvB,IACE,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,UACxD,GAAwB,OAApBJ,EACF,OAEF,OAAOC,KAAKC,MAAMF,GAClB,MAAOK,GACP,SAISC,EAAY,SAAAC,GACvB,IACE,IAAMP,EAAkBC,KAAKO,UAAUD,GACvCJ,aAAaM,QAAQ,QAASR,KAAKO,UAAUR,IAC7C,Y,wkBCdJ,IAAMU,EAAiB,CACrBC,aAAc,GACdC,kBAAmB,EACnBC,OAAQ,IAEJC,EAAgB,CAAEC,iBAAkB,GAAIC,UAAW,I,yjBCP1C,IAqBTC,EAAM,CACVxB,SAAU,KACVyB,QAAS,EACTC,MAAO,EACPC,iBAAkB,EAClBC,WAAOC,G,yjBC1BM,ICKAC,cAAgB,CAE7BC,QFPa,WAA4B,IAA3BA,EAA0B,uDAAhBP,EAAKQ,EAAW,uCACxC,OAAQA,EAAOzC,MACb,IAAK,eACH,OAAO,KAAKwC,EAAZ,CAAqB/B,SAAUgC,EAAOxC,QAASmC,iBAAkB,IACnE,IAAK,cACH,OAAO,KAAKI,EAAZ,CAAqBN,QAASO,EAAOxC,QAASmC,iBAAkB,IAClE,IAAK,YACH,OAAO,KACFI,EADL,CAEEL,MAAOM,EAAOxC,QACdmC,iBAAkB,IAEtB,IAAK,iBACH,OAAO,KAAKI,EAAZ,CAAqBJ,iBAAkBK,EAAOxC,UAChD,IAAK,YACH,OAAO,KAAKuC,EAAZ,CAAqBH,MAAOI,EAAOxC,UACrC,QACE,OAAOuC,IERXE,SHAa,WAUT,IAEAR,EAASS,EAASC,EAAUC,EAAWC,EAX3CJ,EASG,uDATQ,CACTE,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,uBAAuB,EACvBJ,QAASjB,EACTI,iBAEFW,EACG,uCAGH,OAAQA,EAAOzC,MACb,IAAK,8BACH,OAAO,EAAP,GACK0C,EADL,CAEEE,SAAUH,EAAOxC,QAAQ2C,SACzBC,UAAWJ,EAAOxC,QAAQ4C,UAC1BC,QAASL,EAAOxC,QAAQ6C,UAE5B,IAAK,8BACH,OAAO,EAAP,GACKJ,EADL,CAEEI,QAAQ,GAAD,mBAAMJ,EAASI,SAAf,YAA2BL,EAAOxC,QAAQ+C,WAErD,IAAK,gBAEH,OAAOP,EAAOxC,QAChB,IAAK,gBAAL,MAEsCwC,EAAOxC,QAAxC4C,EAFL,EAEKA,UAAWD,EAFhB,EAEgBA,SAAUD,EAF1B,EAE0BA,QAExB,IAAIM,EAAUC,EAAMR,EAASG,WAC7B,IAAK,IAAIM,KAAQN,EACfA,EAAUM,GAAMzC,GAAKuC,EACrBA,IAIF,IAAK,IAAIE,KADTF,EAAUC,EAAMR,EAASE,UACRA,EACfA,EAASO,GAAMzC,GAAKuC,EACpBA,IAIF,IAAK,IAAIE,KADTF,EAAUC,EAAMR,EAASI,SACRA,EACfA,EAAQK,GAAMzC,GAAKuC,EACnBA,IAEF,OAAO,EAAP,GACKP,EADL,CAEEG,UAAU,GAAD,mBAAMH,EAASG,WAAf,YAA6BA,IACtCD,SAAS,GAAD,mBAAMF,EAASE,UAAf,YAA4BA,IACpCE,QAAQ,GAAD,mBAAMJ,EAASI,SAAf,YAA2BA,IAElCH,QAAS,CACPhB,aAAa,GAAD,mBACPe,EAASC,QAAQhB,cADV,YAEPgB,EAAQhB,eAEbC,kBACEc,EAASC,QAAQf,kBAAoBe,EAAQf,kBAC/CC,OAAO,GAAD,mBAAMa,EAASC,QAAQd,QAAvB,YAAkCc,EAAQd,YAGtD,IAAK,aAuCH,OApCEe,EADEH,EAAOxC,QAAQ2C,SACN,GACFH,EAAOxC,QAAQ4C,UAEbH,EAASE,SAASQ,KAAI,SAAAlB,GAC/B,OAAO,EAAP,GACKA,EADL,CAEEW,UAAW,QAIJH,EAASE,SAGpBC,EADEJ,EAAOxC,QAAQ4C,UACL,GACHJ,EAAOxC,QAAQ6C,QAGZJ,EAASG,UAAUO,KAAI,SAAA3C,GACjC,OAAO,EAAP,GAAYA,EAAZ,CAAsBqC,QAAS,QAGrBJ,EAASG,UAGvBC,EAAUL,EAAOxC,QAAQ6C,QAAU,GAAKJ,EAASI,QAEjDH,EAAUD,EAASC,QACfF,EAAOxC,QAAQ0C,QAAQd,SACzBc,EAAQd,OAAS,IAEfY,EAAOxC,QAAQ0C,QAAQ,mBACzBA,EAAQf,kBAAoB,GAE1Ba,EAAOxC,QAAQ0C,QAAQC,WACzBD,EAAQhB,aAAe,IAElB,CACLgB,UACAE,YACAD,WACAE,UACAhB,iBAEJ,IAAK,oBACH,IACEA,EAAcW,EAAOxC,QAAQoD,KAAOC,SAASb,EAAOxC,QAAQsD,OAC5D,SACAzB,EAAcW,EAAOxC,QAAQoD,KAAOZ,EAAOxC,QAAQsD,MAErD,OAAO,EAAP,GACKb,EADL,CAEEZ,kBAEJ,IAAK,uBACH,OAAO,EAAP,GACKY,EADL,CAEEC,QAAQ,EAAD,GACFD,EAASC,QADP,CAELhB,aAAa,GAAD,mBACPe,EAASC,QAAQhB,cADV,CAEV,CAAE6B,KAAM,IAAIC,KAAQC,MAAOjB,EAAOxC,QAAQyD,aAIlD,IAAK,WACH,OAAO,EAAP,GACKhB,EADL,CAEEC,QAAQ,EAAD,GACFD,EAASC,QADP,CAELf,kBAAmBc,EAASC,QAAQf,kBAAoBa,EAAOxC,YAGrE,IAAK,aACH,OAAO,EAAP,GACKyC,EADL,CAEEC,QAAQ,EAAD,GACFD,EAASC,QADP,CAELd,OAAO,GAAD,mBACDa,EAASC,QAAQd,QADhB,CAEJ,CAAE2B,KAAM,IAAIC,KAAQ5B,OAAQY,EAAOxC,eAI3C,IAAK,gBAEH,OAAO,EAAP,GACKyC,EADL,CAEEG,UAAU,GAAD,mBACJH,EAASG,UAAUc,QAAO,SAAAC,GAAE,OAAIA,EAAGlD,KAAO+B,EAAOxC,QAAQS,OADrD,MAEF+B,EAAOxC,QAAQQ,SAFb,CAEuBC,GAAI+B,EAAOxC,QAAQS,SAGvD,IAAK,cACH,OAAO,EAAP,GACKgC,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,UADN,CAEN,CACElC,GAAIwC,EAAMR,EAASE,UACnBc,MAAOjB,EAAOxC,QACd4C,UAAW,GACXb,UAAWU,EAASZ,cAAcE,eAI1C,IAAK,iBACH,OAAO,EAAP,GACKU,EADL,CAEEE,SAAUF,EAASE,SAASe,QAC1B,SAAAzB,GAAO,OAAIA,EAAQxB,KAAO+B,EAAOxC,aAGvC,IAAK,0BAEH,OADAiC,EAAUQ,EAASE,SAASiB,MAAK,SAAAC,GAAC,OAAIA,EAAEpD,KAAO+B,EAAOxC,QAAQF,eAI9DmC,EAAO,KACFA,EADE,CAELW,UAAU,GAAD,mBAAMX,EAAQW,WAAd,CAAyBJ,EAAOxC,QAAQM,eAE5C,EAAP,GACKmC,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,SAASe,QAAO,SAAAG,GAAC,OAAIA,EAAEpD,KAAO+B,EAAOxC,QAAQF,cADnD,CAENmC,OAVKQ,EAaX,IAAK,+BAGH,OAFAR,EAAUQ,EAASE,SAASiB,MAAK,SAAAC,GAAC,OAAIA,EAAEpD,KAAO+B,EAAOxC,QAAQF,cACtD8C,UAAUkB,OAAOtB,EAAOxC,QAAQ+D,SAAU,GAC3C,EAAP,GACKtB,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,SAASe,QAAO,SAAAG,GAAC,OAAIA,EAAEpD,KAAO+B,EAAOxC,QAAQF,cADnD,CAENmC,MAGN,IAAK,eAGH,OADAA,EAAO,KADPA,EAAUQ,EAASE,SAASiB,MAAK,SAAAC,GAAC,OAAIA,EAAEpD,KAAO+B,EAAOxC,QAAQF,aACvD,GAAoB0C,EAAOxC,QAAQiC,SACnC,EAAP,GACKQ,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,SAASe,QAAO,SAAAG,GAAC,OAAIA,EAAEpD,KAAO+B,EAAOxC,QAAQF,cADnD,CAENmC,MAGN,IAAK,eACH,IAAMxB,EAAKwC,EAAMR,EAASG,WAC1B,OAAO,EAAP,GACKH,EADL,CAEEG,UAAU,GAAD,mBACJH,EAASG,WADL,CAEP,CAAEnC,KAAIuD,KAAMxB,EAAOxC,SAAW,oBAAsBS,EAAIwD,SAAU,OAGxE,IAAK,kBACH,IAAMC,EAAkBzB,EAASE,SAASQ,KAAI,SAAAlB,GAC5C,OAAO,EAAP,GACKA,EADL,CAEEkC,SAAS,EACTvB,UAAWX,EAAQW,UAAUc,QAC3B,SAAAlD,GAAQ,OAAIA,IAAagC,EAAOxC,gBAItC,OAAO,EAAP,GACKyC,EADL,CAEEG,UAAWH,EAASG,UAAUc,QAAO,SAAAU,GAAC,OAAIA,EAAE3D,KAAO+B,EAAOxC,WAC1D2C,SAAUuB,IAEd,IAAK,cACH,IAAKzB,EAAS4B,kBACZ,OAAO5B,EAET,IAAI6B,EAAa,GAQjB,OAPA9B,EAAOxC,QAAQuE,SAAQ,SAAAxB,GACrBuB,EAAWE,KAAK,CACdR,KAAMjB,EAAOiB,KACbvD,GAAIwC,EAAM,GAAD,mBAAMR,EAASI,SAAW,IAAQyB,SAIxC,EAAP,GACK7B,EADL,CAEEI,QAAQ,GAAD,mBAAMJ,EAASI,SAAYyB,GAClCD,mBAAmB,IAEvB,IAAK,gBACH,OAAO,EAAP,GACK5B,EADL,CAEEI,QAAQ,GAAD,mBACFJ,EAASI,SADP,CAEL,CAAEpC,GAAIwC,EAAMR,EAASI,SAAUmB,KAAMxB,EAAOxC,aAGlD,IAAK,gBAIH,OAHAyE,QAAQC,IACNjC,EAASI,QAAQa,QAAO,SAAAX,GAAM,OAAIA,EAAOtC,KAAO+B,EAAOxC,YAElD,EAAP,GACKyC,EADL,CAEEI,QAASJ,EAASI,QAAQa,QAAO,SAAAX,GAAM,OAAIA,EAAOtC,KAAO+B,EAAOxC,aAEpE,QACE,OAAOyC,IGlRXkC,KDVa,WAOT,IANJC,EAMG,uDANI,CACLC,UAAW,GACXhC,QAAS,GACTiC,UAAW,IAEbtC,EACG,uCACH,OAAQA,EAAOzC,MACb,IAAK,8BACH,OAAO,KACF6E,EADL,CAEEC,UAAWrC,EAAOxC,QAAQ+E,SAC1BD,UAAWtC,EAAOxC,QAAQ8E,UAC1BjC,QAASL,EAAOxC,QAAQ+C,SAE5B,QACE,OAAO6B,ICNXI,OAAQ,WAA4B,IAA3BA,EAA0B,uDAAjB,KAAMxC,EAAW,uCACjC,MAAoB,eAAhBA,EAAOzC,KACFyC,EAAOxC,QAETgF,KCqBJ,SAASC,EAAUC,EAAOC,GAC/B,OACED,EAAME,YAAcD,EAAMC,WAC1BF,EAAMG,aAAeF,EAAME,YAC3BH,EAAMI,YAAcH,EAAMG,UAIvB,SAASC,EAAW9E,EAAI+E,GAC7B,OAAOA,EAAY5B,MAAK,SAAA3B,GAAO,OAAIA,EAAQxB,KAAOA,KAG7C,SAASgF,EAAYhF,EAAIiF,GAC9B,OAAOA,EAAa9B,MAAK,SAAApD,GAAQ,OAAIA,EAASC,KAAOA,KAIhD,SAASwC,EAAM0C,GACpB,IAAMC,EAAYD,EAAKxC,KAAI,SAAA0C,GAAI,OAAIA,EAAKpF,MAAIqF,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAC/D,OAAyB,IAArBJ,EAAUK,OACL,EAEFL,EAAUA,EAAUK,OAAS,GAAK,EAoCpC,SAASC,EAAqBC,GAAiB,IAC9CzE,EAAyByE,EAAzBzE,aAAcE,EAAWuE,EAAXvE,OACpB,IAAK,IAAIwB,KAAO1B,EACdA,EAAa0B,GAAKG,KAAO,IAAIC,KAAK9B,EAAa0B,GAAKG,MAEtD,IAAK,IAAIH,KAAOxB,EACdA,EAAOwB,GAAKG,KAAO,IAAIC,KAAK5B,EAAOwB,GAAKG,M,ICxF7B6C,G,iLATX,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,SAASC,KAAKC,MAAMjD,OACnC,yBAAK+C,UAAU,SAASC,KAAKC,MAAMC,Y,GALnBC,aCSlBC,G,2MACJpF,MAAQ,CACNqF,WAAY,EAAKJ,MAAMI,WACvBC,eAAe,EACfC,UAAW,I,mFFOR,IAAiBC,EEFpBR,KAAKS,YACLT,KAAKU,SAAS,CACZH,WFAkBC,EEACG,MAAMC,KAAKD,MAAMX,KAAKa,WAAWlB,QAAQmB,QFCzDN,EAAMhB,MAAK,kBAAMuB,KAAKC,SAAW,W,2CEGtChB,KAAKS,c,kCAEK,MAEqDT,KAAKC,MAA5DgB,EAFE,EAEFA,YAAaC,EAFX,EAEWA,mBAAoBC,EAF/B,EAE+BA,kBACjC/F,EAAiB6F,EAAjB7F,aACR4E,KAAKa,WAAa,CAChB,kBAAC,GAAD,CAAW7D,MAAOgD,KAAKoB,sBAAuBlB,MAAM,kBACpD,kBAAC,GAAD,CACElD,MAAO+D,KAAKM,MAAMJ,EAAY5F,mBAC9B6E,MAAM,qBAER,kBAAC,GAAD,CAAWlD,MAAO5B,EAAauE,OAAQO,MAAM,kBAC7C,kBAAC,GAAD,CACElD,MAAOgD,KAAKsB,yBACZpB,MAAM,8BAERF,KAAKuB,uBAAuBC,KAAKxB,MACjC,kBAAC,GAAD,CAAWhD,MAAOmE,EAAmBjB,MAAM,uBAC3C,kBAAC,GAAD,CAAWlD,MAAOkE,EAAoBhB,MAAM,wBAC5C,kBAAC,GAAD,CACElD,MAAO5B,EAAagC,QAAO,SAAAzB,GAAO,OFenC,SAAiBsB,GACtB,IAAMwE,EAAQ,IAAIvE,KAClB,OACED,EAAK6B,YAAc2C,EAAM3C,WACzB7B,EAAK8B,aAAe0C,EAAM1C,YAC1B9B,EAAKyE,gBAAkBD,EAAMC,cEpBaC,CAAQhG,EAAQsB,SAAO0C,OAC7DO,MAAM,qBAERF,KAAK4B,iBAAiBJ,KAAKxB,S,4CAGR,IACb5E,EAAiB4E,KAAKC,MAAMgB,YAA5B7F,aACR,GAA4B,IAAxBA,EAAauE,OAEf,OAAO,EAET,IAAMkC,EAAYzG,EAAa,GAAG6B,KAC5B6E,EAAa,IAAI5E,KAAS2E,EAC1BE,EAAYhB,KAAKM,MAAMS,EAAa,IAAO,GAAK,GAAK,GAAK,GAAK,EAErE,OADgB1G,EAAauE,OAASoC,GACvBC,QAAQ,K,+CAGvB,IAAMC,GACJjC,KAAKC,MAAMgB,YAAY5F,kBACvB2E,KAAKC,MAAMgB,YAAY7F,aAAauE,QACpCqC,QAAQ,GAEV,OAAIE,MAAMD,GAED,EAEAA,I,yCAGS,IACZ5B,EAAeL,KAAKhF,MAApBqF,WACDL,KAAKhF,MAAMsF,gBACdD,EAAaL,KAAKC,MAAMI,YAE1B,IAAM8B,GACJpB,KAAKqB,IAAIC,MACP,KACArC,KAAKC,MAAMgB,YAAY3F,OAAOuB,KAAI,SAAAU,GAAC,OAAIA,EAAEjC,WACvC+E,GACJ2B,QAAQ,GACV,OAAO,kBAAC,GAAD,CAAWhF,MAAQmF,GAAQ,GAAKA,GAAS,EAAGjC,MAAM,kB,+CAEjC,IAAD,OACjBG,EAAeL,KAAKhF,MAApBqF,WAIN,OAHKL,KAAKhF,MAAMsF,gBACdD,EAAaL,KAAKC,MAAMI,YAGxB,kBAAC,GAAD,CACErD,MAAOqD,EACPH,MACE,6BACE,uBACEH,UAAU,mCACVuC,QAAS,WACP,EAAK5B,SAAS,CACZJ,eAAe,EACfD,WAAYkC,YAAYlC,EAAa,IAAK2B,QAAQ,SAN1D,YAWE,uBACEjC,UAAU,iCACVuC,QAAS,kBACP,EAAK5B,SAAS,CACZJ,eAAe,EACfD,WAAYkC,YAAYlC,EAAa,IAAK2B,QAAQ,SAIxD,6BACChC,KAAKhF,MAAMsF,cACV,yBAAKP,UAAU,mBACb,yBACEA,UAAU,iBACVuC,QAAS,WACP,EAAK5B,SAAS,CAAEJ,eAAe,IAC/B,EAAKL,MAAM3F,UAAU+F,KAGvB,uBAAGN,UAAU,eAEf,yBACEA,UAAU,gBACVuC,QAAS,WACP,EAAK5B,SAAS,CACZJ,eAAe,EACfD,WAAY,EAAKJ,MAAMI,eAI3B,uBAAGN,UAAU,aAGf,U,+BAMJ,IAAD,OACP,OACE,6BACE,yBAAKA,UAAU,kCACZC,KAAKhF,MAAMuF,UAAU1D,KAAI,SAAAjB,GAExB,MAAsC,oBAA3B,EAAKiF,WAAWjF,GAIvB,yBAAKmE,UAAU,SAASjD,IAAKlB,GAC1B,EAAKiF,WAAWjF,MAKrB,yBAAKmE,UAAU,SAASjD,IAAKlB,GAC1B,EAAKiF,WAAWjF,a,GA5JDuE,aAqLjBqC,gBAfS,SAAAxH,GACtB,IAAIqF,EAAa,GAMjB,OALIrF,EAAMmB,SAASC,QAAQd,OAAOqE,OAAS,IACzCU,EACErF,EAAMmB,SAASC,QAAQd,OAAON,EAAMmB,SAASC,QAAQd,OAAOqE,OAAS,GAClErE,QAEA,CACL2F,YAAajG,EAAMmB,SAASC,QAC5BiE,aACAa,mBAAoBlG,EAAMmB,SAASG,UAAUqD,OAC7CwB,kBAAmBnG,EAAMmB,SAASE,SAASsD,UAIP,CACtCrF,aADakI,CAEZpC,IC7LY,SAASqC,GAAaxC,GACnC,OACE,6BACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,cAAf,sCAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,mBACb,yBAAKuC,QAASrC,EAAMyC,UAClB,6BACE,uBAAG3C,UAAU,cADf,SAIF,yBAAKuC,QAASrC,EAAM0C,cAClB,6BACE,uBAAG5C,UAAU,oBADf,aAIF,yBAAKuC,QAASrC,EAAM2C,SAClB,6BACE,uBAAG7C,UAAU,cADf,iB,cCnBV8C,G,2MACJ7H,MAAQ,CAAE8B,IAAK,EAAGgG,SAAU,EAAGpE,OAAQ,M,0MAE/BA,EAAS,IAAIqE,I,SACbrE,EAAOsE,KAAK,CAAEC,KAAM,U,OAE1BjD,KAAKU,SAAS,CAAEhC,W,uIAEPuD,GAsBT,OAnBAjC,KAAKC,MAAM7F,QAAQ,EAAI,GAAK,IACxB4F,KAAKhF,MAAM8H,WAAab,IACtBjC,KAAKhF,MAAM0D,QACTuD,EAAO,GAAKA,EAAO,GACrBjC,KAAKhF,MAAM0D,OAAOwE,MAAM,CAAEC,KAAM,GAAKlB,IAGzCjC,KAAKU,SAAS,CAAEoC,SAAUb,KAI5BjC,KAAKC,MAAMtG,aAAaqG,KAAKC,MAAM/F,SAASyD,SAAWsE,GAE1C,IAATA,IAEFjC,KAAKU,SAAS,CAAE5D,IAAKkD,KAAKhF,MAAM8B,IAAM,IAEtCkD,KAAKC,MAAMmD,QAGX,yBAAKrD,UAAU,qBACb,yBAAKA,UAAU,QAAQkC,EAAvB,KACA,4BAAKjC,KAAKC,MAAM/F,SAASwD,S,+BAKrB,IAAD,OACP,OACE,6BACE,yBAAKqC,UAAU,aACb,kBAAC,wBAAD,CACEA,UAAU,QACVjD,IAAK,GAAKkD,KAAKC,MAAM/F,SAASC,GAAK6F,KAAKhF,MAAM8B,IAC9CuG,gBAAiBrD,KAAKC,MAAM/F,SAASyD,SACrC2F,OAAQ,CAAC,CAAC,OAAQ,KAAO,CAAC,OAAQ,KAAO,CAAC,SAC1CC,UAAWvD,KAAKC,MAAMuD,QACtBC,QAASzD,KAAKC,MAAMwD,QACpBC,WAAY1D,KAAK0D,WAAWlC,KAAKxB,MACjC2D,KAAM,OAGV,yBAAK5D,UAAU,wBACb,wBAAIA,UAAU,mBACXC,KAAKC,MAAM/F,SAASwD,KACrB,8BACE,uBAAGqC,UAAU,YAAYuC,QAAS,kBAAM,EAAKrC,MAAM2D,YAGvD,yBAAK7D,UAAU,eACZC,KAAKC,MAAM/F,SAAS2J,MACnB,yBAAK9D,UAAU,cACb,yBACEA,UAAU,6BACV+D,IAAK9D,KAAKC,MAAM/F,SAAS2J,MACzBE,IAAK,YAAc/D,KAAKC,MAAM/F,SAASwD,QAGzC,KACHsC,KAAKC,MAAM/F,SAAS8J,YACnB,yBAAKjE,UAAU,wCACZC,KAAKC,MAAM/F,SAAS8J,aAErB,Y,GA1EO7D,aAkFRqC,eAAQ,KAAM,CAAEpI,UAAST,gBAAzB6I,CAAyCK,ICtFlDoB,G,2MACJjJ,MAAQ,CAAE0D,OAAQ,KAAMoE,SAAU,G,EAOlCY,WAAa,SAAAzB,GAaX,OAZA,EAAKhC,MAAM7F,QAAQ,EAAI,GAAK,IACxB,EAAKY,MAAM8H,WAAab,IACtB,EAAKjH,MAAM0D,QACTuD,EAAO,GAAKA,EAAO,GACrB,EAAKjH,MAAM0D,OAAOwE,MAAM,CAAEC,KAAM,GAAKlB,EAAMiC,OAAO,IAGtD,EAAKxD,SAAS,CAAEoC,SAAUb,KAExBA,GAAQ,GACV,EAAKhC,MAAMkE,WAGX,yBAAKpE,UAAU,qBACb,yBAAKA,UAAU,QAAQkC,EAAvB,KACA,0C,0MArBEvD,EAAS,IAAIqE,I,SACbrE,EAAOsE,KAAK,CAAEC,KAAM,U,OAE1BjD,KAAKU,SAAS,CAAEhC,W,qIAuBhB,OACE,6BACE,yBAAKqB,UAAU,aACb,kBAAC,wBAAD,CACEA,UAAU,QACVsD,gBAAiBrD,KAAKC,MAAMgC,KAC5ByB,WAAY1D,KAAK0D,WACjBJ,OAAQ,CAAC,CAAC,OAAQ,KAAO,CAAC,OAAQ,KAAO,CAAC,SAC1CC,UAAWvD,KAAKC,MAAMmE,UACtBT,KAAM,OAGV,yBAAK5D,UAAU,uCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAAf,iBAEE,wBAAIuC,QAAStC,KAAKC,MAAMkE,UACtB,uBAAGpE,UAAU,+BACZC,KAAKC,MAAMoE,sB,GA/CFlE,aAwDXqC,eAAQ,KAAM,CAAEpI,WAAhBoI,CAA2ByB,IC1D3B,SAASK,GAAerE,GACrC,OACE,6BACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,kBAAkBE,EAAMsE,eAExCtE,EAAMnE,MACL,kBAAC,GAAD,CACEmG,KAAMhC,EAAMnE,MACZsI,UAAWnE,EAAMmE,UACjBD,SAAUlE,EAAMmD,KAChBiB,aAAcpE,EAAMoE,aAAa3G,OAGnC,kBAAC,GAAD,CACExD,SAAU+F,EAAM/F,SAChBsJ,QAASvD,EAAMmE,UACfX,QAASxD,EAAMuE,oBACfpB,KAAMnD,EAAMmD,KACZQ,KAAM,kBAAM3D,EAAM7D,QAAQ8B,KAAK,aAAe+B,EAAM/F,SAASC,OAGjE,yBAAK4F,UAAU,iBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,qBAAqBuC,QAASrC,EAAMwE,YAEnD,yBAAK1E,UAAU,qBACZE,EAAMmE,UACL,uBAAGrE,UAAU,aAAauC,QAASrC,EAAMyE,aAEzC,uBAAG3E,UAAU,YAAYuC,QAASrC,EAAM0E,YAG5C,yBAAK5E,UAAU,qBACb,uBAAGA,UAAU,oBAAoBuC,QAASrC,EAAMmD,W,ICvBtDwB,G,2MACJ5J,MAAQ,CACNoJ,WAAW,EACXtI,OAAO,G,0MAKD4C,EAAS,IAAIqE,I,SACbrE,EAAOsE,KAAK,CAAEC,KAAM,U,OAE1BjD,KAAKU,SAAS,CAAEhC,WACZsB,KAAKC,MAAM4E,kBAAoB7E,KAAKC,MAAM/F,UAC5C8F,KAAK8E,gB,+IAIUC,GACb/E,KAAKC,MAAM+E,iBAAmBD,EAAUC,iBACtChF,KAAKC,MAAM/F,SAASC,GAAO4K,EAAU7K,SAASC,GAGlD6F,KAAK8E,mB,sCAKP9E,KAAKU,SAAS,CACZ0D,WAAW,M,4BAITjB,GACAnD,KAAKhF,MAAM0D,QACbsB,KAAKhF,MAAM0D,OAAOwE,MAAM,CAAEC,KAAMA,M,6BAQlC,GAAyB,OAArBnD,KAAKC,MAAMnE,MAKb,OAJAkE,KAAKC,MAAMgF,SAAS,WACpBjF,KAAKkD,MACHlD,KAAKC,MAAM/F,SAASyD,SAAW,YAAcqC,KAAKC,MAAM/F,SAASwD,MAIjEsC,KAAKC,MAAM/F,WAAa8F,KAAKhF,MAAMkK,QACjClF,KAAKC,MAAM+E,eAAiB,GAAKhF,KAAKC,MAAM4E,iBAAiBlF,QAG/DK,KAAKC,MAAMkF,mBACTnF,KAAKC,MAAMmF,eAAejL,GAC1B6F,KAAKC,MAAMmF,eAAejI,OAE5B6C,KAAKC,MAAMoF,SAAS,GACpBrF,KAAKU,SAAS,CAAEwE,OAAO,IACvBlF,KAAKkD,MAAM,kCAENlD,KAAKC,MAAMnE,QAEdkE,KAAKkD,MAAMlD,KAAKC,MAAMxE,UAAY,kBAClCuE,KAAKC,MAAMoF,SAASrF,KAAKC,MAAM+E,eAAiB,GAChDhF,KAAKC,MAAMgF,SAASjF,KAAKC,MAAMxE,e,iCAOjCuE,KAAKC,MAAM/F,WAAa8F,KAAKhF,MAAMkK,OACjClF,KAAKC,MAAM+E,eAAiB,GAAK,GACnChF,KAAKC,MAAMoF,SAASrF,KAAKC,MAAM+E,eAAiB,K,mCAOpDhF,KAAKU,SAAS,CAAE0D,WAAW,M,iCAK3BpE,KAAKU,SAAS,CACZ0D,WAAW,M,+BAKL,IAAD,OACP,OAAIpE,KAAKhF,MAAMkK,MAGX,kBAACzC,GAAD,CACEC,SAAU,kBAAM,EAAKzC,MAAM7D,QAAQ8B,KAAK,MACxCyE,aAAc,kBAAM,EAAK1C,MAAM7D,QAAQ8B,KAAK,cAC5C0E,QAAS,WACP,EAAKlC,SAAS,CAAEwE,OAAO,IACvB,EAAKjF,MAAMoF,SAAS,MAKzBrF,KAAKC,MAAM4E,kBAC2B,IAAvC7E,KAAKC,MAAM4E,iBAAiBlF,OAIlBK,KAAKC,MAAM/F,SAKnB,kBAACoK,GAAD,iBACMtE,KAAKC,MADX,CAEEnE,MAAOkE,KAAKC,MAAMnE,MAClBuI,aAAcrE,KAAKC,MAAM/F,SACzBkK,UAAWpE,KAAKhF,MAAMoJ,UACtBhB,KAAMpD,KAAKoD,KAAK5B,KAAKxB,MACrByE,SAAUzE,KAAKyE,SAASjD,KAAKxB,MAC7B0E,WAAY1E,KAAK0E,WAAWlD,KAAKxB,MACjC2E,SAAU3E,KAAK2E,SAASnD,KAAKxB,SAZ1B,oDAFA,kBAAC,IAAD,CAAUsF,GAAG,oB,GA9GInF,aA4JfqC,gBAzBS,SAAAxH,GACtB,IAAMoK,EAAiBnG,EACrBjE,EAAMiB,QAAQN,QACdX,EAAMmB,SAASE,UAEXkJ,EAAevK,EAAMiB,QAAQL,MAOnC,MAAO,CACL1B,SAPsBkL,EACpBjG,EACEiG,EAAe9I,UAAUiJ,GACzBvK,EAAMmB,SAASG,WAEjB,KAGFuI,iBAAkBO,EAAiBA,EAAe9I,UAAY,KAC9DiI,aAAca,EAAiBA,EAAejI,MAAQ,KACtD6H,eAAgBO,EAChBH,iBACAZ,oBAAqBxJ,EAAMiB,QAAQJ,iBACnCC,MAAOd,EAAMiB,QAAQH,MACrBL,UAAW2J,EACPA,EAAe3J,UACfT,EAAMmB,SAASZ,cAAcE,aAGG,CACtC0J,mBb1FgC,SAACxJ,EAASwB,GAC1C,MAAO,CAAE1D,KAAM,uBAAwBC,QAAS,CAAEiC,UAASwB,Wa0F3D/C,UACAiL,Sb3IsB,SAAAzJ,GACtB,MAAO,CACLnC,KAAM,YACNC,QAASkC,IayIXjC,eACAsL,SbxEsB,SAAAhD,GACtB,MAAO,CAAExI,KAAM,YAAaC,QAASuI,KakExBO,CAMZoC,I,sBC5KGY,G,2MACJxK,MAAQ,CAAEyK,OAAQ,G,wEACR,IAAD,OACDC,EAAa1F,KAAKC,MAAM0F,SAASC,SAEvC,OACE,yBAAK7F,UAAU,sBACb,kBAAC,KAAD,CAAc8F,WAAS,EAACC,WAAS,GAC/B,kBAAC,KAAaC,KAAd,KACE,uBAAGhG,UAAU,wBAEf,kBAAC,KAAagG,KAAd,CACEN,OAAuB,MAAfC,EACRpD,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,OAEvC,6BACE,uBAAG6B,UAAU,cADf,SAIF,kBAACiG,GAAA,EAAD,CACEzG,MAAI,EACJ0G,KACE,6BACE,uBAAGlG,UAAU,oBADf,YAEE,uBAAGA,UAAU,sBAIjB,kBAACiG,GAAA,EAASR,KAAV,KACG,CACCxF,KAAKC,MAAM3D,UAAUO,KAAI,SAAA3C,GAAQ,OAC/B,kBAAC8L,GAAA,EAASD,KAAV,CACEjJ,IAAK5C,EAASC,GACdsL,OAAQC,IAAe,aAAexL,EAASC,GAC/CmI,QAAS,kBACP,EAAKrC,MAAM7D,QAAQ8B,KAAK,aAAehE,EAASC,MAGjDD,EAASwD,SAGd,kBAACsI,GAAA,EAASD,KAAV,CACEjJ,KAAM,EACNwF,QAAS,WACP,IAAM4D,EAAmBvJ,EAAM,EAAKsD,MAAM3D,WAC1C,EAAK2D,MAAMpG,YAAY,IACvB,EAAKoG,MAAM7D,QAAQ8B,KAAK,aAAegI,KAGzC,uBAAGnG,UAAU,cARf,mBAaN,kBAACiG,GAAA,EAAD,CACEzG,MAAI,EACJ0G,KACE,6BACE,uBAAGlG,UAAU,wBADf,WAEE,uBAAGA,UAAU,sBAIjB,kBAACiG,GAAA,EAASR,KAAV,KACG,CACCxF,KAAKC,MAAM5D,SAASQ,KAAI,SAAAlB,GAAO,OAC7B,kBAACqK,GAAA,EAASD,KAAV,CACEjJ,IAAKnB,EAAQxB,GACbsL,OAAQC,IAAe,YAAc/J,EAAQxB,GAC7CmI,QAAS,kBACP,EAAKrC,MAAM7D,QAAQ8B,KAAK,YAAcvC,EAAQxB,MAG/CwB,EAAQwB,UAGb,kBAAC6I,GAAA,EAASD,KAAV,CACEjJ,KAAM,EACNwF,QAAS,WACP,EAAKrC,MAAM1G,WAAW,MACtB,EAAK0G,MAAM7D,QAAQ8B,KAAK,iBAG1B,uBAAG6B,UAAU,cAPf,kBAYN,kBAACiG,GAAA,EAAD,CACEzG,MAAI,EACJ0G,KACE,6BACE,uBAAGlG,UAAU,mBADf,WAEE,uBAAGA,UAAU,sBAIjB,kBAACiG,GAAA,EAASR,KAAV,KACE,kBAACQ,GAAA,EAASD,KAAV,CACEN,OAAuB,6BAAfC,EACRpD,QAAS,kBACP,EAAKrC,MAAM7D,QAAQ8B,KAAK,8BAH5B,kBAQA,kBAAC8H,GAAA,EAASD,KAAV,CACEN,OAAuB,0BAAfC,EACRpD,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,2BAFzC,eAMA,kBAAC8H,GAAA,EAASD,KAAV,CACEN,OAAuB,yBAAfC,EACRpD,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,0BAFzC,gBAQJ,kBAAC,KAAa6H,KAAd,CACEN,OAAuB,UAAfC,EACRpD,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,WAEvC,6BACE,uBAAG6B,UAAU,uBADf,qBAIF,kBAAC,KAAagG,KAAd,CACEN,OAAuB,cAAfC,EACRpD,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,eAEvC,6BACE,uBAAG6B,UAAU,cADf,mB,GApIOI,aAqJJqC,gBAPS,SAAAxH,GACtB,MAAO,CACLsB,UAAWtB,EAAMmB,SAASG,UAC1BD,SAAUrB,EAAMmB,SAASE,YAIW,CAAE9C,aAAYM,eAAvC2I,CAAsDgD,I,0CCtJ/DW,G,2MACJ1E,MAAQ,IAAIvE,K,EACZkJ,kBAAoB,EAAKnG,MAAM7E,aAAayB,KAAI,SAAAlB,GAAO,OAAIA,EAAQsB,Q,EAEnEjC,MAAQ,CAAEY,MAAO,M,EAEjByK,uBAAyB,G,mFAEvBrG,KAAKqG,uBAAyBrG,KAAKsG,c,sCAEpB,IAAD,OAEd,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,OAAQ,WACpD,kBAAC,KAAD,CACE9K,MACEoE,KAAKhF,MAAMY,OACXoE,KAAKqG,uBAAuB1G,QACzBK,KAAKhF,MAAM2L,gBAAkB,EAAI,GAEtCC,OAAQ5G,KAAKqG,uBACbQ,WAAY,SAAAjL,GAAK,OAAI,EAAK8E,SAAS,CAAE9E,WACrCkL,SAAU,SAAA7J,GACR,OAAIA,EAAK+B,YAAc,EAAKyC,MAAMzC,UACzB+H,KAAW9J,EAAM,UAEjB8J,KAAW9J,EAAM,aAG5B+J,OAAQ,CAAEC,WAAY,YAAaC,QAAS,gBAC5CC,iBAAiB,O,kCAOvB,OAAsC,IAAlCnH,KAAKoG,kBAAkBzG,OAGlB,CAAC,IAAIzC,MAGP8C,KAAKoG,kBAAkBhJ,QAAO,SAACgK,EAAMxL,EAAOyL,GACjD,OAAc,IAAVzL,IAGI+C,EAAU0I,EAAIzL,EAAQ,GAAIwL,Q,+BAG5B,IAAD,OACHE,EAAoB,GACxB,GAAItH,KAAKqG,uBAAuB1G,OAAS,EAAG,CAC1C,IAAI/D,EAAQoE,KAAKhF,MAAMY,OAASoE,KAAKqG,uBAAuB1G,OAAS,EACjE4H,EAAyBvH,KAAKC,MAAM7E,aACrCgC,QAAO,SAAAoK,GAAC,OAAI7I,EAAU6I,EAAEvK,KAAM,EAAKoJ,uBAAuBzK,OAC1DiB,KAAI,SAAA2K,GAAC,OAAIA,EAAErK,SAEdmK,GADAA,EAAiB,YAAO,IAAIG,IAAIF,KACM1K,KAAI,SAAAa,GACxC,MAAO,CACLA,OACAgK,MAAOH,EAAuBI,QAAO,SAACC,EAAKC,GACzC,OAAOD,GAAOC,IAAQnK,EAAO,EAAI,KAChC,OAIT,OACE,6BACGsC,KAAK8H,gBACN,yBAAK/H,UAAU,WACiB,IAA7BuH,EAAkB3H,OACf,yBACA2H,EAAkBzK,KAAI,SAAA2K,GAAC,OACrB,yBAAK1K,IAAK0K,EAAE9J,MACT8J,EAAEE,MADL,MACeF,EAAE9J,e,GA3EVyC,aAoFRqC,gBAAQ,SAAAxH,GACrB,MAAO,CACLI,aAAcJ,EAAMmB,SAASC,QAAQhB,gBAF1BoH,CAIZ2D,I,UCvFY,SAAS4B,GAAe9H,GACrC,OACE,yBAAKF,UAAU,SACb,kBAAC,SAAD,CACEwG,MAAO,CAAEC,MAAO,SAChBwB,OAAQ/H,EAAM3B,KAAKsI,OAAO/J,KAAI,SAAAgL,GAAG,OAAIA,EAAI3H,SACzCzG,KAAK,OACLwO,mBAAiB,GAEjB,kBAAC,WAAD,CACE9K,MAAO8C,EAAM3B,KAAKnB,MAClByJ,OAAQ3G,EAAM3B,KAAKsI,OAAO/J,KAAI,SAAAgL,GAAG,OAAI9K,SAAS8K,EAAI7K,UAClDkL,gBAAiBjI,EAAMiI,gBACvBC,YAAalI,EAAMkI,gB,eChBvBC,G,2MACJpN,MAAQ,CAAEqN,MAAM,G,uEACRA,GACFrI,KAAKC,MAAMqI,SACbtI,KAAKU,SAAS,CAAE2H,W,+BAGV,IAAD,OACP,OACE,kBAAC,KAAD,CACEE,QAASvI,KAAKC,MAAMsI,QACpBC,eAAe,EACfC,GAAG,QACHC,QAAS,WACP,EAAKC,SAAQ,IAEfC,OAAQ,WACN,EAAKD,SAAQ,IAEfN,KAAMrI,KAAKhF,MAAMqN,KACjBQ,QAAS7I,KAAKC,MAAM4I,c,GApBR1I,aAAdiI,GAwBGU,aAAe,CACpBR,SAAS,GAIEF,UCnBTW,G,2MACJ/N,MAAQ,CAAEgO,YAAa,EAAGC,cAAe,M,mFAEvCjJ,KAAKU,SAAS,CAAEsI,YAAahJ,KAAKC,MAAMI,e,2CAGxCL,KAAKkJ,oB,wCAIL,IAAMC,EAAWnJ,KAAKC,MAAM7D,QAAQuJ,SAASyD,KAC7C,GAAID,IAAanJ,KAAKhF,MAAMiO,gBAC1BjJ,KAAKU,SAAS,CAAEuI,cAAeE,IAC3BA,GAAYA,EAASxJ,OAAS,GAAG,CACnC,IAAMyH,EAAOiC,SAASC,cAAcH,GACpC/B,GAAQA,EAAKmC,oB,yCAMjB,OAAOvJ,KAAKC,MAAMuJ,cAAc3M,KAAI,SAAAvB,GAClC,OAAIA,EAAO2B,KAAK+B,aAAc,IAAI9B,MAAO8B,UAChC,CACLkB,MAAO6G,KAAWzL,EAAO2B,KAAM,UAC/BD,MAAO1B,EAAOA,QAIT,CACL4E,MAAO6G,KAAWzL,EAAO2B,KAAM,YAC/BD,MAAO1B,EAAOA,a,+BAKZ,IAAD,OACP,OACE,6BACE,yBAAKyE,UAAU,mBAAmB5F,GAAG,kBACnC,8CACA,kBAAC,GAAD,CACEsP,gBAAiBzJ,KAAKC,MAAM7E,aAAayB,KAAI,SAAA6M,GAC3C,OAAOA,EAASzM,WAItB,yBAAK8C,UAAU,mBAAmB5F,GAAG,eACnC,2CACA,kBAAC4N,GAAD,CACEzJ,KAAM,CACJnB,MAAO,SACPyJ,OAAQ5G,KAAK2J,oBAEfzB,gBAAgB,OAChBC,YAAY,SAEd,kBAAC,GAAD,CACEU,QACE,4BAAQ9I,UAAU,sCAChB,uBAAGA,UAAU,eAGjBwI,QACE,6BACE,yBAAKxI,UAAU,0BACb,2BACEtG,KAAK,SACLmQ,KAAK,MACL5M,MAAOgD,KAAKhF,MAAMgO,YAClBa,SAAU,SAAAC,GAAG,OACX,EAAKpJ,SAAS,CAAEsI,YAAac,EAAIC,OAAO/M,SAE1CgN,UAAW,SAAAF,GACW,KAAhBA,EAAIG,SACN,EAAKhK,MAAM3F,UAAU,EAAKU,MAAMgO,cAGpCkB,YAAY,iBAEd,yBAAKnK,UAAU,kBAAf,OAEF,4BACEuC,QAAS,kBAAM,EAAKrC,MAAM3F,UAAU,EAAKU,MAAMgO,eADjD,YASR,yBAAKjJ,UAAU,mBAAmB5F,GAAG,cACnC,0CACA,kBAAC,GAAD,Y,GA7FagG,aAkHRqC,gBAdS,SAAAxH,GACtB,IAAIqF,EAAa,GAMjB,OALIrF,EAAMmB,SAASC,QAAQd,OAAON,EAAMmB,SAASC,QAAQd,OAAOqE,OAAS,KACvEU,EACErF,EAAMmB,SAASC,QAAQd,OAAON,EAAMmB,SAASC,QAAQd,OAAOqE,OAAS,GAClErE,QAEA,CACLF,aAAcJ,EAAMmB,SAASC,QAAQhB,aACrCoO,cAAexO,EAAMmB,SAASC,QAAQd,OACtC+E,gBAIoC,CAAE/F,aAA3BkI,CAAwCuG,ICtHjDoB,G,4LAEiB,IAAD,OAClB,OAAKnK,KAAKC,MAAMmF,eAId,yBAAKrF,UAAU,+CACb,yBACEA,UAAU,YACVuC,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,iBAEvC,uBAAG6B,UAAU,uBAJf,mBAMA,yBAAKA,UAAU,yBAAf,MACA,yBACEA,UAAU,YACVuC,QAAS,kBAAM,EAAKrC,MAAM7D,QAAQ8B,KAAK,cAEvC,uBAAG6B,UAAU,cAJf,YAIyC,IACtCC,KAAKC,MAAMmF,eAAejI,QAhBxB,O,+BAqBD,IAAD,OACP,OACE,6BACE,yBAAK4C,UAAU,SACb,yBAAKA,UAAU,WAAf,kBAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,8BACb,kBAAC,GAAD,CACE8I,QACE,yBAAK9I,UAAU,iBACb,uBACEA,UAAU,cACVuC,QAAS,WACH,EAAKrC,MAAMmF,gBACb,EAAKnF,MAAM7D,QAAQ8B,KAAK,eAI9B,yDAGJqK,QAASvI,KAAKoK,oBACd9B,UAAWtI,KAAKC,MAAMmF,wB,GAnDjBjF,aAuEJqC,gBAXS,SAAAxH,GAKtB,MAAO,CACLoK,eALqBnG,EACrBjE,EAAMiB,QAAQN,QACdX,EAAMmB,SAASE,UAIfrB,WAIWwH,CAAyB2H,I,qlBC7ElCE,G,2MACJC,aAAe,CACbC,OAAQ,SAAAC,GAAQ,aACXA,EADW,CAEdC,SAAU,OACVC,WAAY,OACZC,MAAO,SACJ,EAAK1K,MAAM2K,YAAYJ,WAE5BK,QAAS,SAAAL,GAAQ,WACfC,SAAU,OACVC,WAAY,QACTF,EAHY,GAIZ,EAAKvK,MAAM2K,YAAYC,UAE5BC,YAAa,sBACXL,SAAU,OACVC,WAAY,QACT,EAAKzK,MAAM2K,YAAYE,e,wEAGpB,IAAD,OACP,OACE,6BACE,kBAAC,KAAD,CACEC,QAAS/K,KAAKC,MAAM8K,QACpB/D,OAAQhH,KAAKsK,aACbU,QAAShL,KAAKC,MAAM+K,QACpBC,eAAgBjL,KAAKC,MAAMiL,SAC3BrB,SAAU,SAAAV,GACJ,EAAKlJ,MAAM4J,WACTlJ,MAAMwK,QAAQhC,GAChB,EAAKlJ,MAAM4J,SAASV,GAEpB,EAAKlJ,MAAM4J,SAASV,EAASnM,SAInCA,MAAOgD,KAAKC,MAAMjD,MAClBoO,iBAAkB,iBAChB,8D,GAxCWjL,aAAjBkK,GA8CGvB,aAAe,CACpB8B,YAAa,IAIFP,U,UC/CTgB,GAAU,SAAChM,EAAMiM,EAAYC,GACjC,IAAMC,EAAS7K,MAAMC,KAAKvB,GADoB,EAE5BmM,EAAOhO,OAAO8N,EAAY,GAArCG,EAFuC,oBAK9C,OAFAD,EAAOhO,OAAO+N,EAAU,EAAGE,GAEpBD,GAGM,SAASE,GAAgBzL,GACtC,OACE,kBAAC,KAAD,CACE0L,UAAW,SAAAH,GAET,GAAKA,EAAOI,YAAZ,CAKA,IAAMC,EAAQR,GACZpL,EAAM4L,MACNL,EAAOM,OAAOlQ,MACd4P,EAAOI,YAAYhQ,OAIrBqE,EAAM0L,UAAUE,EAAMhP,KAAI,SAAAkP,GAAC,OAAIA,EAAE5R,UAGnC,kBAAC,KAAD,CAAW6R,YAAY,cACpB,SAAAxB,GAAQ,OACP,yCAASA,EAASyB,eAAlB,CAAkCC,IAAK1B,EAAS2B,WAC7ClM,EAAM4L,MAAMhP,KAAI,SAAC0C,EAAM3D,GAAP,OACf,kBAAC,KAAD,CACEkB,IAAK,GAAKyC,EAAKpF,GAAKyB,EACpBwQ,YAAa,GAAK7M,EAAKpF,GAAKyB,EAC5BA,MAAOA,IAEN,SAAA4O,GAAQ,OACP,uCACE0B,IAAK1B,EAAS2B,UACV3B,EAAS6B,eACT7B,EAAS8B,iBAEZ/M,EAAKgJ,eAKbiC,EAASN,iB,ikBClChBqC,G,2MACJvR,MAAQ,CACNmO,SAAU,KACVxN,QAAS,CAAExB,IAAK,EAAGgD,MAAO,KAAMb,UAAW,IAC3CnC,GAAI4C,SAAS,EAAKkD,MAAMuM,MAAMC,OAAOtS,IACrCgD,MAAO,M,mFAIP6C,KAAK0M,gB,oCAIL,IAAMvS,EAAK4C,SAASiD,KAAKC,MAAMuM,MAAMC,OAAOtS,IACtCwB,EAAUqE,KAAKf,WAAW9E,IACpB,IAARA,EACF6F,KAAKU,SAAS,CACZ/E,QAAS,CAAExB,IAAK,EAAGgD,MAAO,KAAMb,UAAW,IAC3Ca,MAAO,mDAEY,OAAZxB,EACTqE,KAAKC,MAAM7D,QAAQ8B,KAAK,eAExB8B,KAAKU,SAAS,CAAE/E,UAASxB,GAAIwB,EAAQxB,GAAIgD,MAAOxB,EAAQwB,U,yCAIzCwP,EAAGC,GAEpB,IAAMzS,EAAK4C,SAASiD,KAAKC,MAAMuM,MAAMC,OAAOtS,IACtCwB,EAAUqE,KAAKf,WAAW9E,IACpB,IAARA,IAAuC,IAA1ByS,EAAUjR,QAAQxB,GACjC6F,KAAKU,SAAS,CACZ/E,QAAS,CAAExB,IAAK,EAAGgD,MAAO,KAAMb,UAAW,IAC3Ca,MAAO,mDAEY,OAAZxB,IAA4B,IAARxB,EAC7B6F,KAAKC,MAAM7D,QAAQ8B,KAAK,gBACP,IAAR/D,GACLwB,EAAQW,YAAcsQ,EAAUjR,QAAQW,WAC1C0D,KAAKU,SAAS,CAAE/E,UAASxB,GAAIwB,EAAQxB,GAAIgD,MAAOxB,EAAQwB,U,2CAOxC,IAAD,OACnB,OACE,yBAAK4C,UAAU,SACb,kBAAC2L,GAAD,CACEC,UAAW,SAAAkB,GACT,EAAK5M,MAAM6M,YAAY,EAAK9R,MAAMW,QAAQxB,GAAI,CAAEmC,UAAWuQ,IAC3D,EAAKH,eAEPb,MAAO7L,KAAKhF,MAAMW,QAAQW,UACvBO,KAAI,SAAC7C,EAAY4B,GAEhB,IAAM1B,EAAWiF,EACfnF,EACA,EAAKiG,MAAM8M,gBAEb,OAAI7S,EAEK,CACLqO,QACE,yBACExI,UAAU,uCACVjD,IAAK,GAAK5C,EAASC,GAAKyB,GAExB,yBAAKmE,UAAU,WACb,yBAAKA,UAAU,oCACZ7F,EAASwD,MAEZ,yBAAKqC,UAAU,mBACb,uBACEA,UAAU,kBACVuC,QAAS,kBACP,EAAKrC,MAAM7D,QAAQ8B,KACjB,aAAehE,EAASC,QAKhC,yBAAK4F,UAAU,mBACb,uBACEA,UAAU,6BACVuC,QAAS,kBACP,EAAKrC,MAAM+M,0BACTpR,EACA,EAAKZ,MAAMW,QAAQxB,UAQjCA,GAAIH,GAGC,CAAEuO,QAAS,8BAAapO,IAAK,MAGvCiD,QAAO,SAAAgK,GAAI,YAAarL,IAATqL,OAEnBpH,KAAKiN,oB,uCAIM,IAAD,OACf,OACE,yBAAKlN,UAAU,wCACb,kBAAC,GAAD,CACEiL,QAAShL,KAAKC,MAAM8M,eAAelQ,KAAI,SAAA3C,GACrC,MAAO,CACL8C,MAAO9C,EAASC,GAChB+F,MACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,sBAAsB7F,EAASwD,MAC9C,yBAAKqC,UAAU,mBACb,uBACEA,UAAU,uBACVmN,YAAa,WACX,EAAKxM,SAAS,CAAEyM,eAAe,KAEjCC,aAAc,WACZ,EAAK1M,SAAS,CAAEyM,eAAe,KAEjC7K,QAAS,SAAAwH,GACPA,EAAIuD,kBACJ,EAAKpN,MAAMlG,eAAeG,EAASC,aAQjD0P,SAAU,SAAAV,GAEH,EAAKnO,MAAMmS,eACd,EAAKlN,MAAMqN,qBAAqBnE,EAAU,EAAKnO,MAAMW,QAAQxB,KAGjE+Q,SAAU,SAAA/B,GAER,IAAMjD,EAAmBvJ,EAAM,EAAKsD,MAAM8M,gBAC1C,EAAK9M,MAAMpG,YAAYsP,GACvB,EAAKlJ,MAAMqN,qBACTpH,EACA,EAAKlL,MAAMW,QAAQxB,IAGrB,EAAK8F,MAAM7D,QAAQ8B,KAAK,aAAegI,IAEzC0E,YAAa,CACXC,QAAS,CACP3C,gBAAiB,UACjBqF,OAAQ,wB,+BAOV,IAAD,OAGP,OAAKvN,KAAKhF,MAAMW,QAKd,6BACE,4BAAKqE,KAAKhF,MAAMW,QAAQwB,OAAS,yBACjC,0BAAM4C,UAAU,WACd,yBAAKA,UAAU,SAIb,kBAAC,GAAD,CACEiL,QAAShL,KAAKC,MAAMuN,cAAc3Q,KAAI,SAAAlB,GACpC,MAAO,CACLqB,MAAOrB,EAAQxB,GACf+F,MACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,sBAAsBpE,EAAQwB,OAC7C,yBAAK4C,UAAU,mBACb,uBACEuC,QAAS,kBAAM,EAAKrC,MAAMwN,cAAc9R,EAAQxB,KAChD+S,YAAa,WACX,EAAKxM,SAAS,CAAEyM,eAAe,KAEjCC,aAAc,WACZ,EAAK1M,SAAS,CAAEyM,eAAe,KAEjCpN,UAAU,+BAOtB8J,SAAU,SAAAV,GACH,EAAKnO,MAAMmS,eACd,EAAKlN,MAAM7D,QAAQ8B,KAAK,YAAciL,IAG1CnM,MAAO,CAAEA,MAAOgD,KAAKhF,MAAMmC,MAAO+C,MAAOF,KAAKhF,MAAMmC,OACpD+N,SAAU,SAAAwC,GACR,EAAKzN,MAAM0N,WAAWD,GACtB,EAAKzN,MAAM7D,QAAQ8B,KACjB,YAAcvB,EAAM,EAAKsD,MAAMuN,oBAKT,OAA7BxN,KAAKhF,MAAMW,QAAQwB,MAAiB6C,KAAK4N,qBAAuB,MACrC,IAA3B5N,KAAKhF,MAAMW,QAAQxB,GAClB,yBAAK4F,UAAU,2CACb,yBAAKA,UAAU,YAAf,eACA,2BACE/C,MACEgD,KAAKhF,MAAMW,QAAQF,WAAauE,KAAKC,MAAM4N,iBAE7ChE,SAAU,SAAAC,GACR,EAAKpJ,SAAS,CACZ/E,QAAQ,MACH,EAAKX,MAAMW,QADT,CAELF,UAAWqO,EAAIC,OAAO/M,UAG1B,EAAKiD,MAAM6M,YAAY,EAAK9R,MAAMW,QAAQxB,GAA1C,MACK,EAAKa,MAAMW,QADhB,CAEEF,UAAWqO,EAAIC,OAAO/M,YAI5B,yBAAK+C,UAAU,kBAAf,QAEA,KACJ,6BACE,4BACEA,UACE,oBACCC,KAAKhF,MAAMW,QAAQW,UAAUqD,OAAS,EAAI,GAAK,aAElD2C,QAAS,WACP,EAAKrC,MAAM1G,WAAW,EAAKyB,MAAMW,QAAQxB,IACzC,EAAK8F,MAAM7D,QAAQ8B,KAAK,cAP5B,YAzEC,6C,iCA4FA/D,GACT,IAAMwB,EAAUsD,EAAW9E,EAAI6F,KAAKC,MAAM6N,aAC1C,OAAInS,GAGK,S,GA3QgBwE,aA0RdqC,gBAVS,SAAAxH,GACtB,MAAO,CACLmB,SAAUnB,EAAMmB,SAChB2R,YAAa9S,EAAMmB,SAASE,SAC5BmR,cAAexS,EAAMmB,SAASE,SAC9B0Q,eAAgB/R,EAAMmB,SAASG,UAC/BuR,iBAAkB7S,EAAMmB,SAASZ,cAAcE,aAIX,CACtClC,aACAM,cACA8T,WtB7OwB,SAAAI,GACxB,MAAO,CAAEtU,KAAM,cAAeC,QAASqU,IsB6OvCN,ctB1O2B,SAAAjU,GAC3B,MAAO,CAAEC,KAAM,iBAAkBC,QAASF,IsB0O1C8T,qBtBzQkC,SAACtT,EAAYR,GAC/C,MAAO,CACLC,KAAM,0BACNC,QAAS,CAAEM,aAAYR,esBuQzBwT,0BtBnQuC,SAACvP,EAAUjE,GAClD,MAAO,CACLC,KAAM,+BACNC,QAAS,CAAE+D,WAAUjE,esBiQvBO,iBACA+S,YtB9PyB,SAACtT,EAAWmC,GACrC,MAAO,CAAElC,KAAM,eAAgBC,QAAS,CAAEF,YAAWmC,asB8PrDhC,gBATa6I,CAUZ+J,I,oBCpRYyB,G,YA/Bb,WAAY/N,GAAQ,IAAD,8BACjB,4CAAMA,KAFRjF,MAAQ,CAAEiT,MAAO,GAGf,EAAKC,SAAWC,IAAMC,YAFL,E,iFAIE,IAAD,OAClBpO,KAAKkO,SAASjS,QAAQoS,iBAAiB,QAAQ,kBAAM,EAAKC,gB,iCAK1D,GAAItO,KAAKkO,SAASjS,QAAS,CACzB,IAAMgS,EAAQlN,KAAKwN,KAAKvO,KAAKkO,SAASjS,QAAQuS,aAAe,IAC7DxO,KAAKU,SAAS,CAAEuN,a,+BAGV,IAAD,SACmBjO,KAAKC,MAAM4D,MAA7BE,EADD,EACCA,IAAK0K,EADN,EACMA,SAEb,OACE,yBAAKlI,MAAO,CAAEmI,WAAY,QAAU1O,KAAKhF,MAAMiT,QAC7C,yBACE/B,IAAKlM,KAAKkO,SACVnK,IAAKA,EACLD,IAAK2K,EACLnM,QAAS,kBAAM,EAAKrC,MAAM0O,SAASF,W,GA1BrBN,IAAMhO,WCwNfyO,G,YA3Mb,WAAY3O,GAAQ,IAAD,8BACjB,4CAAMA,KAVR4O,UAAY,IASO,EARnB7T,MAAQ,CACN8T,gBAAiB,GACjBC,UAAW,GACXC,eAAgB,KAChBC,WAAY,IAMZ,EAAKf,SAAWC,IAAMC,YAFL,E,iFAMbpO,KAAKkO,SAASjS,SAChB+D,KAAKkP,mB,2CAMHlP,KAAKkO,SAASjS,UAAY+D,KAAKhF,MAAMiU,WAAWxI,QAClDzG,KAAKkP,mB,uCAIS,IAAD,OACflP,KAAKkO,SAASjS,QAAQoS,iBAAiB,QAAQ,WAAO,IAAD,EACzB,EAAKH,SAASjS,QAAhCuK,EAD2C,EAC3CA,MAAOC,EADoC,EACpCA,OACT0I,GACK,EAAKN,UAAY,EAAKA,WAC3BO,EAAW5I,GAAS2I,EAAY1I,GACtC,EAAK/F,SAAS,CAAEuO,WAAY,CAAExI,OAAQ0I,EAAW3I,MAAO4I,U,4EAIzCC,G,4FAGGtT,IAAhBiE,KAAKsP,QACPtP,KAAKsP,S,kBAGiBlW,IAAMmW,IAC1B,2HACEF,EACF,CACEG,YAAa,IAAIpW,IAAMqW,aAAY,SAAAC,GACjC,EAAKJ,OAASI,O,OALdC,E,OASAX,EAAiBW,EAAQrR,KAAKsR,QAAQ/S,KAAI,SAAAgH,GAC9C,MAAO,CACLE,IAAKF,EAAMgM,gBACXpB,SAAU5K,EAAMiM,KAAKC,QACrB5V,GAAI0J,EAAM1J,OAGV6F,KAAKhF,MAAM8T,kBAAoBO,GACjCrP,KAAKU,SAAS,CAAEsO,mB,oMAQP,IAAD,SACgChP,KAAKhF,MAAzC8T,EADI,EACJA,gBAAiBE,EADb,EACaA,eACzB,GAAIF,EAAiB,CACnB,GAAuB,OAAnBE,EACF,OAAO,8CAAoBF,EAApB,OACF,GAA8B,IAA1BE,EAAerP,OACxB,OAAO,0DAAgCmP,GAEvC,IAAMkB,EAAYhB,EAAenS,KAAI,SAAAgH,GAAK,OACxC,kBAAC,GAAD,CACE/G,IAAK+G,EAAM1J,GACX0J,MAAOA,EACP8K,SAAU,SAAA9K,GACR,EAAKnD,SAAS,CAAEuO,WAAY,KAC5B,EAAKhP,MAAM4J,SAAS,CAClBE,OAAQ,CACN/M,MAAO,CACLiT,WAAW,EACXC,SAAUrM,GAEZnG,KAAM,iBAMhB,OAAO,yBAAKqC,UAAU,cAAciQ,GAGtC,OAAO,kE,+BAGD,IAAD,SAC8BhQ,KAAKC,MAAMjD,MAAxCiT,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUnM,EADtB,EACsBA,IADtB,EAEgC/D,KAAKhF,MAApC8T,EAFD,EAECA,gBAAiBC,EAFlB,EAEkBA,UAEzB,OAAIkB,EAEA,yBACElQ,UAAU,wCACVwG,MAAOvG,KAAKhF,MAAMiU,YAElB,uBACElP,UAAU,gCACVoQ,KAAK,eACL7N,QAAS,SAAAwH,GAAG,OAAIA,EAAIsG,mBAEpB,uBACErQ,UAAU,aACVuC,QAAS,kBACP,EAAKrC,MAAM4J,SAAS,CAClBE,OAAQ,CACN/M,MAAO,CACLiT,WAAW,GAEbvS,KAAM,eAMhB,yBAAKoG,IAAKoM,EAAUnM,IAAK,YAAcA,EAAKmI,IAAKlM,KAAKkO,YASxD,6BACE,yBAAKnO,UAAU,0BACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,2BAAOsQ,QAAQ,YAAf,wBACA,2BACElW,GAAG,WACH6C,MAAO+R,EACPlF,SAAU,SAAAyG,GACR,EAAK5P,SAAS,CAAEqO,UAAWuB,EAAMvG,OAAO/M,SAE1CgN,UAAW,SAAAlM,GACK,UAAVA,EAAEhB,MACJgB,EAAEsS,iBAEF,EAAKnQ,MAAM4J,SAAS,CAClBE,OAAQ,CACN/M,MAAO,CACLiT,WAAW,EACXC,SAAUnB,GAEZrR,KAAM,WAGV,EAAKgD,SAAS,CAAEqO,UAAW,WAMrC,yBAAKhP,UAAU,yBACb,yBAAKA,UAAU,SACb,2BAAOsQ,QAAQ,iBAAf,2BACA,kBAAC,KAAD,CACE7J,MAAM,QACN+J,aAAc,CAAE/J,MAAO,SACvBqC,QACE,2BACEpP,KAAK,OACLU,GAAG,gBACH6C,MAAO8R,EACPjF,SAAU,SAAAyG,GACR,EAAKE,aAAaF,EAAMvG,OAAO/M,OAE/B,EAAK0D,SAAS,CACZoO,gBAAiBwB,EAAMvG,OAAO/M,SAGlCgN,UAAW,SAAAlM,GACK,UAAVA,EAAEhB,MACJgB,EAAEsS,iBACF,EAAKI,aAAa,EAAKxV,MAAM8T,mBAGjC2B,aAAa,QAGjBhI,GAAG,SAEFzI,KAAK0Q,kBAKd,yBAAK3Q,UAAU,uBAAf,Y,GA7MeI,aCcrBwQ,G,2MACJ3V,MAAQ,CAAE4V,aAAa,EAAO9W,aAAc,I,mFAER,IAA9BkG,KAAKC,MAAM1D,QAAQoD,QACrBK,KAAKC,MAAM4Q,aAGbC,OAAOzC,iBAAiB,eAAgBrO,KAAK+Q,aAAavP,KAAKxB,S,mCAEpDlC,GACPkC,KAAKhF,MAAM4V,cACb9S,EAAEsS,iBACFtS,EAAEkT,aAAc,K,6CAIlBhR,KAAKU,SAAS,CAAEkQ,aAAa,IAC7BE,OAAOG,oBAAoB,eAAgBjR,KAAK+Q,aAAavP,KAAKxB,S,+BAE1D,IAAD,SACiDA,KAAKC,MAAM/F,SAA3DwD,EADD,EACCA,KAAMC,EADP,EACOA,SAAUqG,EADjB,EACiBA,YAAaH,EAD9B,EAC8BA,MAAOtH,EADrC,EACqCA,QAC5C,OACE,yBAAK2P,IAAK,SAAA9E,GAAI,OAAK,EAAK8J,KAAO9J,IAC7B,kBAAC,IAAD,CACE+J,KAAMnR,KAAKhF,MAAM4V,YACjBQ,QAAS,+DAEX,kBAAC,KAAD,CACEC,kBAAgB,EAChBC,oBAAkB,EAClBC,cAAe,CACb7T,KAAMA,EAAK8T,WAAW,oBAAsB,GAAK9T,EACjDC,SAAUA,GAAYqC,KAAKC,MAAMwR,SAASjW,iBAC1CwI,YAAaA,GAAe,GAC5BzH,QAASA,GAAW,GACpBsH,MAAO,CACLoM,UAAoB,MAATpM,EACXqM,SAAUrM,GAAS,GACnBE,IAAKrG,EACLoR,gBAAiB,GACjBC,UAAW,KAGflF,SAAU,SAAAC,GAAG,OAAI3L,QAAQC,IAAI0L,IAC7B4H,SAAU,SAAA9K,GACR,EAAKlG,SAAS,CAAEkQ,aAAa,EAAM9W,aAAc8M,EAAOlJ,OACxD,IAAMiU,EAAS,GASf,MARoB,KAAhB/K,EAAOlJ,OACTiU,EAAOjU,KAAO,uBAEXkJ,EAAOjJ,SAEDiJ,EAAOjJ,UAAY,IAC5BgU,EAAOhU,SAAW,+BAFlBgU,EAAOhU,SAAW,0BAIbgU,GAETC,SAAU,SAAAhL,GACR,EAAKlG,SAAS,CAAEkQ,aAAa,IADX,IAEVlT,EAAgDkJ,EAAhDlJ,KAAMC,EAA0CiJ,EAA1CjJ,SAAUqG,EAAgC4C,EAAhC5C,YAAaH,EAAmB+C,EAAnB/C,MAAOtH,EAAYqK,EAAZrK,QAC5C,EAAK0D,MAAMhG,aACT,CACEyD,OACAC,WACAqG,cACAzH,UACAsH,MAAOA,EAAMoM,UAAYpM,EAAMqM,SAAW,MAE5C,EAAKjQ,MAAM/F,SAASC,IAGtB,EAAK8F,MAAM4R,UAGZ,YAOM,IANLjL,EAMI,EANJA,OACA+K,EAKI,EALJA,OACAG,EAII,EAJJA,QACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEA,OACE,0BACElS,UAAU,UACV6R,SAAUK,EACVC,WAAY,SAAApI,GACQ,KAAdA,EAAIqI,OACNrI,EAAIsG,mBAIR,yBAAKrQ,UAAU,kBACb,wCACA,2BACEtG,KAAK,OACLiE,KAAK,OACLwM,YAAY,gBACZL,SAAUkI,EACVK,OAAQJ,EACRhV,MAAO4J,EAAOlJ,OAEfiU,EAAOjU,MAAQoU,EAAQpU,MACtB,yBAAKqC,UAAU,cAAc4R,EAAOjU,OAGxC,yBAAKqC,UAAU,kBACb,gDACA,2BACEtG,KAAK,SACLiE,KAAK,WACLwM,YAAY,sBACZL,SAAUkI,EACVK,OAAQJ,EACRhV,MAAO4J,EAAOjJ,WAEfgU,EAAOhU,UAAYmU,EAAQnU,UAC1B,yBAAKoC,UAAU,cAAc4R,EAAOhU,WAGxC,yBAAKoC,UAAU,SACb,2CACA,kBAAC,GAAD,CACEgL,SAAO,EACPG,SAAU,SAAAxN,GACR,IAAM2U,EAAQ1V,EAAM,EAAKsD,MAAM1D,SAC/B,EAAK0D,MAAMqS,aAAa5U,GACxBqU,EAAa,CACXhI,OAAQ,CACN/M,MAAM,GAAD,mBACA4J,EAAOrK,SADP,CAEH,CAAES,MAAOqV,EAAOnS,MAAOxC,KAEzBA,KAAM,cAIZmM,SAAU,SAAAC,GACRiI,EAAa,CACXhI,OAAQ,CACN/M,MAAO8M,EACPpM,KAAM,cAIZV,OAAQ4J,EAAOrK,SAAW,IAAIM,KAAI,SAAAJ,GAChC,MAAO,CACLO,MAAOP,EAAOO,MACdkD,MAAO,EAAKD,MAAM1D,QAAQe,MACxB,SAAAiV,GAAC,OAAIA,EAAEpY,KAAOsC,EAAOO,SACrBU,SAGNsN,SAAU,EAAK/K,MAAM1D,SAAW,IAAIM,KAAI,SAAAJ,GACtC,MAAO,CACLO,MAAOP,EAAOtC,GACd+F,MACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,sBACZtD,EAAOiB,MAEV,yBAAKqC,UAAU,mBACb,uBACEuC,QAAS,SAAAwH,GACPA,EAAIuD,kBACJ,EAAKpN,MAAMuS,aAAa/V,EAAOtC,KAEjC4F,UAAU,kCAS1B,yBAAKA,UAAU,SACb,+CACA,8BACErC,KAAK,cACLmM,SAAUkI,EACV/U,MAAO4J,EAAO5C,eAGlB,yBAAKjE,UAAU,SACb,yCACA,kBAAC,KAAD,CACE0S,GAAIC,GACJ7I,SAAUkI,EACVrU,KAAK,QACLqC,UAAU,iBAGd,4BACEtG,KAAK,SACLsG,UACE,cACC4R,EAAOjU,MAAQiU,EAAOhU,SAAW,WAAa,OAJnD,QASA,4BACElE,KAAK,SACLsG,UAAU,gBACVuC,QAAS,WACP,EAAKrC,MAAMlG,eAAe,EAAKkG,MAAM/F,SAASC,IAC9C,EAAK8F,MAAM4R,SALf,4B,GA1MW1R,aAmOZqC,gBANS,SAAAxH,GACtB,MAAO,CACLyW,SAAUzW,EAAMmB,SAASZ,cACzBgB,QAASvB,EAAMmB,SAASI,WAGY,CACtCtC,eACAqY,azB7I0B,SAAAK,GAC1B,MAAO,CAAElZ,KAAM,gBAAiBC,QAASiZ,IyB6IzC9B,WzBpHwB,yDAAM,WAAM+B,GAAN,eAAAnT,EAAA,sEACPpB,EAAKkR,IAAI,gBADF,OACxBsD,EADwB,OAG9BD,EAAS,CAAEnZ,KAAM,cAAeC,QAASmZ,EAASvU,KAAKsR,UAHzB,2CAAN,uDyBqHxB4C,azB3I0B,SAAArY,GAC1B,MAAO,CAAEV,KAAM,gBAAiBC,QAASS,IyB2IzCJ,kBALayI,CAMZmO,ICnPGmC,G,2MACJ9X,MAAQ,CAAEd,SAAU,M,mFAElB8F,KAAKb,YAAYa,KAAKC,MAAMuM,MAAMC,OAAOtS,M,yCAExB4K,EAAW6H,GAC5B,IAAMzS,EAAK4C,SAASiD,KAAKC,MAAMuM,MAAMC,OAAOtS,IACxCyS,EAAUzS,KAAOA,GACnB6F,KAAKb,YAAYhF,K,kCAKTA,GACV,IAAMD,EAAW8F,KAAKC,MAAM3D,UAAUgB,MAAK,SAAAD,GAAE,OAAIA,EAAGlD,KAAO4C,SAAS5C,MAC/DD,GAGL8F,KAAKU,SAAS,CACZvG,KACAD,e,+BAGM,IAAD,OAEP,OAAK8F,KAAKhF,MAAMd,SA0Cd,kBAAC,GAAD,CACEA,SAAU8F,KAAKhF,MAAMd,SACrB2X,KAAM7R,KAAKC,MAAM7D,QAAQ2W,OAAOvR,KAAKxB,QA1CrC,6BACE,yBAAKD,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mDAAf,iCAIF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,4BACEA,UAAU,YACVuC,QAAS,WACP,EAAKrC,MAAM7D,QAAQ2W,WAGrB,uBAAGhT,UAAU,qCANf,SAUF,yBAAKA,UAAU,uBACb,4BACEA,UAAU,YACVuC,QAAS,WACP,IAAM4D,EAAmBvJ,EAAM,EAAKsD,MAAM3D,WAC1C,EAAK2D,MAAMpG,YAAY,IACvB,EAAKoG,MAAM7D,QAAQ8B,KAAK,aAAegI,KAGzC,uBAAGnG,UAAU,qBARf,wB,GA/CcI,aAiFfqC,gBANS,SAAAxH,GACtB,MAAO,CACLsB,UAAWtB,EAAMmB,SAASG,aAIU,CAAErC,eAAcJ,eAAzC2I,CACbsQ,I,UC1Fa,SAASE,GAAW/S,GACjC,OACE,kBAAC,KAAD,CACEgT,OAAQ,SAAAnJ,GACN,IAAMoJ,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAEdnT,EAAMoT,aAAaH,EAAO1H,SAE5B0H,EAAOI,WAAWxJ,EAAI,OAGvB,gBAAGyJ,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,uCAAKzT,UAAU,aAAgBwT,KAC7B,0BAAWC,KACVvT,EAAM+D,gB,6jBCjBjB,IAsCeyP,GAtCa,SAAAxT,GAC1B,OACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,eACb,2BACEtG,KAAK,WACLia,QACEzT,EAAM0T,aACF1T,EAAM2G,OAAOxK,QAAQ6D,EAAMC,MAAM0T,eACjC3T,EAAM2G,OAAO3G,EAAMC,MAAM0T,eAE/B/J,SAAU,SAAAC,GACJ7J,EAAM0T,aACR1T,EAAMS,SAAS,CACbmT,OAAO,MACF5T,EAAM2G,OADL,CAEJxK,QAAQ,MACH6D,EAAM2G,OAAOxK,QADX,eAEJ6D,EAAMC,MAAM0T,cAAgB9J,EAAIC,OAAO2J,cAK9CzT,EAAMS,SAAS,CACbmT,OAAO,MACF5T,EAAM2G,OADL,eAEH3G,EAAMC,MAAM0T,cAAgB9J,EAAIC,OAAO2J,eAMlD,+BAAQzT,EAAMC,UCpBhB4T,G,2MACJ9Y,MAAQ,CACN+Y,kBAAkB,EAClBF,OAAQ,CACNvX,WAAW,EACXD,UAAU,EACVE,SAAS,EACTH,QAAS,CACPC,UAAU,EACVf,QAAQ,EACR,iBAAiB,K,EA6CvB0Y,gBAAkB,SAAAlK,GAChB,EAAK7J,MAAM+T,gBAAgBlK,EAAIC,OAAO/M,MAAO8M,EAAIC,OAAOrM,O,yEA1ChDoM,GACRA,EAAIsG,iBAEFU,OAAOmD,QAAQ,4DAEfjU,KAAKC,MAAMiU,UAAUlU,KAAKhF,MAAM6Y,U,iCAIlC,MACE,2BACAM,mBAAmBzZ,KAAKO,UAAU+E,KAAKC,MAAM9D,a,kCAGrCiY,GAEV,IACE,IAAIC,EAAO3Z,KAAKC,MAAMyZ,GACd9X,EAAiC+X,EAAjC/X,UAAWD,EAAsBgY,EAAtBhY,SAAUD,EAAYiY,EAAZjY,QACzBA,GACFwD,EAAqByU,EAAKjY,SAG1BuE,MAAMwK,QAAQ7O,IACdqE,MAAMwK,QAAQ9O,IACdD,GACAuE,MAAMwK,QAAQ/O,EAAQhB,eACe,kBAA9BgB,EAAQf,mBACfsF,MAAMwK,QAAQ/O,EAAQd,UAElB0E,KAAKC,MAAM8T,iBACb/T,KAAKC,MAAMqU,YAAYD,GAEvBrU,KAAKC,MAAMsU,YAAYF,IAG3B,MAAOG,GACPxU,KAAKU,SAAS,CAAE+T,iBAAkB,8B,+BAO5B,IAAD,OACP,OACE,0BAAM1U,UAAU,WACd,yBAAKA,UAAU,sBAAf,YACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,oDACA,2BACErC,KAAK,mBACLjE,KAAK,SACLuD,MAAOgD,KAAKC,MAAM1E,cAAcC,iBAChCqO,SAAU,SAAAC,GACiB,KAArBA,EAAIC,OAAO/M,OACb,EAAKgX,gBAAgBlK,OAK7B,yBAAK/J,UAAU,SACb,8CACA,2BACErC,KAAK,YACLjE,KAAK,SACLuD,MAAOgD,KAAKC,MAAM1E,cAAcE,UAChCoO,SAAU,SAAAC,GACiB,KAArBA,EAAIC,OAAO/M,OACb,EAAKgX,gBAAgBlK,OAK7B,yBAAK/J,UAAU,SACb,+CACA,kCAGJ,yBAAKA,UAAU,sBAAf,QACA,yBAAKA,UAAU,SACb,0EACA,uBACEA,UAAU,YACVoQ,KAAM,SAAWnQ,KAAK0U,WACtBC,SAAS,oBACTxX,MAAM,kCAJR,aASF,yBAAK4C,UAAU,SACb,6DACA,kBAACiT,GAAD,CACEK,aAAcrT,KAAKsU,YAAY9S,KAAKxB,MACpCgE,YAAY,kEAEd,6BAAMhE,KAAKhF,MAAMyZ,kBACjB,yBAAK1U,UAAU,SACb,yBAAKA,UAAU,eACb,2BACEtG,KAAK,WACLia,QAAS1T,KAAKhF,MAAM+Y,iBACpBlK,SAAU,kBACR,EAAKnJ,SAAS,CACZqT,kBAAmB,EAAK/Y,MAAM+Y,sBAIpC,wDAIN,yBAAKhU,UAAU,SACb,+CACA,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CACEW,SAAUV,KAAKU,SAASc,KAAKxB,MAC7BE,MAAO,YACP0G,OAAQ5G,KAAKhF,MAAM6Y,SAErB,kBAAC,GAAD,CACEnT,SAAUV,KAAKU,SAASc,KAAKxB,MAC7BE,MAAO,WACP0G,OAAQ5G,KAAKhF,MAAM6Y,SAErB,kBAAC,GAAD,CACEnT,SAAUV,KAAKU,SAASc,KAAKxB,MAC7BE,MAAO,UACP0G,OAAQ5G,KAAKhF,MAAM6Y,SAErB,yBAAK9T,UAAU,iBACb,2CACA,kBAAC,GAAD,CACE4T,cAAY,EACZjT,SAAUV,KAAKU,SAASc,KAAKxB,MAC7BE,MAAO,SACP0G,OAAQ5G,KAAKhF,MAAM6Y,SAErB,kBAAC,GAAD,CACEF,cAAY,EACZjT,SAAUV,KAAKU,SAASc,KAAKxB,MAC7BE,MAAO,WACP0G,OAAQ5G,KAAKhF,MAAM6Y,SAErB,kBAAC,GAAD,CACEF,cAAY,EACZjT,SAAUV,KAAKU,SAASc,KAAKxB,MAC7BE,MAAO,gBACP0G,OAAQ5G,KAAKhF,MAAM6Y,WAIzB,4BACEpa,KAAK,SACLsG,UAAU,gBACVuC,QAAStC,KAAKkU,UAAU1S,KAAKxB,OAH/B,gB,GAxKaG,aA4LRqC,gBAPS,SAAAxH,GACtB,MAAO,CACLmB,SAAUnB,EAAMmB,SAChBZ,cAAeP,EAAMmB,SAASZ,iBAIM,CACtC2Y,U7BzGuB,SAAAU,GACvB,MAAO,CAAEnb,KAAM,aAAcC,QAASkb,I6ByGtCN,Y7BnFyB,SAAAhW,GACzB,MAAO,CAAE7E,KAAM,gBAAiBC,QAAS4E,I6BmFzC0V,gB7BvG6B,SAAChX,EAAOF,GACrC,MAAO,CAAErD,KAAM,oBAAqBC,QAAS,CAAEoD,MAAKE,W6BuGpDuX,Y7BjFyB,SAAAjW,GACzB,MAAO,CAAE7E,KAAM,gBAAiBC,QAAS4E,K6B4E5BkE,CAKZsR,I,UC5MY,YAAA7T,GACb,OACE,0BAAMF,UAAU,WACd,yBAAKA,UAAU,SACb,2CACA,kBAAC,KAAD,CACE8U,aAAW,EACX7J,QAAS/K,EAAM1B,UAAU1B,KAAI,SAAAoG,GAC3B,MAAO,CACL/C,MACE,6BACE,uBAAGH,UAAWkD,EAAK6R,WAAa,UAC/B7R,EAAK8R,WAGV/X,MAAOiG,EAAK9I,OAGhB0P,SAAU,SAAAC,GACI,OAARA,EAEF7J,EAAM+U,UAAU,YAEhB/U,EAAMgV,kBAAkB,WAAYnL,EAAI9M,WAKhD,yBAAK+C,UAAU,SACb,0CACA,kBAAC,KAAD,CACE8U,aAAW,EACX7J,SAAU/K,EAAM1D,SAAW,IAAIM,KAAI,SAAAJ,GACjC,MAAO,CACLyD,MAAOzD,EAAOiB,KACdV,MAAOP,EAAOtC,OAGlB0P,SAAU,SAAAC,GACI,OAARA,EAEF7J,EAAM+U,UAAU,WAEhB/U,EAAMgV,kBAAkB,UAAWnL,EAAI9M,WAK/C,yBAAK+C,UAAU,SACb,4CACA,kBAAC,KAAD,CACE8U,aAAW,EACX7J,QAAS/K,EAAMzB,UAAU3B,KAAI,SAAA2B,GAC3B,MAAO,CACL0B,MAAO1B,EAAUd,KACjBV,MAAOwB,EAAUrE,OAGrB0P,SAAU,SAAAC,GACI,OAARA,EAEF7J,EAAM+U,UAAU,aAEhB/U,EAAMgV,kBAAkB,YAAanL,EAAI9M,WAKjD,yBAAK+C,UAAU,SACb,mDACA,2BACEtG,KAAK,OACLuQ,UAAW,SAAAF,GAAG,OACI,KAAhBA,EAAIG,QACAhK,EAAMgV,kBAAkB,OAAQnL,EAAIC,OAAO/M,OAC3C,W,ikBCtEVkY,G,2MACJla,MAAQ,CACNsB,UAAW,KAEX6Y,eAAgB,CAAEC,OAAQ,GAC1BC,cAAc,G,mFAGdrV,KAAKsV,e,2CAGDtV,KAAKhF,MAAMqa,eACbrV,KAAKsV,aACLtV,KAAKU,SAAS,CAAE2U,cAAc,O,0EAGjBE,G,gFACfvV,KAAKU,SAAS,CAAEpE,UAAW,OACtBiZ,IACKJ,EAAmBnV,KAAKhF,MAAxBma,eACRI,EACE,uCACAC,OAAO1U,KAAKqU,GACTtY,KAAI,SAAAC,GAAG,OAAIA,EAAM,IAAMqY,EAAerY,MACtC2Y,KAAK,M,SAGSC,IAAMnG,IAAIgG,G,OAAzB/J,E,OACNxL,KAAKU,SAAS,CACZpE,UAAWkP,EAAOlN,KAAKsR,QACvBxM,KAAMoI,EAAOlN,KAAK8E,KAClBuS,KAAMnK,EAAOlN,KAAKmG,W,kJAGA,IAAD,OACnB,OACE,yBAAK1E,UAAU,sBACb,yBAAKA,UAAU,wBACb,4BACEA,UACE,2BAA6BC,KAAKhF,MAAM2a,KAAO,GAAK,aAEtDrT,QAAS,kBACP,EAAKtH,MAAMoI,KAAO,EAAKkS,WAAW,EAAKta,MAAMoI,MAAQ,OALzD,gBASE,uBACErD,UAAU,kBACVuC,QAAS,kBACP,EAAKtH,MAAM2a,KAAO,EAAKL,WAAW,EAAKta,MAAM2a,MAAQ,UAK7D,yBAAK5V,UAAU,UACb,4BACEA,UACE,2BAA6BC,KAAKhF,MAAMoI,KAAO,GAAK,aAEtDd,QAAS,kBACP,EAAKtH,MAAMoI,KAAO,EAAKkS,WAAW,EAAKta,MAAMoI,MAAQ,OAGvD,uBAAGrD,UAAU,qBARf,iB,+BAeE,IAAD,OACD6V,EAAgB,CACpBrX,UAAWyB,KAAKC,MAAM1B,UACtBhC,QAASyD,KAAKC,MAAM1D,QACpBiC,UAAWwB,KAAKC,MAAMzB,UACtByW,kBAAmB,SAACnY,EAAKE,GACvB,EAAK0D,SAAS,CACZ2U,cAAc,EACdF,eAAe,MAAM,EAAKna,MAAMma,eAAlB,eAAmCrY,EAAME,OAG3DgY,UAAW,SAAAlY,UACF,EAAK9B,MAAMma,eAAerY,GACjC,EAAK4D,SAAS,CAAE2U,cAAc,MAGlC,OAA6B,OAAzBrV,KAAKhF,MAAMsB,UAEX,6BACE,kBAACuZ,GAAuBD,GAD1B,cAKuC,IAAhC5V,KAAKhF,MAAMsB,UAAUqD,OAE5B,6BACE,kBAACkW,GAAuBD,GAD1B,2DAOF,6BACE,kBAACC,GAAuBD,GACxB,yBAAK7V,UAAU,uBACb,wCACA,yBAAKA,UAAU,cACZC,KAAK8V,qBACL9V,KAAKhF,MAAMsB,UAAUO,KAAI,SAAAQ,GAAE,OAC1B,yBAAKP,IAAKO,EAAGlD,GAAI4F,UAAU,kCACzB,yBAAKA,UAAU,oBAAoB1C,EAAGK,MACtC,yBAAKqC,UAAU,UACb,uBACEA,UAAU,YACVuC,QAAS,WACP,IAAM4D,EAAmBvJ,EAAM,EAAKsD,MAAM3D,WAC1C,EAAK2D,MAAMpG,YAAY,IACvB,EAAKoG,MAAMhG,aACT,CACEyD,KAAML,EAAGK,KACTsG,YAAa3G,EAAG2G,aAElBkC,GAEF,EAAKjG,MAAM7D,QAAQ8B,KAAK,aAAegI,WAMhDlG,KAAK8V,4B,GAnIO3V,aAkJVqC,gBARS,SAAAxH,GACtB,MAAO,CACLuD,UAAWvD,EAAMqD,KAAKE,UACtBhC,QAASvB,EAAMqD,KAAK9B,QACpBiC,UAAWxD,EAAMqD,KAAKG,UACtBlC,UAAWtB,EAAMmB,SAASG,aAGU,CACtCrC,eACAJ,eAFa2I,CAGZ0S,IC/IGa,G,4LAGE/V,KAAKC,MAAMzD,uBACbwD,KAAKC,MAAM+V,oB,+BAIb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW1Q,KAC3B,yBAAKzF,UAAU,WAEb,kBAAC,IAAD,CAAOkW,KAAK,YACV,kBAAC,IAAD,CAAU3Q,GAAG,OAEf,kBAAC,IAAD,CAAO2Q,KAAK,YAAYC,UAAWnN,KACnC,kBAAC,IAAD,CAAOkN,KAAK,WAAWC,UAAWtR,GAAiBuR,OAAK,IACxD,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW3J,KACtC,kBAAC,IAAD,CACE0J,KAAK,gBACLC,UAAWpD,GACXsD,QAAS,kBAAMC,MAAM,SAEvB,kBAAC,IAAD,CAAOJ,KAAK,YAAYC,UAAWpC,KACnC,kBAAC,IAAD,CAAOmC,KAAK,QAAQC,UAAWhB,KAC/B,kBAAC,IAAD,CAAOe,KAAK,IAAIC,UAAW/L,GAAMgM,OAAK,U,GA1B9BhW,aAiCHqC,gBACb,SAAAxH,GACE,MAAO,CAAEwB,sBAAuBxB,EAAMmB,SAASK,yBAEjD,CAAEwZ,gBhCkG2B,yDAAM,WAAMpD,GAAN,iCAAAnT,EAAA,sEACUiW,IAAMY,IAAI,CACrDZ,IAAMnG,IAAI,8BACVmG,IAAMnG,IAAI,+BACVmG,IAAMnG,IAAI,+BAJuB,0CAC5BlT,EAD4B,KAClBC,EADkB,KACPC,EADO,KAMnCqW,EAAS,CACPnZ,KAAM,8BACNC,QAAS,CACP2C,SAAUA,EAASiC,KACnBhC,UAAWA,EAAUgC,KACrB/B,QAASA,EAAQ+B,QAXc,UAcSoX,IAAMY,IAAI,CACpDjY,EAAKkR,IAAI,kBACTlR,EAAKkR,IAAI,gBACTlR,EAAKkR,IAAI,qBAjBwB,oCAc5B9Q,EAd4B,KAclBhC,EAdkB,KAcV+B,EAdU,KAmBnCL,QAAQC,IAAI3B,EAAO6B,MACnBsU,EAAS,CACPnZ,KAAM,8BACNC,QAAS,CACP+E,SAAUA,EAASH,KAAKsR,QACxBnT,OAAQA,EAAO6B,KAAKsR,QACpBpR,UAAWA,EAAUF,KAAKsR,WAzBK,4CAAN,wDgCtGhBpN,CAKbuT,IC7CFQ,IAASC,OACP,kBAAC,IAAD,CAAUC,M3B+DL,WACL,IAAI5W,EAAiBrF,IACjBqF,GAEFD,GADAC,EAAiBA,EAAe7E,OACImB,SAASC,SAE/C,IAAMqa,EAAQC,YAAYC,EAAU9W,EAAgB+W,YAAgBC,MAapE,OAZAJ,EAAMK,WAAU,WACd/b,EAAU,CACRC,MAAOyb,EAAMM,gBAGjBN,EAAMK,UACJE,KAAS,WACPjc,EAAU,CACRC,MAAOyb,EAAMM,eAEd,MAEEN,E2BlFUQ,IACf,kBAAC,GAAD,OAEF5N,SAASC,cAAc,W","file":"static/js/main.c26a3cd2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\nimport Axios from \"axios\";\r\n\r\n//Setze ID von currentExercise(Mithilfe Übungsindex kann dann echte Übung geholt werden)\r\nexport const setExercise = exerciseId => {\r\n  return {\r\n    type: \"SET_EXERCISE\",\r\n    payload: exerciseId\r\n  };\r\n};\r\n\r\n//Erstelle zufälliges Workout aus exerciseCount Übungen (Array aus Inidzes)\r\n//Dabei ist exercisePool ein Array aus möglichen Indizes\r\nexport const createRandomWorkout = (exercisePool, exerciseCount) => {\r\n  return {\r\n    type: \"CREATE_RANDOM_WORKOUT\",\r\n    payload: { exercisePool, exerciseCount }\r\n  };\r\n};\r\n\r\n//Setze ID von Workout\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeInExercise => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeInExercise\r\n  };\r\n};\r\n\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n//Füge die ID eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = (workout, title) => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: { workout, title } };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Gewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n\r\n/*\r\n  Importiere Daten\r\n*/\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\n/** Wger actions */\r\n\r\nexport const getLanguages = () => async dispatch => {\r\n  const response = await wger.get(\"/language.json\");\r\n  dispatch({ type: \"GET_LANGUAGES\", payload: response.data.results });\r\n};\r\n\r\nexport const getMuscles = () => async dispatch => {\r\n  const response = await wger.get(\"/muscle.json\");\r\n\r\n  dispatch({ type: \"GET_MUSCLES\", payload: response.data.results });\r\n};\r\n\r\nexport const getEquipment = () => async dispatch => {\r\n  const response = await wger.get(\"/equipment.json\");\r\n\r\n  dispatch({ type: \"GET_EQUIPMENT\", payload: response.data.results });\r\n};\r\n\r\n/** Load defaults */\r\nexport const loadDefaultData = () => async dispatch => {\r\n  const [workouts, exercises, muscles] = await Axios.all([\r\n    Axios.get(\"/defaultData/workouts.json\"),\r\n    Axios.get(\"/defaultData/exercises.json\"),\r\n    Axios.get(\"/defaultData/muscles.json\")\r\n  ]);\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_JSON\",\r\n    payload: {\r\n      workouts: workouts.data,\r\n      exercises: exercises.data,\r\n      muscles: muscles.data\r\n    }\r\n  });\r\n  const [language, muscle, equipment] = await Axios.all([\r\n    wger.get(\"/language.json\"),\r\n    wger.get(\"/muscle.json\"),\r\n    wger.get(\"/equipment.json\")\r\n  ]);\r\n  console.log(muscle.data);\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_WGER\",\r\n    payload: {\r\n      language: language.data.results,\r\n      muscle: muscle.data.results,\r\n      equipment: equipment.data.results\r\n    }\r\n  });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0,\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: [],\r\n    exercises: [],\r\n    muscles: [],\r\n    shouldLoadDefaultData: true,\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles;\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_JSON\":\r\n      return {\r\n        ...userData,\r\n        workouts: action.payload.workouts,\r\n        exercises: action.payload.exercises,\r\n        muscles: action.payload.muscles\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...action.payload.muscle]\r\n      };\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles) {\r\n        //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n\r\n        exercises = userData.exercises.map(exercise => {\r\n          return { ...exercise, muscles: [] };\r\n        });\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      muscles = action.payload.muscles ? [] : userData.muscles;\r\n      //History des Trainings\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        defaultValues\r\n      };\r\n    case \"SET_DEFAULT_VALUE\":\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload.title }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id),\r\n          { ...action.payload.exercise, id: action.payload.id }\r\n        ]\r\n      };\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, action.payload.exerciseId]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          { id, name: action.payload || \"Unnamed exercise \" + id, duration: 0 }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"GET_MUSCLES\":\r\n      if (!userData.shouldLoadMuscles) {\r\n        return userData;\r\n      }\r\n      let newMuscles = [];\r\n      action.payload.forEach(muscle => {\r\n        newMuscles.push({\r\n          name: muscle.name,\r\n          id: getId([...(userData.muscles || []), ...newMuscles])\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...newMuscles],\r\n        shouldLoadMuscles: false\r\n      };\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      console.log(\r\n        userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      );\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: 1,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined\r\n};\r\n","export default (\r\n  data = {\r\n    languages: [],\r\n    muscles: [],\r\n    equipment: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...data,\r\n        languages: action.payload.language,\r\n        equipment: action.payload.equipment,\r\n        muscles: action.payload.muscle\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  wger: wgerReducer,\r\n  speech: (speech = null, action) => {\r\n    if (action.type === \"SET_SPEECH\") {\r\n      return action.payload;\r\n    }\r\n    return speech;\r\n  }\r\n});\r\n","import { createStore } from \"redux\";\r\nimport throttle from \"lodash.throttle\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport function formatTime(seconds) {\r\n  let hours = Math.floor(seconds / (60 * 60));\r\n  let mins = Math.floor((seconds % (60 * 60)) / 60);\r\n  let secs = Math.floor(seconds % 60);\r\n  return (\r\n    (hours === 0 ? \"\" : hours + \":\") +\r\n    (mins < 10 ? \"0\" + mins : mins) +\r\n    \":\" +\r\n    (secs < 10 ? \"0\" + secs : secs)\r\n  );\r\n}\r\n\r\n//For copy call shuffle([...array])\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Calculates an array, which has max length of maxLength\r\nexport function sliceArray(arr, maxLength) {\r\n  return arr.slice(\r\n    Math.sign(arr.length - maxLength) === -1 ? 0 : arr.length - maxLength\r\n  );\r\n}\r\n\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\nexport function getWorkout(id, workoutList) {\r\n  return workoutList.find(workout => workout.id === id);\r\n}\r\n\r\nexport function getExercise(id, exerciseList) {\r\n  return exerciseList.find(exercise => exercise.id === id);\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\nexport function isToday(date) {\r\n  const today = new Date();\r\n  return (\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n  );\r\n}\r\n\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in Daten verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.1).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.1).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","import React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n    this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                {this.props.exercise.description}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0 };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime = time => {\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.isRunning}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1 onClick={this.props.endPause}>\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { addTime })(PauseScreen);\r\n","import React from \"react\";\r\nimport Exercise from \"../Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.nextExercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"step backward icon\" onClick={props.previous}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { getWorkout, getExercise } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  state = {\r\n    isRunning: true,\r\n    pause: false\r\n  };\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        //this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text });\r\n    }\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    if (this.props.pause !== null) {\r\n      this.props.setPause(null);\r\n      this.speak(\r\n        this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n      );\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n        //fertig machen für nächstes Training(Index auf 0, clearInterval)\r\n        this.props.pushWorkoutHistory(\r\n          this.props.currentWorkout.id,\r\n          this.props.currentWorkout.title\r\n        );\r\n        this.props.setIndex(0);\r\n        this.setState({ ready: true });\r\n        this.speak(\"Well done. workout completed!\");\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //tts(\"pause starts now\");\r\n          this.speak(this.props.pauseTime + \" seconds pause\");\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout - 1 >= 0) {\r\n        this.props.setIndex(this.props.indexInWorkout - 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <FinishScreen\r\n          goToHome={() => this.props.history.push(\"/\")}\r\n          goToOverview={() => this.props.history.push(\"/overview\")}\r\n          restart={() => {\r\n            this.setState({ ready: false });\r\n            this.props.setIndex(0);\r\n          }}\r\n        />\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <div>Loading Exercise...</div>;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          pause={this.props.pause}\r\n          nextExercise={this.props.exercise}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          previous={this.previous.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = getWorkout(\r\n    state.current.workout,\r\n    state.userData.workouts\r\n  );\r\n  const currentIndex = state.current.index;\r\n  const currentExercise = currentWorkout\r\n    ? getExercise(\r\n        currentWorkout.exercises[currentIndex],\r\n        state.userData.exercises\r\n      )\r\n    : null;\r\n  return {\r\n    exercise: currentExercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <i className=\"big heartbeat icon\"></i>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/\"}\r\n            onClick={() => this.props.history.push(\"/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                this.props.exercises.map(exercise => (\r\n                  <Dropdown.Item\r\n                    key={exercise.id}\r\n                    active={activeItem === \"/exercise/\" + exercise.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/exercise/\" + exercise.id)\r\n                    }\r\n                  >\r\n                    {exercise.name}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add exercise\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                this.props.workouts.map(workout => (\r\n                  <Dropdown.Item\r\n                    key={workout.id}\r\n                    active={activeItem === \"/workout/\" + workout.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/workout/\" + workout.id)\r\n                    }\r\n                  >\r\n                    {workout.title}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    this.props.setWorkout(null);\r\n                    this.props.history.push(\"/workout/-1\");\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add workout\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#body-weight\"}\r\n                onClick={() => this.props.history.push(\"/overview#body-weight\")}\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#statistics\"}\r\n                onClick={() => this.props.history.push(\"/overview#statistics\")}\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/wger\"}\r\n            onClick={() => this.props.history.push(\"/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/settings\"}\r\n            onClick={() => this.props.history.push(\"/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay } from \"../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={\r\n            this.state.index ||\r\n            this.uniqueDaysWithTraining.length -\r\n              (this.state.todayNoTraining ? 2 : 1)\r\n          }\r\n          values={this.uniqueDaysWithTraining}\r\n          indexClick={index => this.setState({ index })}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    return this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      let index = this.state.index || this.uniqueDaysWithTraining.length - 1;\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      filteredTrainings = [...new Set(trainingsOnSelectedDay)];\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addWeight } from \"../actions\";\r\n\r\nimport dateFormat from \"dateformat\";\r\nimport { sliceArray } from \"../helpers\";\r\n\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"./Popup\";\r\n\r\nclass Overview extends Component {\r\n  state = { weightValue: 0, lastAnchorTag: null };\r\n  componentDidMount() {\r\n    this.setState({ weightValue: this.props.lastWeight });\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    //Bewege Website zur jeweils in URL als #anchor am Ende angegebenen Stelle\r\n    const selected = this.props.history.location.hash;\r\n    if (selected !== this.state.lastAnchorTag) {\r\n      this.setState({ lastAnchorTag: selected });\r\n      if (selected && selected.length > 0) {\r\n        const elem = document.querySelector(selected);\r\n        elem && elem.scrollIntoView();\r\n      }\r\n    }\r\n  }\r\n  getWeightHistory() {\r\n    //Formatiere Aufzeichnungen des Körpergewichts\r\n    return this.props.weightHistory.map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        //Zeige zusätzlich das Jahr an.\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"overview-section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline\r\n            latestTrainings={this.props.lastWorkouts.map(training => {\r\n              return training.date;\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory()\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button className=\"circular ui icon button add-weight\">\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={this.state.weightValue}\r\n                    onChange={evt =>\r\n                      this.setState({ weightValue: evt.target.value })\r\n                    }\r\n                    onKeyDown={evt => {\r\n                      if (evt.keyCode === 13) {\r\n                        this.props.addWeight(this.state.weightValue);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  onClick={() => this.props.addWeight(this.state.weightValue)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { getWorkout } from \"../helpers\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"start-popup ui center aligned basic segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout\")}\r\n        >\r\n          <i className=\"play icon\"></i> Continue{\" \"}\r\n          {this.props.currentWorkout.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"eight wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i\r\n                    className=\"fas fa-play\"\r\n                    onClick={() => {\r\n                      if (this.props.currentWorkout) {\r\n                        this.props.history.push(\"/workout\");\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={!!this.props.currentWorkout}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = getWorkout(\r\n    state.current.workout,\r\n    state.userData.workouts\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else {\r\n                this.props.onChange(selected.value);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt\r\n} from \"../actions\";\r\nimport { getExercise, getId, getWorkout } from \"../helpers\";\r\nimport \"../style.css\";\r\nimport Selector from \"./Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = this.getWorkout(id);\r\n    if (id === -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout === null) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else {\r\n      this.setState({ workout, id: workout.id, title: workout.title });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    //Wie componentDidMount(), inkl. Verhinderung einer endlosschleife durch setState()\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = this.getWorkout(id);\r\n    if (id === -1 && prevState.workout.id !== -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout === null && id !== -1) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else if (id !== -1) {\r\n      if (workout.exercises !== prevState.workout.exercises) {\r\n        this.setState({ workout, id: workout.id, title: workout.title });\r\n      }\r\n    }\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={ids => {\r\n            this.props.editWorkout(this.state.workout.id, { exercises: ids });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.state.workout.exercises\r\n            .map((exerciseId, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = getExercise(\r\n                exerciseId,\r\n                this.props.usersExercises\r\n              );\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"twelve wide column exercise-name\">\r\n                          {exercise.name}\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.state.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: exerciseId\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onMouseOver={() => {\r\n                        this.setState({ preventSelect: true });\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        this.setState({ preventSelect: false });\r\n                      }}\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        this.props.removeExercise(exercise.id);\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            if (!this.state.preventSelect) {\r\n              this.props.addExerciseToWorkout(selected, this.state.workout.id);\r\n            }\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.state.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (!this.state.workout) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.state.workout.title || \"Please select workout\"}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            <Selector\r\n              options={this.props.usersWorkouts.map(workout => {\r\n                return {\r\n                  value: workout.id,\r\n                  label: (\r\n                    <div className=\"ui grid\">\r\n                      <div className=\"twelve wide column\">{workout.title}</div>\r\n                      <div className=\"one wide column\">\r\n                        <i\r\n                          onClick={() => this.props.removeWorkout(workout.id)}\r\n                          onMouseOver={() => {\r\n                            this.setState({ preventSelect: true });\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            this.setState({ preventSelect: false });\r\n                          }}\r\n                          className=\"trash alternate icon\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                };\r\n              })}\r\n              onChange={selected => {\r\n                if (!this.state.preventSelect) {\r\n                  this.props.history.push(\"/workout/\" + selected);\r\n                }\r\n              }}\r\n              value={{ value: this.state.title, label: this.state.title }}\r\n              onCreate={created => {\r\n                this.props.addWorkout(created);\r\n                this.props.history.push(\r\n                  \"/workout/\" + getId(this.props.usersWorkouts)\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          {this.state.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.state.workout.id !== -1 ? (\r\n            <div className=\"ui right labeled input pause-time-input\">\r\n              <div className=\"ui label\">Pause time:</div>\r\n              <input\r\n                value={\r\n                  this.state.workout.pauseTime || this.props.defaultPauseTime\r\n                }\r\n                onChange={evt => {\r\n                  this.setState({\r\n                    workout: {\r\n                      ...this.state.workout,\r\n                      pauseTime: evt.target.value\r\n                    }\r\n                  });\r\n                  this.props.editWorkout(this.state.workout.id, {\r\n                    ...this.state.workout,\r\n                    pauseTime: evt.target.value\r\n                  });\r\n                }}\r\n              />\r\n              <div className=\"ui basic label\">sec</div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <button\r\n              className={\r\n                \"ui submit button\" +\r\n                (this.state.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() => {\r\n                this.props.setWorkout(this.state.workout.id);\r\n                this.props.history.push(\"/workout\");\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //Finde das Workout mit ID id aus der Liste aller Workouts\r\n  getWorkout(id) {\r\n    const workout = getWorkout(id, this.props.allWorkouts);\r\n    if (workout) {\r\n      return workout;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nclass ImageWrapper extends Component {\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe eingegeben wird, cancele die\r\n    //alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(\r\n        \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9&query=\" +\r\n          keyword,\r\n        {\r\n          cancelToken: new axios.CancelToken(c => {\r\n            this.cancel = c;\r\n          })\r\n        }\r\n      );\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <div>Searching for {unsplashKeyword}...</div>;\r\n      } else if (unsplashImages.length === 0) {\r\n        return <div>Could not find result for {unsplashKeyword}</div>;\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"./ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  getMuscles,\r\n  deleteMuscle,\r\n  removeExercise\r\n} from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nimport { Prompt } from \"react-router\";\r\nimport Selector from \"./Selector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.getMuscles();\r\n    }\r\n\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n      e.preventDefault();\r\n      e.returnValue = false;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const { name, duration, description, image, muscles } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration,\r\n            description: description || \"\",\r\n            muscles: muscles || [],\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          onChange={evt => console.log(evt)}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const { name, duration, description, image, muscles } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles,\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Muscles:</label>\r\n                  <Selector\r\n                    isMulti\r\n                    onCreate={name => {\r\n                      const newId = getId(this.props.muscles);\r\n                      this.props.createMuscle(name);\r\n                      handleChange({\r\n                        target: {\r\n                          value: [\r\n                            ...values.muscles,\r\n                            { value: newId, label: name }\r\n                          ],\r\n                          name: \"muscles\"\r\n                        }\r\n                      });\r\n                    }}\r\n                    onChange={evt => {\r\n                      handleChange({\r\n                        target: {\r\n                          value: evt,\r\n                          name: \"muscles\"\r\n                        }\r\n                      });\r\n                    }}\r\n                    value={(values.muscles || []).map(muscle => {\r\n                      return {\r\n                        value: muscle.value,\r\n                        label: this.props.muscles.find(\r\n                          m => m.id === muscle.value\r\n                        ).name\r\n                      };\r\n                    })}\r\n                    options={(this.props.muscles || []).map(muscle => {\r\n                      return {\r\n                        value: muscle.id,\r\n                        label: (\r\n                          <div className=\"ui grid\">\r\n                            <div className=\"twelve wide column\">\r\n                              {muscle.name}\r\n                            </div>\r\n                            <div className=\"one wide column\">\r\n                              <i\r\n                                onClick={evt => {\r\n                                  evt.stopPropagation();\r\n                                  this.props.deleteMuscle(muscle.id);\r\n                                }}\r\n                                className=\"trash alternate icon\"\r\n                              ></i>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      };\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.props.removeExercise(this.props.exercise.id);\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  getMuscles,\r\n  deleteMuscle,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n  TODO: Leere Übungen nicht erlauben\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (!this.state.exercise) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"ui checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={\r\n            props.historyField\r\n              ? props.values.history[props.label.toLowerCase()]\r\n              : props.values[props.label.toLowerCase()]\r\n          }\r\n          onChange={evt => {\r\n            if (props.historyField) {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  history: {\r\n                    ...props.values.history,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  [props.label.toLowerCase()]: evt.target.checked\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n} from \"../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../helpers\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false,\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  saveData() {\r\n    return (\r\n      \"text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(this.props.userData))\r\n    );\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.props.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  setDefaultValue = evt => {\r\n    this.props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"ui form\">\r\n        <div className=\"ui dividing header\">Defaults</div>\r\n        <div className=\"fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration</label>\r\n            <input\r\n              name=\"exerciseDuration\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.exerciseDuration}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <input\r\n              name=\"pauseTime\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.pauseTime}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Description:</label>\r\n            <input></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui dividing header\">Data</div>\r\n        <div className=\"field\">\r\n          <label>Download all your fitness-data as JSON:</label>\r\n          <a\r\n            className=\"ui button\"\r\n            href={\"data:'\" + this.saveData()}\r\n            download=\"fitness-data.json\"\r\n            title=\"Download all of your user-data\"\r\n          >\r\n            Download\r\n          </a>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Load saved data from JSON:</label>\r\n          <FileUpload\r\n            recievedFile={this.setUserData.bind(this)}\r\n            description=\"Drag or click here to upload JSON file and load it's content!\"\r\n          />\r\n          <div>{this.state.fileLoadingError}</div>\r\n          <div className=\"field\">\r\n            <div className=\"ui checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.overwriteChecked}\r\n                onChange={() =>\r\n                  this.setState({\r\n                    overwriteChecked: !this.state.overwriteChecked\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>Overwrite old data</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Delete data:</label>\r\n          <div className=\"grouped field\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <div className=\"grouped field\">\r\n              <label>History:</label>\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Weight\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Workouts\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Training Time\"}\r\n                values={this.state.delete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"ui red button\"\r\n            onClick={this.deleteAll.bind(this)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      <div className=\"field\">\r\n        <label>Language</label>\r\n        <Select\r\n          isClearable\r\n          options={props.languages.map(lang => {\r\n            return {\r\n              label: (\r\n                <div>\r\n                  <i className={lang.short_name + \" flag\"}></i>\r\n                  {lang.full_name}\r\n                </div>\r\n              ),\r\n              value: lang.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"language\");\r\n            } else {\r\n              props.setSearchSettings(\"language\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: muscle.name,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: equipment.name,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword (exact):</label>\r\n        <input\r\n          type=\"text\"\r\n          onKeyDown={evt =>\r\n            evt.keyCode === 13\r\n              ? props.setSearchSettings(\"name\", evt.target.value)\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport WgerSearchSettings from \"./WgerSearchSettings\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    //status:2 -> Nur \"verifizierte\" Übungen\r\n    searchSettings: { status: 2 },\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    if (!url) {\r\n      const { searchSettings } = this.state;\r\n      url =\r\n        \"http://wger.de/api/v2/exercise.json?\" +\r\n        Object.keys(searchSettings)\r\n          .map(key => key + \"=\" + searchSettings[key])\r\n          .join(\"&\");\r\n    }\r\n\r\n    const result = await Axios.get(url);\r\n    this.setState({\r\n      exercises: result.data.results,\r\n      next: result.data.next,\r\n      prev: result.data.previous\r\n    });\r\n  }\r\n  renderArrowButtons() {\r\n    return (\r\n      <div className=\"ui two column grid\">\r\n        <div className=\"right aligned column\">\r\n          <button\r\n            className={\r\n              \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n            }\r\n            onClick={() =>\r\n              this.state.next ? this.searchData(this.state.next) : null\r\n            }\r\n          >\r\n            Previous page\r\n            <i\r\n              className=\"arrow left icon\"\r\n              onClick={() =>\r\n                this.state.prev ? this.searchData(this.state.prev) : null\r\n              }\r\n            ></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"column\">\r\n          <button\r\n            className={\r\n              \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n            }\r\n            onClick={() =>\r\n              this.state.next ? this.searchData(this.state.next) : null\r\n            }\r\n          >\r\n            <i className=\"arrow right icon\"></i>\r\n            Next page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true,\r\n          searchSettings: { ...this.state.searchSettings, [key]: value }\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        delete this.state.searchSettings[key];\r\n        this.setState({ shouldReload: true });\r\n      }\r\n    };\r\n    if (this.state.exercises === null) {\r\n      return (\r\n        <div>\r\n          <WgerSearchSettings {...settingsProps} />\r\n          Loading...\r\n        </div>\r\n      );\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div>\r\n          <WgerSearchSettings {...settingsProps} />\r\n          Could not find result... Please change search settings!\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <WgerSearchSettings {...settingsProps} />\r\n        <div className=\"wger-search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.state.exercises.map(ex => (\r\n              <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n                <div className=\"five wide column\">{ex.name}</div>\r\n                <div className=\"column\">\r\n                  <i\r\n                    className=\"plus icon\"\r\n                    onClick={() => {\r\n                      const idForNewExercise = getId(this.props.exercises);\r\n                      this.props.addExercise(\"\");\r\n                      this.props.editExercise(\r\n                        {\r\n                          name: ex.name,\r\n                          description: ex.description\r\n                        },\r\n                        idForNewExercise\r\n                      );\r\n                      this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                    }}\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  addExercise\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview\";\r\nimport Settings from \"./Settings\";\r\nimport WgerSearch from \"./WgerSearch/WgerSearch\";\r\nimport { loadDefaultData } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    //Lade, falls nötig, die Standarddaten aus JSON-Dateien und wger-Datenbank\r\n    if (this.props.shouldLoadDefaultData) {\r\n      this.props.loadDefaultData();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Menu} />\r\n        <div className=\"content\">\r\n          {/*Da die Github Seite als Root /project hat, muss diew auf meine Hauptseite gelenkt werden (/)*/}\r\n          <Route path=\"/project\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n          <Route path=\"/overview\" component={Overview} />\r\n          <Route path=\"/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"/workout/:id\" component={WorkoutCreator} />\r\n          <Route\r\n            path=\"/exercise/:id\"\r\n            component={ExercisePreview}\r\n            onLeave={() => alert(\"hi\")}\r\n          />\r\n          <Route path=\"/settings\" component={Settings} />\r\n          <Route path=\"/wger\" component={WgerSearch} />\r\n          <Route path=\"/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return { shouldLoadDefaultData: state.userData.shouldLoadDefaultData };\r\n  },\r\n  { loadDefaultData }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}