{"version":3,"sources":["actions/index.js","components/Exercise.jsx","components/ExerciseWrapper.jsx","components/Menu.jsx","components/Timeline.jsx","components/ChartComponent.jsx","components/Overview.jsx","components/Statistic.jsx","components/Main.jsx","components/ProgressBar.jsx","components/Challenges.jsx","components/App.jsx","helpers.js","reducers/index.js","index.js"],"names":["selectExercise","workout","index","type","payload","createWorkout","exercisePool","exerciseCount","console","log","Exercise","className","text","Math","floor","this","props","time","value","exercise","duration","name","Component","ExerciseWrapper","state","timer","interval","setInterval","countDown","isRunning","prevProps","setState","clearInterval","onClick","pauseTimer","next","connect","currentExercise","currentWorkout","exercises","Menu","active","path","location","pathname","to","Timeline","latestTrainings","latestTrainingListLength","length","currentStepName","today","Date","todayString","getDate","getMonth","renderList","label","slice","map","elem","key","buildTimeline","ChartComponent","style","width","labels","values","val","title","backgroundColor","borderColor","React","defaultProps","Overview","Statistic","Main","ProgressBar","data-percent","percentage","Challenges","App","component","exact","shuffle","array","sort","random","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","querySelector"],"mappings":"gVAOaA,EAAiB,SAACC,EAASC,GACtC,MAAO,CACLC,KAAM,kBACNC,QAAS,CAAEH,UAASC,WAIXG,EAAgB,SAACC,EAAcC,GAE1C,OADAC,QAAQC,IAAIH,GACL,CACLH,KAAM,iBACNC,QAAS,CAAEE,eAAcC,mB,SCEdG,G,+LAbX,OACE,6BACE,kBAAC,IAAD,CACEC,UAAU,eACVC,KAAMC,KAAKC,MAAMC,KAAKC,MAAMC,MAC5BC,MAAQH,KAAKC,MAAMC,KAAOF,KAAKC,MAAMG,SAASC,SAAY,MAE5D,yBAAKT,UAAU,iBAAiBI,KAAKC,MAAMG,SAASE,W,GATrCC,cCCjBC,E,YAIJ,WAAYP,GAAQ,IAAD,8BACjB,4CAAMA,KAJRQ,MAAQ,CACNP,KAAM,GAIN,EAAKQ,MAAQ,CACXC,SAAUC,aAAY,WACpB,EAAKC,cACJ,KACHC,WAAW,GANI,E,gFAUAC,GACW,OAAxBf,KAAKC,MAAMG,UAAqBJ,KAAKC,MAAMf,SAC7CO,QAAQC,IAAIM,KAAKC,MAAMf,SACvBc,KAAKC,MAAMhB,eAAee,KAAKC,MAAMf,QAAS,IACrC6B,IAAcf,KAAKC,OAC5BD,KAAKgB,SAAS,CAAEd,KAAMF,KAAKC,MAAMG,SAASC,a,kCAI5CL,KAAKgB,SAAS,CAAEd,KAAMF,KAAKS,MAAMP,KAAO,O,qCAIxCF,KAAKgB,SAAS,CAAEd,KAAMF,KAAKC,MAAMG,SAASC,a,mCAItCL,KAAKU,MAAMI,YACbG,cAAcjB,KAAKU,MAAMC,UACzBX,KAAKU,MAAMI,WAAY,K,iCAGf,IAAD,OACJd,KAAKU,MAAMI,YACdd,KAAKU,MAAMC,SAAWC,aAAY,WAChC,EAAKC,cACJ,Q,6BAILb,KAAKC,MAAMhB,eACTe,KAAKC,MAAMf,QACXc,KAAKC,MAAMG,SAASjB,MAAQ,K,+BAGtB,IAAD,OACP,OAA4B,OAAxBa,KAAKC,MAAMG,SAEX,6BACE,uDACA,yBACEc,QAAS,WACP,EAAKjB,MAAMX,cAAc,EAAKW,MAAMV,aAAc,KAFtD,0BAWJ,6BACE,kBAAC,EAAD,CAAUa,SAAUJ,KAAKC,MAAMG,SAAUF,KAAMF,KAAKS,MAAMP,OAC1D,yBAAKN,UAAU,yBACb,yBAAKA,UAAU,oBACb,uBACEA,UAAU,qBACVsB,QAAS,kBAAMzB,QAAQC,IAAI,gBAG/B,yBAAKE,UAAU,oBACb,uBAAGA,UAAU,QAAQsB,QAAS,kBAAM,EAAKC,iBAE3C,yBAAKvB,UAAU,oBACb,uBAAGA,UAAU,oBAAoBsB,QAAS,kBAAM,EAAKE,iB,GA9EnCb,aA8Ffc,eARS,SAAAZ,GACtB,MAAO,CACLL,SAAUK,EAAMa,gBAChBpC,QAASuB,EAAMc,eAAeC,UAC9BjC,aAAckB,EAAMlB,gBAIgB,CAAEN,iBAAgBK,iBAA3C+B,CACbb,GCvEaiB,E,2MA3BbhB,MAAQ,CAAEiB,OAAQ,G,wEAEhB,IAAIC,EAAO3B,KAAKC,MAAM2B,SAASC,SAC/B,OACE,yBAAKjC,UAAU,gCACb,kBAAC,IAAD,CAAMA,UAAoB,MAAT+B,EAAe,cAAgB,OAAQG,GAAG,KAA3D,QAIA,kBAAC,IAAD,CACElC,UAAoB,cAAT+B,EAAuB,cAAgB,OAClDG,GAAG,aAFL,YAOA,kBAAC,IAAD,CACElC,UAAoB,gBAAT+B,EAAyB,cAAgB,OACpDG,GAAG,eAFL,mB,GAjBWvB,a,QCmCJwB,E,2MAlCbtB,MAAQ,CACNuB,gBAAiB,CAAC,SAAU,SAAU,QAAS,SAAU,SAAU,W,+EAGnE,IAAIC,EAA2BjC,KAAKS,MAAMuB,gBAAgBE,OACtDC,EAAkB,QAClBC,EAAQ,IAAIC,KACZC,EAAcF,EAAMG,UAAY,KAAOH,EAAMI,WAAa,GAAK,IAUnE,OANExC,KAAKS,MAAMuB,gBAAgBC,EAA2B,KAAOK,IAE7DL,GAA4B,EAC5BE,EAAkB,MAIlB,kBAAC,oBAAD,CAAmBA,gBAAiBA,GACjCnC,KAAKyC,WAAWR,GACjB,kBAAC,eAAD,CAAc3B,KAAK,QAAQoC,MAAOJ,O,iCAI7BJ,GACT,OAAOlC,KAAKS,MAAMuB,gBAAgBW,MAAM,EAAGT,GAAQU,KAAI,SAACC,EAAM1D,GAC5D,OAAO,kBAAC,eAAD,CAAc2D,IAAK3D,EAAOmB,KAAM,QAAUnB,EAAOuD,MAAOG,S,+BAIjE,OAAO7C,KAAK+C,oB,GA/BOxC,aCCFyC,E,iLAEjB,OACE,kBAAC,QAAD,CACEC,MAAO,CAAEC,MAAO,SAChBC,OAAQnD,KAAKC,MAAMmD,OAAOR,KAAI,SAAAS,GAAG,OAAIA,EAAIX,SACzCtD,KAAK,QAEL,kBAAC,UAAD,CACEkE,MAAM,SACNF,OAAQpD,KAAKC,MAAMmD,OAAOR,KAAI,SAAAS,GAAG,OAAIA,EAAIlD,SACzCoD,gBAAgB,UAChBC,YAAY,iB,GAZsBC,IAAMlD,WAA7ByC,EAiBZU,aAAe,CACpBN,OAAQ,I,ICCGO,E,2MAlBblD,MAAQ,G,wEAEN,OACE,6BACE,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,CACE2C,OAAQ,CACN,CAAEV,MAAO,UAAWvC,MAAO,IAC3B,CAAEuC,MAAO,UAAWvC,MAAO,MAC3B,CAAEuC,MAAO,UAAWvC,MAAO,c,GAXhBI,aCSRqD,E,iLATX,OACE,yBAAKhE,UAAU,gBACb,yBAAKA,UAAU,SAASI,KAAKC,MAAME,OACnC,yBAAKP,UAAU,SAASI,KAAKC,MAAMyC,Y,GALnBnC,aCKlBsD,E,2MACJpD,MAAQ,G,wEACE,IAAD,OACP,OACE,6BACE,6CACA,kBAAC,EAAD,CAAWN,MAAO,EAAGuC,MAAM,kBAC3B,kBAAC,EAAD,CAAWvC,MAAO,GAAIuC,MAAM,8BAC5B,kBAAC,EAAD,CAAWvC,MAAO,GAAIuC,MAAM,cAC5B,yBACExB,QAAS,WACP,EAAKjB,MAAMX,cAAc,EAAKW,MAAMV,aAAc,KAFtD,yBAOA,kBAAC,IAAD,CAAMuC,GAAG,YAAT,2B,GAhBWvB,aA6BJc,eAPS,SAAAZ,GACtB,MAAO,CACLlB,aAAckB,EAAMlB,aACpBgC,eAAgBd,EAAMc,kBAIc,CAAEjC,gBAAeL,kBAA1CoC,CACbwC,GCjBaC,E,iLAhBX,OACE,yBACElE,UAAU,yBACVmE,eAAc/D,KAAKC,MAAM+D,WAAa,KAEtC,yBAAKpE,UAAU,MAAMqD,MAAO,CAAEC,MAAOlD,KAAKC,MAAM+D,WAAa,MAC3D,yBAAKpE,UAAU,YACZI,KAAKC,MAAME,MAAQH,KAAKC,MAAME,MAAQH,KAAKC,MAAM+D,WAAa,MAGnE,yBAAKpE,UAAU,SAASI,KAAKC,MAAMyC,Y,GAZjBnC,aCoBX0D,E,iLAjBX,OACE,6BACE,kBAAC,EAAD,CACED,WAAY,GACZtB,MAAM,iCACNvC,MAAM,aACL,IACH,kBAAC,EAAD,CACE6D,WAAY,GACZtB,MAAM,+BACNvC,MAAM,wB,GAZSI,aCqBV2D,E,2MAdbzD,MAAQ,G,wEAEN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,KAAK,YAAYwC,UAAWR,IACnC,kBAAC,IAAD,CAAOhC,KAAK,WAAWwC,UAAW3D,IAClC,kBAAC,IAAD,CAAOmB,KAAK,cAAcwC,UAAWF,IACrC,kBAAC,IAAD,CAAOtC,KAAK,IAAIwC,UAAWN,EAAMO,OAAK,IACtC,kBAAC,IAAD,CAAOzC,KAAK,IAAIwC,UAAW1C,S,GATjBlB,a,SCKX,SAAS8D,EAAQC,GACtB,OAAOA,EAAMC,MAAK,kBAAMzE,KAAK0E,SAAW,MCZ1C,IAgCeC,cAAgB,CAC7BlF,aAAc,WACZ,MAAO,CACL,CAAEe,KAAM,SAAUD,SAAU,IAC5B,CAAEC,KAAM,SAAUD,SAAU,IAC5B,CAAEC,KAAM,SAAUD,SAAU,IAC5B,CAAEC,KAAM,gBAAiBD,SAAU,IACnC,CAAEC,KAAM,qBAAsBD,SAAU,MAI5CiB,gBA3C8B,WAAqC,IAApCA,EAAmC,uDAAjB,KAAMoD,EAAW,uCAClE,GAAoB,iBAAhBA,EAAOtF,KACT,OAAOsF,EAAOrF,QACT,GAAoB,oBAAhBqF,EAAOtF,KAA4B,CAC5C,IAAKsF,EAAOrF,QAAQH,SAA6C,IAAlCwF,EAAOrF,QAAQH,QAAQgD,OACpD,OAAOZ,EAET,IAAInC,EAAQuF,EAAOrF,QAAQF,MAAQuF,EAAOrF,QAAQH,QAAQgD,OAC1D,MAAO,CACL5B,KAAMoE,EAAOrF,QAAQH,QAAQC,GAAOmB,KACpCD,SAAUqE,EAAOrF,QAAQH,QAAQC,GAAOkB,SACxClB,MAAOuF,EAAOrF,QAAQF,OAG1B,OAAOmC,GA+BPC,eA5B4B,WAAkC,IAAjCA,EAAgC,uDAAf,GAAImD,EAAW,uCAC7D,MAAoB,mBAAhBA,EAAOtF,KACF,CACLkE,MAAO,iBACP9B,UAAW6C,EAAQ,YAAIK,EAAOrF,QAAQE,eAAeoD,MACnD,EACA+B,EAAOrF,QAAQG,gBAGM,mBAAhBkF,EAAOtF,KACTsF,EAAOrF,QAETkC,KCvBLoD,EAAQC,YAAYC,GACxBC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,cAAc,Y","file":"static/js/main.0530ee7e.chunk.js","sourcesContent":["export const setExercise = exercise => {\r\n  return {\r\n    type: \"SET_EXERCISE\",\r\n    payload: exercise\r\n  };\r\n};\r\n\r\nexport const selectExercise = (workout, index) => {\r\n  return {\r\n    type: \"SELECT_EXERCISE\",\r\n    payload: { workout, index }\r\n  };\r\n};\r\n\r\nexport const createWorkout = (exercisePool, exerciseCount) => {\r\n  console.log(exercisePool);\r\n  return {\r\n    type: \"CREATE_WORKOUT\",\r\n    payload: { exercisePool, exerciseCount }\r\n  };\r\n};\r\n\r\nexport const selectWorkout = workout => {\r\n  return {\r\n    type: \"SELECT_WORKOUT\",\r\n    payload: workout\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport \"../style.css\";\r\n\r\nclass Exercise extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CircularProgressbar\r\n          className=\"progress-bar\"\r\n          text={Math.floor(this.props.time)}\r\n          value={(this.props.time / this.props.exercise.duration) * 100}\r\n        />\r\n        <div className=\"exercise-name\">{this.props.exercise.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Exercise;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectExercise, createWorkout } from \"../actions\";\r\nimport Exercise from \"./Exercise.jsx\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  state = {\r\n    time: 0\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.timer = {\r\n      interval: setInterval(() => {\r\n        this.countDown();\r\n      }, 100),\r\n      isRunning: true\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.exercise === null && this.props.workout) {\r\n      console.log(this.props.workout);\r\n      this.props.selectExercise(this.props.workout, 0);\r\n    } else if (prevProps !== this.props) {\r\n      this.setState({ time: this.props.exercise.duration });\r\n    }\r\n  }\r\n  countDown() {\r\n    this.setState({ time: this.state.time - 0.1 });\r\n  }\r\n\r\n  nextExercise() {\r\n    this.setState({ time: this.props.exercise.duration });\r\n  }\r\n\r\n  pauseTimer() {\r\n    if (this.timer.isRunning) {\r\n      clearInterval(this.timer.interval);\r\n      this.timer.isRunning = false;\r\n    }\r\n  }\r\n  runTimer() {\r\n    if (!this.timer.isRunning) {\r\n      this.timer.interval = setInterval(() => {\r\n        this.countDown();\r\n      }, 100);\r\n    }\r\n  }\r\n  next() {\r\n    this.props.selectExercise(\r\n      this.props.workout,\r\n      this.props.exercise.index + 1\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.exercise === null) {\r\n      return (\r\n        <div>\r\n          <h1>Please select a workout</h1>\r\n          <div\r\n            onClick={() => {\r\n              this.props.createWorkout(this.props.exercisePool, 4);\r\n            }}\r\n          >\r\n            Create random workout\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Exercise exercise={this.props.exercise} time={this.state.time} />\r\n        <div className=\"ui grid exercise-menu\">\r\n          <div className=\"four wide column\">\r\n            <i\r\n              className=\"step backward icon\"\r\n              onClick={() => console.log(\"backward\")}\r\n            ></i>\r\n          </div>\r\n          <div className=\"four wide column\">\r\n            <i className=\" icon\" onClick={() => this.pauseTimer()}></i>\r\n          </div>\r\n          <div className=\"four wide column\">\r\n            <i className=\"step forward icon\" onClick={() => this.next()}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercise: state.currentExercise,\r\n    workout: state.currentWorkout.exercises,\r\n    exercisePool: state.exercisePool\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectExercise, createWorkout })(\r\n  ExerciseWrapper\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    let path = this.props.location.pathname;\r\n    return (\r\n      <div className=\"ui bottom fixed tabular menu\">\r\n        <Link className={path === \"/\" ? \"active item\" : \"item\"} to=\"/\">\r\n          Home\r\n        </Link>\r\n\r\n        <Link\r\n          className={path === \"/overview\" ? \"active item\" : \"item\"}\r\n          to=\"/overview\"\r\n        >\r\n          Overview\r\n        </Link>\r\n\r\n        <Link\r\n          className={path === \"/challenges\" ? \"active item\" : \"item\"}\r\n          to=\"/challenges\"\r\n        >\r\n          Challenges\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport { ProgressIndicator, ProgressStep } from \"react-rainbow-components\";\r\nclass Timeline extends Component {\r\n  state = {\r\n    latestTrainings: [\"18.11.\", \"20.11.\", \"23.11\", \"27.11.\", \"29.11.\", \"30.11.\"]\r\n  };\r\n  buildTimeline() {\r\n    let latestTrainingListLength = this.state.latestTrainings.length;\r\n    let currentStepName = \"today\";\r\n    let today = new Date();\r\n    let todayString = today.getDate() + \".\" + (today.getMonth() + 1) + \".\";\r\n\r\n    //For don't rendering todays date two times\r\n    if (\r\n      this.state.latestTrainings[latestTrainingListLength - 1] === todayString\r\n    ) {\r\n      latestTrainingListLength -= 1;\r\n      currentStepName = null;\r\n    }\r\n\r\n    return (\r\n      <ProgressIndicator currentStepName={currentStepName}>\r\n        {this.renderList(latestTrainingListLength)}\r\n        <ProgressStep name=\"today\" label={todayString} />\r\n      </ProgressIndicator>\r\n    );\r\n  }\r\n  renderList(length) {\r\n    return this.state.latestTrainings.slice(0, length).map((elem, index) => {\r\n      return <ProgressStep key={index} name={\"step-\" + index} label={elem} />;\r\n    });\r\n  }\r\n  render() {\r\n    return this.buildTimeline();\r\n  }\r\n}\r\n\r\nexport default Timeline;\r\n","import React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default class ChartComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={this.props.values.map(val => val.label)}\r\n        type=\"line\"\r\n      >\r\n        <Dataset\r\n          title=\"Weight\"\r\n          values={this.props.values.map(val => val.value)}\r\n          backgroundColor=\"#1de9b6\"\r\n          borderColor=\"#1de9b6\"\r\n        />\r\n      </Chart>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    values: []\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nclass Overview extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Timeline />\r\n        <br />\r\n        <ChartComponent\r\n          values={[\r\n            { label: \"20/2019\", value: 50 },\r\n            { label: \"21/2019\", value: 50.5 },\r\n            { label: \"22/2019\", value: 49.5 }\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overview;\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","import React, { Component } from \"react\";\r\nimport Statistic from \"./Statistic\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { createWorkout, selectExercise } from \"../actions\";\r\nclass Main extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Welcome back!</h1>\r\n        <Statistic value={2} label=\"workouts/week\" />\r\n        <Statistic value={20} label=\"Ø minutes workout time\" />\r\n        <Statistic value={75} label=\"kg weigth\" />\r\n        <div\r\n          onClick={() => {\r\n            this.props.createWorkout(this.props.exercisePool, 4);\r\n          }}\r\n        >\r\n          Create random workout\r\n        </div>\r\n        <Link to=\"/workout\">START YOUR WORKOUT</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercisePool: state.exercisePool,\r\n    currentWorkout: state.currentWorkout\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createWorkout, selectExercise })(\r\n  Main\r\n);\r\n","import React, { Component } from \"react\";\r\nclass ProgressBar extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui indicating progress\"\r\n        data-percent={this.props.percentage + \"%\"}\r\n      >\r\n        <div className=\"bar\" style={{ width: this.props.percentage + \"%\" }}>\r\n          <div className=\"progress\">\r\n            {this.props.value ? this.props.value : this.props.percentage + \"%\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nclass Challenges extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ProgressBar\r\n          percentage={50}\r\n          label=\"Consecutive days with training\"\r\n          value=\"2/4 days\"\r\n        />{\" \"}\r\n        <ProgressBar\r\n          percentage={70}\r\n          label=\"Randomly generated trainings\"\r\n          value=\"7/10 trainings\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Challenges;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview\";\r\nimport Main from \"./Main\";\r\nimport Challenges from \"./Challenges\";\r\nclass App extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/overview\" component={Overview} />\r\n        <Route path=\"/workout\" component={ExerciseWrapper} />\r\n        <Route path=\"/challenges\" component={Challenges} />\r\n        <Route path=\"/\" component={Main} exact />\r\n        <Route path=\"/\" component={Menu} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export const formatTime = seconds => {\r\n  let hours = Math.floor(seconds / (60 * 60));\r\n  let mins = Math.floor((seconds % (60 * 60)) / 60);\r\n  let secs = Math.floor(seconds % 60);\r\n  return (\r\n    (hours === 0 ? \"\" : hours + \":\") +\r\n    (mins < 10 ? \"0\" + mins : mins) +\r\n    \":\" +\r\n    (secs < 10 ? \"0\" + secs : secs)\r\n  );\r\n};\r\n\r\n//For copy call shuffle([...array])\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { shuffle } from \"../helpers\";\r\nconst selectedExerciseReducer = (currentExercise = null, action) => {\r\n  if (action.type === \"SET_EXERCISE\") {\r\n    return action.payload;\r\n  } else if (action.type === \"SELECT_EXERCISE\") {\r\n    if (!action.payload.workout || action.payload.workout.length === 0) {\r\n      return currentExercise;\r\n    }\r\n    let index = action.payload.index % action.payload.workout.length;\r\n    return {\r\n      name: action.payload.workout[index].name,\r\n      duration: action.payload.workout[index].duration,\r\n      index: action.payload.index\r\n    };\r\n  }\r\n  return currentExercise;\r\n};\r\n\r\nconst currentWorkoutReducer = (currentWorkout = [], action) => {\r\n  if (action.type === \"CREATE_WORKOUT\") {\r\n    return {\r\n      title: \"Random workout\",\r\n      exercises: shuffle([...action.payload.exercisePool]).slice(\r\n        0,\r\n        action.payload.exerciseCount\r\n      )\r\n    };\r\n  } else if (action.type === \"SELECT_WORKOUT\") {\r\n    return action.payload;\r\n  }\r\n  return currentWorkout;\r\n};\r\n\r\nexport default combineReducers({\r\n  exercisePool: () => {\r\n    return [\r\n      { name: \"Pushup\", duration: 30 },\r\n      { name: \"Situps\", duration: 40 },\r\n      { name: \"Squats\", duration: 60 },\r\n      { name: \"Bent-Over Row\", duration: 40 },\r\n      { name: \"Abdominal Crunches\", duration: 50 }\r\n    ];\r\n  },\r\n  //Exercise: Must have name and duration(int)\r\n  currentExercise: selectedExerciseReducer,\r\n  //Workout: Must have title and exercises([Exercise])\r\n  currentWorkout: currentWorkoutReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nlet store = createStore(reducers);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}