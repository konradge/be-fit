{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Statistic.jsx","components/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/Loader.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Timeline.jsx","components/ChartComponent.jsx","components/Popup.jsx","components/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/DragAndDropList.jsx","components/Dropdown.jsx","components/WorkoutCreator.jsx","components/ImageSearch/ImageCard.jsx","components/ImageSearch/ImageField.jsx","components/ExercisePreview/ExerciseFormSelector.jsx","components/ExercisePreview/ExerciseForm.jsx","components/ExercisePreview/ExercisePreview.jsx","components/FileUpload.jsx","components/DeleteSelectorField.jsx","components/Settings.jsx","components/ExerciseSearch/SearchSettings.jsx","components/ExerciseSearch/ExerciseSearch.jsx","components/ExerciseSearch/WgerSearch.jsx","components/ExerciseSearch/InternalSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setStoppedAt","timeAlreadyPassed","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","addWeight","newWeight","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","index","workoutStoppedAt","pause","undefined","combineReducers","current","action","userData","history","workouts","exercises","muscles","equipment","shouldLoadDefaultData","getId","name","filter","muscle","title","find","w","splice","position","duration","updatedWorkouts","map","deleted","e","ex","date","Date","key","parseInt","value","startId","prop","wger","data","languages","language","findById","array","elem","isSameDay","date1","date2","getDate","getMonth","getYear","list","sortedIds","item","sort","a","b","length","unique","Set","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","calcStats","setState","Array","from","statistics","keys","Math","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","time","isNaN","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","speech","Speech","init","lang","speak","text","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","PauseScreen","queue","endPause","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","push","previous","pauseTimer","runTimer","Loader","message","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","setPause","ready","pushWorkoutHistory","currentWorkout","setIndex","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","icon","idForNewExercise","Timeline","today","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","todayNoTraining","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","arr","filteredTrainings","trainingsOnSelectedDay","t","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","weightValue","lastAnchorTag","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","weightHistory","latestTrainings","training","getWeightHistory","step","onChange","evt","target","onKeyDown","keyCode","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Dropdown","header","WorkoutCreator","match","params","loadWorkout","allWorkouts","_","prevState","ids","editWorkout","usersExercises","removeExerciseFromWorkout","renderSelector","onMouseOver","preventSelect","onMouseLeave","stopPropagation","addExerciseToWorkout","border","usersEquipment","usersMuscles","uniqueIds","concat","toLowerCase","usersWorkouts","removeWorkout","created","addWorkout","renderExerciseList","neededEquipment","defaultPauseTime","workoutName","ImageCard","spans","imageRef","React","createRef","addEventListener","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","get","cancelToken","CancelToken","c","request","results","alt_description","urls","regular","imageList","showImage","imageUrl","href","preventDefault","htmlFor","event","onFocus","imageUrlFieldFocused","onBlur","contentStyle","searchImages","autoComplete","imageSearch","ExerciseFormSelector","createMuscle","createEquipment","remove","deleteMuscle","deleteEquipment","newId","handleChange","ExerciseForm","formChanged","window","beforeunload","returnValue","removeEventListener","form","when","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","muscleId","equipmentId","console","log","validate","errors","onSubmit","m","back","touched","handleBlur","handleSubmit","onKeyPress","which","autoFocus","as","ImageField","muscleName","equipmentName","ExercisePreview","getExercise","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DeleteSelectorField","checked","historyField","delete","Settings","overwriteChecked","setDefaultValue","confirm","deleteAll","encodeURIComponent","file","json","setUserData","addUserData","error","fileLoadingError","saveData","download","fieldsToDelete","showLanguages","isClearable","short_name","full_name","deleteKey","setSearchSettings","wgerSearch","WgerSearch","searchSettings","status","shouldReload","editIcon","searchData","url","Object","join","Axios","prev","isRightEquipment","includes","isRightMuscles","keywordMatches","settingsProps","SearchSettings","renderArrowButtons","renderResults","ExerciseSearch","InternalSearch","App","loadDefaultData","path","component","exact","onLeave","alert","dispatch","all","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"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","file":"static/js/main.83a36099.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\nimport Axios from \"axios\";\r\n\r\n/**Current Reducer actions */\r\n//Setze ID von aktuellen Workout (in currentReducer)\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Setzt den Index der gerade durchgeführten Übung im gerade durchgeführten Workout\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeAlreadyPassed => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeAlreadyPassed\r\n  };\r\n};\r\n\r\n//Setzte die Pause in Sekunden; time = null -> Keine Pause\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\n/**userData reducer actions */\r\n\r\n/**Muscle */\r\n//Erstelle eine neue Muskulatur mit Namen <muscleName>\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\n//Lösche eine Muskulatur mit ID <id>\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n/**Equipment */\r\n//Erstelle eine neues Equipment mit Namen <equipmentName>\r\nexport const createEquipment = equipmentName => {\r\n  return { type: \"CREATE_EQUIPMENT\", payload: equipmentName };\r\n};\r\n\r\n//Lösche ein Equipment mit ID <id>\r\nexport const deleteEquipment = id => {\r\n  return { type: \"DELETE_EQUIPMENT\", payload: id };\r\n};\r\n/**Workout */\r\n//Füge ein Workout mit dem Namen <workoutName> hinzu\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\n//Entferne ein Workout mit der ID <workoutId>\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Füge eine Übung zu einem Workout hinzu (Nur Übungs-ID wird gespeichert)\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\n//Entferne eine Übung an der Stelle <position> im Workout mit der ID <workoutId> aus diesem Workout\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\n//Setze einzelne Felder in einem Workout (z. B. workout={exercises:[1,2,3]})\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\n/**Exercise */\r\n//Füge eine Übung mit dem Namen <exerciseName> zur userdata hinzu\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\n//Entferne eine Übung mit ID <exerciseId> aus der userdata\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise(exakt)\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n/** History */\r\n//Füge den Titel eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = title => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: title };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Körpergewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n/**Bearbeitung aller Daten */\r\n//Setze den Standardwert von <key> auf <value>\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\n//Lösche alle in <fieldsToDelete> angegebenen Felder\r\n//z. B. {exercises:true, muscles:true} löscht Übungen und Muskelgruppen\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\n//Setze userData auf data (überschreibt andere Daten)\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\n//Füge data zu userData hinzu (wird angehängt)\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\n/** Load defaults */\r\n\r\n//Lade Standarddaten aus json-Dateien und von wger.de\r\nexport const loadDefaultData = () => async dispatch => {\r\n  const [workouts, exercises, muscles] = await Axios.all([\r\n    Axios.get(\"/defaultData/workouts.json\"),\r\n    Axios.get(\"/defaultData/exercises.json\"),\r\n    Axios.get(\"/defaultData/muscles.json\")\r\n  ]);\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_JSON\",\r\n    payload: {\r\n      workouts: workouts.data,\r\n      exercises: exercises.data,\r\n      muscles: muscles.data\r\n    }\r\n  });\r\n  let language, muscle, equipment;\r\n  try {\r\n    [language, muscle, equipment] = await Axios.all([\r\n      wger.get(\"/language.json\"),\r\n      wger.get(\"/muscle.json\"),\r\n      wger.get(\"/equipment.json\")\r\n    ]);\r\n  } catch {\r\n    //gh-pages Zugriff auf Dateien\r\n    [language, muscle, equipment] = await Axios.all([\r\n      wger.get(\"project/language.json\"),\r\n      wger.get(\"project/muscle.json\"),\r\n      wger.get(\"project/equipment.json\")\r\n    ]);\r\n  }\r\n\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_WGER\",\r\n    payload: {\r\n      language: language.data.results,\r\n      muscle: muscle.data.results,\r\n      equipment: equipment.data.results\r\n    }\r\n  });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0,\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: [],\r\n    exercises: [],\r\n    muscles: [],\r\n    equipment: [],\r\n    shouldLoadDefaultData: true,\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles;\r\n  switch (action.type) {\r\n    /**Muscle */\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    /**Equipment */\r\n    case \"CREATE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: [\r\n          ...userData.equipment,\r\n          { id: getId(userData.equipment), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: userData.muscles.filter(\r\n          equipment => equipment.id !== action.payload\r\n        )\r\n      };\r\n    /**Workout */\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, action.payload.exerciseId]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    /**Exercise */\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          { id, name: action.payload || \"Unnamed exercise \" + id, duration: 0 }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id),\r\n          { ...action.payload.exercise, id: action.payload.id }\r\n        ]\r\n      };\r\n    /** History */\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    /**Bearbeitung aller Daten */\r\n    case \"SET_DEFAULT_VALUE\":\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles || action.payload.equipment) {\r\n        if (action.payload.muscles) {\r\n          //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n          //Behalte dabei die \"Standardmuskeln\" aus der Wger Datenbank\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              muscles: exercise.muscles.filter(muscle => muscle <= 15)\r\n            };\r\n          });\r\n        }\r\n        if (action.payload.equipment) {\r\n          //Gleiches für Equipment\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              equipment: exercise.muscles.filter(equipment => equipment <= 10)\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      //Behalte immer die \"Standardmuskeln\" aus der Wger Datenbank\r\n      muscles = action.payload.muscles\r\n        ? userData.muscles.filter(muscle => muscle.id <= 15)\r\n        : userData.muscles;\r\n      //Behalte immer das \"Standardequipment\" aus der Wger Datenbank\r\n      let equipment = action.payload.equipment\r\n        ? userData.equipment.filter(equipment => equipment.id <= 10)\r\n        : userData.equipment;\r\n      //History des Trainings; muss einzeln geleert werden\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        equipment,\r\n        defaultValues\r\n      };\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_JSON\":\r\n      return {\r\n        ...userData,\r\n        workouts: action.payload.workouts,\r\n        exercises: action.payload.exercises,\r\n        muscles: action.payload.muscles\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...action.payload.muscle],\r\n        equipment: [...userData.equipment, ...action.payload.equipment]\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: 1,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined\r\n};\r\n","export default (\r\n  data = {\r\n    languages: [],\r\n    muscles: [],\r\n    equipment: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...data,\r\n        languages: action.payload.language,\r\n        equipment: action.payload.equipment,\r\n        muscles: action.payload.muscle\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  //Daten, die für die Wger-Suche (zum Importieren von Übungen) verwendet werden\r\n  wger: wgerReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport throttle from \"lodash.throttle\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\n\r\n//Gibt gemischtes Array <array> zurück\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\n//Finde erstes Objekt aus <array> mit id <id>\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Teste, ob <date1> und <date2> am gleichen Tag liegen\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\n//Teste, ob <date> heute ist\r\nexport function isToday(date) {\r\n  return isSameDay(date, new Date());\r\n}\r\n\r\n//Gebe ein Array zurück, in dem es keine doppelten Werte gibt\r\nexport function unique(array) {\r\n  return [...new Set(array)];\r\n}\r\n\r\n//TODO\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in echte Date-Objekte verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.1).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.1).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","import React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n    this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                {this.props.exercise.description}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0 };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime = time => {\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.isRunning}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1 onClick={this.props.endPause}>\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { addTime })(PauseScreen);\r\n","import React from \"react\";\r\nimport Exercise from \"../Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.nextExercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"step backward icon\" onClick={props.previous}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Loader = props => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <div className=\"loading-bar\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui text loader\">{props.message || \"Loading...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { findById } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  state = {\r\n    isRunning: true,\r\n    pause: false\r\n  };\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        //this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text });\r\n    }\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    if (this.props.pause !== null) {\r\n      this.props.setPause(null);\r\n      this.speak(\r\n        this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n      );\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n        //fertig machen für nächstes Training(Index auf 0, clearInterval)\r\n        this.props.pushWorkoutHistory(this.props.currentWorkout.title);\r\n        this.props.setIndex(0);\r\n        this.setState({ ready: true });\r\n        this.speak(\"Well done. workout completed!\");\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //tts(\"pause starts now\");\r\n          this.speak(this.props.pauseTime + \" seconds pause\");\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout - 1 >= 0) {\r\n        this.props.setIndex(this.props.indexInWorkout - 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <FinishScreen\r\n          goToHome={() => this.props.history.push(\"/\")}\r\n          goToOverview={() => this.props.history.push(\"/overview\")}\r\n          restart={() => {\r\n            this.setState({ ready: false });\r\n            this.props.setIndex(0);\r\n          }}\r\n        />\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <Loader />;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          pause={this.props.pause}\r\n          nextExercise={this.props.exercise}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          previous={this.previous.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n  const currentIndex = state.current.index;\r\n  const currentExercise = currentWorkout\r\n    ? findById(state.userData.exercises, currentWorkout.exercises[currentIndex])\r\n    : null;\r\n  return {\r\n    exercise: currentExercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <i className=\"big heartbeat icon\"></i>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/\"}\r\n            onClick={() => this.props.history.push(\"/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                <Dropdown.Item\r\n                  key={-2}\r\n                  onClick={() => this.props.history.push(\"/exercise/search\")}\r\n                >\r\n                  <i className=\"search icon\"></i>Search\r\n                </Dropdown.Item>,\r\n                this.props.exercises.map(exercise => (\r\n                  <Dropdown.Item\r\n                    key={exercise.id}\r\n                    active={activeItem === \"/exercise/\" + exercise.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/exercise/\" + exercise.id)\r\n                    }\r\n                  >\r\n                    {exercise.name}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add exercise\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                this.props.workouts.map(workout => (\r\n                  <Dropdown.Item\r\n                    key={workout.id}\r\n                    active={activeItem === \"/workout/\" + workout.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/workout/\" + workout.id)\r\n                    }\r\n                  >\r\n                    {workout.title}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    this.props.setWorkout(null);\r\n                    this.props.history.push(\"/workout/-1\");\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add workout\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#body-weight\"}\r\n                onClick={() => this.props.history.push(\"/overview#body-weight\")}\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#statistics\"}\r\n                onClick={() => this.props.history.push(\"/overview#statistics\")}\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/wger\"}\r\n            onClick={() => this.props.history.push(\"/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/settings\"}\r\n            onClick={() => this.props.history.push(\"/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay, unique } from \"../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={\r\n            this.state.index ||\r\n            this.uniqueDaysWithTraining.length -\r\n              (this.state.todayNoTraining ? 2 : 1)\r\n          }\r\n          values={this.uniqueDaysWithTraining}\r\n          indexClick={index => this.setState({ index })}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    return this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      let index = this.state.index || this.uniqueDaysWithTraining.length - 1;\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      filteredTrainings = unique(trainingsOnSelectedDay);\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addWeight } from \"../actions\";\r\n\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"./Popup\";\r\n\r\nclass Overview extends Component {\r\n  state = { weightValue: 0, lastAnchorTag: null };\r\n  componentDidMount() {\r\n    this.setState({ weightValue: this.props.lastWeight });\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    //Bewege Website zur jeweils in URL als #anchor am Ende angegebenen Stelle\r\n    const selected = this.props.history.location.hash;\r\n    if (selected !== this.state.lastAnchorTag) {\r\n      this.setState({ lastAnchorTag: selected });\r\n      if (selected && selected.length > 0) {\r\n        const elem = document.querySelector(selected);\r\n        elem && elem.scrollIntoView();\r\n      }\r\n    }\r\n  }\r\n  getWeightHistory() {\r\n    //Formatiere Aufzeichnungen des Körpergewichts\r\n    return this.props.weightHistory.map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        //Zeige zusätzlich das Jahr an.\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"overview-section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline\r\n            latestTrainings={this.props.lastWorkouts.map(training => {\r\n              return training.date;\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory()\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button className=\"circular ui icon button add-weight\">\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={this.state.weightValue}\r\n                    onChange={evt =>\r\n                      this.setState({ weightValue: evt.target.value })\r\n                    }\r\n                    onKeyDown={evt => {\r\n                      if (evt.keyCode === 13) {\r\n                        this.props.addWeight(this.state.weightValue);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  onClick={() => this.props.addWeight(this.state.weightValue)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { findById } from \"../helpers\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"start-popup ui center aligned basic segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout\")}\r\n        >\r\n          <i className=\"play icon\"></i> Continue{\" \"}\r\n          {this.props.currentWorkout.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"eight wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i\r\n                    className=\"fas fa-play\"\r\n                    onClick={() => {\r\n                      if (this.props.currentWorkout) {\r\n                        this.props.history.push(\"/workout\");\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={!!this.props.currentWorkout}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else if (selected) {\r\n                this.props.onChange(selected.value);\r\n              } else {\r\n                //Wert wurde mit Klick auf X gelöscht\r\n                this.props.onChange(null);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown as SemanticDropdown } from \"semantic-ui-react\";\r\n\r\nexport const Dropdown = props => {\r\n  return (\r\n    <SemanticDropdown text={props.header}>\r\n      <SemanticDropdown.Menu>\r\n        {props.items.map(item => (\r\n          <SemanticDropdown.Item key={item.id}>\r\n            {item.name}\r\n          </SemanticDropdown.Item>\r\n        ))}\r\n      </SemanticDropdown.Menu>\r\n    </SemanticDropdown>\r\n  );\r\n};\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt\r\n} from \"../actions\";\r\nimport { getId, unique, findById } from \"../helpers\";\r\nimport \"../style.css\";\r\nimport Selector from \"./Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\nimport { Loader } from \"./Loader\";\r\nimport { Dropdown } from \"./Dropdown\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = findById(this.props.allWorkouts, id);\r\n    if (id === -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout == null) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else {\r\n      this.setState({ workout, id: workout.id, title: workout.title });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    //Wie componentDidMount(), inkl. Verhinderung einer endlosschleife durch setState()\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = findById(this.props.allWorkouts, id);\r\n    if (id === -1 && prevState.workout.id !== -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout == null && id !== -1) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else if (id !== -1) {\r\n      if (workout.exercises !== prevState.workout.exercises) {\r\n        this.setState({ workout, id: workout.id, title: workout.title });\r\n      }\r\n    }\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={ids => {\r\n            this.props.editWorkout(this.state.workout.id, { exercises: ids });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.state.workout.exercises\r\n            .map((exerciseId, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = findById(this.props.usersExercises, exerciseId);\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"twelve wide column exercise-name\">\r\n                          {exercise.name}\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.state.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: exerciseId\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onMouseOver={() => {\r\n                        this.setState({ preventSelect: true });\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        this.setState({ preventSelect: false });\r\n                      }}\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        this.props.removeExercise(exercise.id);\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            if (!this.state.preventSelect) {\r\n              this.props.addExerciseToWorkout(selected, this.state.workout.id);\r\n            }\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.state.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  neededEquipment(type, header) {\r\n    //Type: \"equipment\" or muscles\r\n    const list = {\r\n      equipment: this.props.usersEquipment,\r\n      muscles: this.props.usersMuscles\r\n    };\r\n    const ids = this.state.workout.exercises.map(exerciseId => {\r\n      const exercise = findById(this.props.usersExercises, exerciseId);\r\n\r\n      return exercise[type];\r\n    });\r\n\r\n    const uniqueIds = unique([].concat.apply([], ids));\r\n    if (uniqueIds.length === 0) {\r\n      return <div>No {header.toLowerCase()}</div>;\r\n    }\r\n    return (\r\n      <Dropdown\r\n        header={header}\r\n        items={uniqueIds.map(id => findById(list[type], id))}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (!this.state.workout) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.state.workout.title || \"Please select workout\"}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            <Selector\r\n              options={this.props.usersWorkouts.map(workout => {\r\n                return {\r\n                  value: workout.id,\r\n                  label: (\r\n                    <div className=\"ui grid\">\r\n                      <div className=\"twelve wide column\">{workout.title}</div>\r\n                      <div className=\"one wide column\">\r\n                        <i\r\n                          onClick={() => this.props.removeWorkout(workout.id)}\r\n                          onMouseOver={() => {\r\n                            this.setState({ preventSelect: true });\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            this.setState({ preventSelect: false });\r\n                          }}\r\n                          className=\"trash alternate icon\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                };\r\n              })}\r\n              onChange={selected => {\r\n                if (!this.state.preventSelect) {\r\n                  this.props.history.push(\"/workout/\" + selected);\r\n                }\r\n              }}\r\n              value={{ value: this.state.title, label: this.state.title }}\r\n              onCreate={created => {\r\n                this.props.addWorkout(created);\r\n                this.props.history.push(\r\n                  \"/workout/\" + getId(this.props.usersWorkouts)\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          {this.state.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.state.workout.id !== -1 ? (\r\n            <div className=\"workout-information\">\r\n              <div className=\"ui grid\">\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"equipment\", \"Needed Equipment\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"muscles\", \"Strained muscles\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                  <div className=\"ui right labeled input\">\r\n                    <div className=\"ui label\">Pause time:</div>\r\n                    <input\r\n                      value={\r\n                        this.state.workout.pauseTime ||\r\n                        this.props.defaultPauseTime\r\n                      }\r\n                      onChange={evt => {\r\n                        this.setState({\r\n                          workout: {\r\n                            ...this.state.workout,\r\n                            pauseTime: evt.target.value\r\n                          }\r\n                        });\r\n                        this.props.editWorkout(this.state.workout.id, {\r\n                          ...this.state.workout,\r\n                          pauseTime: evt.target.value\r\n                        });\r\n                      }}\r\n                    />\r\n                    <div className=\"ui basic label\">sec</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <button\r\n              className={\r\n                \"ui submit button\" +\r\n                (this.state.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() => {\r\n                this.props.setWorkout(this.state.workout.id);\r\n                this.props.history.push(\"/workout\");\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    usersEquipment: state.userData.equipment,\r\n    usersMuscles: state.userData.muscles,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass ImageWrapper extends Component {\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe eingegeben wird, cancele die\r\n    //alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(\r\n        \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9&query=\" +\r\n          keyword,\r\n        {\r\n          cancelToken: new axios.CancelToken(c => {\r\n            this.cancel = c;\r\n          })\r\n        }\r\n      );\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <Loader message={\"Getting results for \" + unsplashKeyword} />;\r\n      } else if (unsplashImages.length === 0) {\r\n        return (\r\n          <div className=\"ui negative message\">\r\n            <div className=\"header\">\r\n              No results found for {unsplashKeyword}!\r\n            </div>\r\n            Please try another searchterm.\r\n          </div>\r\n        );\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onFocus={() =>\r\n                      this.setState({ imageUrlFieldFocused: true })\r\n                    }\r\n                    onBlur={() =>\r\n                      this.setState({ imageUrlFieldFocused: false })\r\n                    }\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  />\r\n                  {this.state.imageUrlFieldFocused ? (\r\n                    <div className=\"ui pointing label\">\r\n                      Press enter to set image\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","import React from \"react\";\r\nimport { getId } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nconst ExerciseFormSelector = props => {\r\n  //props.type either \"muscles\" or \"equipment\"\r\n  const create = {\r\n    muscles: props.createMuscle,\r\n    equipment: props.createEquipment\r\n  };\r\n  const remove = {\r\n    muscles: props.deleteMuscle,\r\n    equipment: props.deleteEquipment\r\n  };\r\n  return (\r\n    <div className=\"field\">\r\n      <label>{props.type}:</label>\r\n      <Selector\r\n        isMulti\r\n        onCreate={name => {\r\n          const newId = getId(props[props.type]);\r\n          create[props.type](name);\r\n          props.handleChange({\r\n            target: {\r\n              value: [\r\n                ...props.values[props.type],\r\n                { value: newId, label: name }\r\n              ],\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        onChange={evt => {\r\n          props.handleChange({\r\n            target: {\r\n              value: evt,\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        value={(props.values[props.type] || []).map(elem => {\r\n          let data = props[props.type].find(e => e.id === elem.value);\r\n          //Falls Muskulatur oder Equipment noch nicht geladen hat, setze jeweilige Namen auf leeren String\r\n          let label = \"\";\r\n          if (data) {\r\n            label = data.name;\r\n          }\r\n\r\n          return {\r\n            value: elem.value,\r\n            label: label\r\n          };\r\n        })}\r\n        options={(props[props.type] || []).map(elem => {\r\n          return {\r\n            value: elem.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{elem.name}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      remove[props.type](elem.id);\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseFormSelector;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"../ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n} from \"../../actions\";\r\nimport { Prompt } from \"react-router\";\r\nimport ExerciseFormSelector from \"./ExerciseFormSelector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n      e.preventDefault();\r\n      e.returnValue = false;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const {\r\n      name,\r\n      duration,\r\n      description,\r\n      image,\r\n      muscles,\r\n      equipment\r\n    } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration,\r\n            description: description || \"\",\r\n            muscles: (muscles || []).map(muscleId => {\r\n              const name = this.props.muscles.find(\r\n                muscle => muscle.id === muscleId\r\n              );\r\n\r\n              return { value: muscleId, label: name };\r\n            }),\r\n            equipment: (equipment || []).map(equipmentId => {\r\n              const name = this.props.equipment.find(\r\n                equipment => equipment.id === equipmentId\r\n              );\r\n\r\n              return { value: equipmentId, label: name };\r\n            }),\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          onChange={evt => console.log(evt)}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const {\r\n              name,\r\n              duration,\r\n              description,\r\n              image,\r\n              muscles,\r\n              equipment\r\n            } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles: muscles.map(m => m.value),\r\n                equipment: equipment.map(e => e.value),\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    autoFocus={values.name === \"\"}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    autoFocus={values.name !== \"\" && values.duration <= 5}\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"muscles\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"equipment\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.props.removeExercise(this.props.exercise.id);\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles,\r\n    equipment: state.userData.equipment\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { getId } from \"../../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (this.props.match.params.id === \"search\") {\r\n      ///exercise/search\r\n      return null;\r\n    }\r\n    if (!this.state.exercise && !isNaN(this.props.match.params.id)) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"ui checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={\r\n            props.historyField\r\n              ? props.values.history[props.label.toLowerCase()]\r\n              : props.values[props.label.toLowerCase()]\r\n          }\r\n          onChange={evt => {\r\n            if (props.historyField) {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  history: {\r\n                    ...props.values.history,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  [props.label.toLowerCase()]: evt.target.checked\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n} from \"../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../helpers\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false,\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      equipment: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  saveData() {\r\n    return (\r\n      \"text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(this.props.userData))\r\n    );\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.props.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  setDefaultValue = evt => {\r\n    this.props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"ui form\">\r\n        <div className=\"ui dividing header\">Defaults</div>\r\n        <div className=\"fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration</label>\r\n            <input\r\n              name=\"exerciseDuration\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.exerciseDuration}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <input\r\n              name=\"pauseTime\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.pauseTime}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Description:</label>\r\n            <input></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui dividing header\">Data</div>\r\n        <div className=\"field\">\r\n          <label>Download all your fitness-data as JSON:</label>\r\n          <a\r\n            className=\"ui button\"\r\n            href={\"data:'\" + this.saveData()}\r\n            download=\"fitness-data.json\"\r\n            title=\"Download all of your user-data\"\r\n          >\r\n            Download\r\n          </a>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Load saved data from JSON:</label>\r\n          <FileUpload\r\n            recievedFile={this.setUserData.bind(this)}\r\n            description=\"Drag or click here to upload JSON file and load it's content!\"\r\n          />\r\n          <div>{this.state.fileLoadingError}</div>\r\n          <div className=\"field\">\r\n            <div className=\"ui checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.overwriteChecked}\r\n                onChange={() =>\r\n                  this.setState({\r\n                    overwriteChecked: !this.state.overwriteChecked\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>Overwrite old data</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Delete data:</label>\r\n          <div className=\"grouped field\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Equipment\"}\r\n              values={this.state.delete}\r\n            />\r\n            <div className=\"grouped field\">\r\n              <label>History:</label>\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Weight\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Workouts\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Training Time\"}\r\n                values={this.state.delete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"ui red button\"\r\n            onClick={this.deleteAll.bind(this)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      {props.showLanguages ? (\r\n        <div className=\"field\">\r\n          <label>Language</label>\r\n          <Select\r\n            isClearable\r\n            options={props.languages.map(lang => {\r\n              return {\r\n                label: (\r\n                  <div style={{ color: \"black\" }}>\r\n                    <i className={lang.short_name + \" flag\"}></i>\r\n                    {lang.full_name}\r\n                  </div>\r\n                ),\r\n                value: lang.id\r\n              };\r\n            })}\r\n            onChange={evt => {\r\n              if (evt === null) {\r\n                //Sprachauswahl gelöscht\r\n                props.deleteKey(\"language\");\r\n              } else {\r\n                props.setSearchSettings(\"language\", evt.value);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{muscle.name}</div>,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{equipment.name}</div>,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword{props.wgerSearch ? <span> (exact)</span> : null}:</label>\r\n        <input\r\n          type=\"text\"\r\n          onKeyDown={evt =>\r\n            evt.keyCode === 13\r\n              ? props.setSearchSettings(\"name\", evt.target.value)\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport SearchSettings from \"./SearchSettings\";\r\nimport Axios from \"axios\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    //status:2 -> Nur \"verifizierte\" Übungen\r\n    searchSettings: { status: 2 },\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    const { searchSettings } = this.state;\r\n    if (this.props.wgerSearch) {\r\n      if (!url) {\r\n        url =\r\n          \"https://wger.de/api/v2/exercise.json?\" +\r\n          Object.keys(searchSettings)\r\n            .map(key => key + \"=\" + searchSettings[key])\r\n            .join(\"&\");\r\n      }\r\n\r\n      const result = await Axios.get(url);\r\n      this.setState({\r\n        exercises: result.data.results,\r\n        next: result.data.next,\r\n        prev: result.data.previous\r\n      });\r\n    } else {\r\n      this.setState({\r\n        exercises: this.props.exercises.filter(exercise => {\r\n          const isRightEquipment =\r\n            searchSettings.equipment == null ||\r\n            exercise.equipment.includes(searchSettings.equipment);\r\n          const isRightMuscles =\r\n            searchSettings.muscles == null ||\r\n            exercise.muscles.includes(searchSettings.muscles);\r\n          const keywordMatches =\r\n            searchSettings.name == null ||\r\n            exercise.name.includes(searchSettings.name);\r\n          return isRightEquipment && isRightMuscles && keywordMatches;\r\n        })\r\n      });\r\n    }\r\n  }\r\n  renderArrowButtons() {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"right aligned column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.prev) : null\r\n              }\r\n            >\r\n              Previous page\r\n              <i className=\"arrow left icon\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.next) : null\r\n              }\r\n            >\r\n              <i className=\"arrow right icon\"></i>\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  editIcon = exercise => {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <i\r\n          className=\"plus icon\"\r\n          onClick={() => {\r\n            const idForNewExercise = getId(this.props.exercises);\r\n            this.props.addExercise(\"\");\r\n            this.props.editExercise(\r\n              {\r\n                name: exercise.name,\r\n                description: exercise.description,\r\n                muscles: exercise.muscles,\r\n                equipment: exercise.equipment\r\n              },\r\n              idForNewExercise\r\n            );\r\n            this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n          }}\r\n        ></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i\r\n          className=\"edit icon\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/exercise/\" + exercise.id);\r\n          }}\r\n        ></i>\r\n      );\r\n    }\r\n  };\r\n  renderResults() {\r\n    if (this.state.exercises === null) {\r\n      return <Loader />;\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div className=\"ui negative message\">\r\n          <div className=\"header\">No results found</div>\r\n          <p>Please try with other search settings!</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.exercises.map(ex => (\r\n        <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n          <div className=\"five wide column\">{ex.name}</div>\r\n          <div className=\"column\">{this.editIcon(ex)}</div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true,\r\n          searchSettings: { ...this.state.searchSettings, [key]: value }\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        delete this.state.searchSettings[key];\r\n        this.setState({ shouldReload: true });\r\n      },\r\n      showLanguages: this.props.showLanguages\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"ui grey inverted raised segment\">\r\n          <SearchSettings\r\n            {...settingsProps}\r\n            wgerSearch={this.props.wgerSearch}\r\n          />\r\n        </div>\r\n        <div className=\"wger-search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.renderResults()}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  addExercise\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass WgerSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Import exercises from wger.de</h1>\r\n        <ExerciseSearch showLanguages wgerSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WgerSearch;\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass InternalSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Search for exercises</h1>\r\n        <ExerciseSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InternalSearch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview/ExercisePreview\";\r\nimport Settings from \"./Settings\";\r\nimport WgerSearch from \"./ExerciseSearch/WgerSearch\";\r\nimport InternalSearch from \"./ExerciseSearch/InternalSearch\";\r\nimport { loadDefaultData } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    //Lade, falls nötig, die Standarddaten aus JSON-Dateien und wger-Datenbank\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.loadDefaultData();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Menu} />\r\n        <div className=\"content\">\r\n          {/*Da die Github Seite als Root /project hat, muss diew auf meine Hauptseite gelenkt werden (/)*/}\r\n          <Route path=\"/project\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n          <Route path=\"/overview\" component={Overview} />\r\n          <Route path=\"/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"/workout/:id\" component={WorkoutCreator} />\r\n          <Route\r\n            path=\"/exercise/:id\"\r\n            component={ExercisePreview}\r\n            onLeave={() => alert(\"hi\")}\r\n          />\r\n          <Route path=\"/exercise/search\" component={InternalSearch} />\r\n          <Route path=\"/settings\" component={Settings} />\r\n          <Route path=\"/wger\" component={WgerSearch} />\r\n          <Route path=\"/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return { muscles: state.wger.muscles };\r\n  },\r\n  { loadDefaultData }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}