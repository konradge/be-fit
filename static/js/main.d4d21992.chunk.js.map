{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Statistic.jsx","components/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/ExerciseWrapper/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/Loader.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Timeline.jsx","components/ChartComponent.jsx","components/Popup.jsx","components/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/DragAndDropList.jsx","components/Dropdown.jsx","components/WorkoutCreator.jsx","components/ImageSearch/ImageCard.jsx","components/ImageSearch/ImageField.jsx","components/ExercisePreview/ExerciseFormSelector.jsx","components/ExercisePreview/ExerciseForm.jsx","components/ExercisePreview/ExercisePreview.jsx","components/FileUpload.jsx","components/DeleteSelectorField.jsx","components/Settings.jsx","components/ExerciseSearch/SearchSettings.jsx","components/ExerciseSearch/ExerciseSearch.jsx","components/ExerciseSearch/WgerSearch.jsx","components/ExerciseSearch/InternalSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setIndex","index","setStoppedAt","timeAlreadyPassed","setPause","time","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","addWeight","newWeight","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","console","log","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","workoutStoppedAt","pause","undefined","combineReducers","current","action","userData","history","workouts","exercises","muscles","equipment","getId","name","filter","muscle","title","find","w","splice","position","duration","updatedWorkouts","map","deleted","e","ex","date","Date","key","parseInt","value","startId","prop","m","wger","data","languages","language","findById","array","elem","isSameDay","date1","date2","getDate","getMonth","getYear","list","sortedIds","item","sort","a","b","length","unique","Set","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","calcStats","setState","Array","from","statistics","keys","Math","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","isNaN","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","speech","Speech","init","lang","speak","text","queue","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","dangerouslySetInnerHTML","__html","PauseScreen","pauseEnded","beforeunload","endPause","window","addEventListener","removeEventListener","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","push","previous","pauseTimer","runTimer","Loader","message","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","ready","pushWorkoutHistory","currentWorkout","nextExerciseIndex","exerciseList","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","icon","idForNewExercise","Timeline","today","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","todayNoTraining","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","arr","filteredTrainings","trainingsOnSelectedDay","t","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","weightValue","lastAnchorTag","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","weightHistory","latestTrainings","training","getWeightHistory","step","onChange","evt","target","onKeyDown","keyCode","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Dropdown","header","WorkoutCreator","match","params","loadWorkout","_","prevState","editedExercises","editWorkout","newIdOrder","newOrder","usersExercises","editExerciseDurationInWorkout","removeExerciseFromWorkout","renderExerciseSelector","onMouseOver","preventSelect","onMouseLeave","stopPropagation","addExerciseToWorkout","border","selectedWorkout","usersWorkouts","removeWorkout","created","addWorkout","usersEquipment","usersMuscles","ids","uniqueIds","concat","toLowerCase","renderWorkoutSelector","renderExerciseList","neededEquipment","defaultPauseTime","preventDefault","confirm","ownProps","allWorkouts","workoutName","ImageCard","spans","imageRef","React","createRef","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","get","cancelToken","CancelToken","c","request","results","alt_description","urls","regular","imageList","showImage","imageUrl","href","htmlFor","event","onFocus","imageUrlFieldFocused","onBlur","contentStyle","searchImages","autoComplete","imageSearch","ExerciseFormSelector","createMuscle","createEquipment","remove","deleteMuscle","deleteEquipment","newId","handleChange","ExerciseForm","formChanged","form","when","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","muscleId","equipmentId","validate","errors","onSubmit","back","touched","handleBlur","handleSubmit","onKeyPress","which","autoFocus","as","ImageField","muscleName","equipmentName","ExercisePreview","getExercise","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DeleteSelectorField","checked","historyField","delete","Settings","overwriteChecked","setDefaultValue","deleteAll","encodeURIComponent","file","json","setUserData","addUserData","error","fileLoadingError","saveData","download","fieldsToDelete","showLanguages","isClearable","short_name","full_name","deleteKey","setSearchSettings","wgerSearch","WgerSearch","searchSettings","status","shouldReload","editIcon","searchData","url","Object","join","Axios","prev","isRightEquipment","includes","isRightMuscles","keywordMatches","settingsProps","SearchSettings","renderArrowButtons","renderResults","ExerciseSearch","InternalSearch","App","loadDefaultData","path","component","exact","dispatch","all","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"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","file":"static/js/main.d4d21992.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\nimport Axios from \"axios\";\r\n\r\n/**Current Reducer actions */\r\n//Setze ID von aktuellen Workout (in currentReducer)\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Setzt den Index der gerade durchgeführten Übung im gerade durchgeführten Workout\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeAlreadyPassed => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeAlreadyPassed\r\n  };\r\n};\r\n\r\n//Setzte die Pause in Sekunden; time = null -> Keine Pause\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\n/**userData reducer actions */\r\n\r\n/**Muscle */\r\n//Erstelle eine neue Muskulatur mit Namen <muscleName>\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\n//Lösche eine Muskulatur mit ID <id>\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n/**Equipment */\r\n//Erstelle eine neues Equipment mit Namen <equipmentName>\r\nexport const createEquipment = equipmentName => {\r\n  return { type: \"CREATE_EQUIPMENT\", payload: equipmentName };\r\n};\r\n\r\n//Lösche ein Equipment mit ID <id>\r\nexport const deleteEquipment = id => {\r\n  return { type: \"DELETE_EQUIPMENT\", payload: id };\r\n};\r\n/**Workout */\r\n//Füge ein Workout mit dem Namen <workoutName> hinzu\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\n//Entferne ein Workout mit der ID <workoutId>\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Füge eine Übung zu einem Workout hinzu (Nur Übungs-ID wird gespeichert)\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\n//Entferne eine Übung an der Stelle <position> im Workout mit der ID <workoutId> aus diesem Workout\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\n//Setze einzelne Felder in einem Workout (z. B. workout={exercises:[1,2,3]})\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\n/**Exercise */\r\n//Füge eine Übung mit dem Namen <exerciseName> zur userdata hinzu\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\n//Entferne eine Übung mit ID <exerciseId> aus der userdata\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise(exakt)\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n/** History */\r\n//Füge den Titel eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = title => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: title };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Körpergewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n/**Bearbeitung aller Daten */\r\n//Setze den Standardwert von <key> auf <value>\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\n//Lösche alle in <fieldsToDelete> angegebenen Felder\r\n//z. B. {exercises:true, muscles:true} löscht Übungen und Muskelgruppen\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\n//Setze userData auf data (überschreibt andere Daten)\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\n//Füge data zu userData hinzu (wird angehängt)\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\n/** Load defaults */\r\n\r\n//Lade Standarddaten aus json-Dateien und von wger.de\r\nexport const loadDefaultData = () => async dispatch => {\r\n  let workouts, exercises, muscles;\r\n  try {\r\n    [workouts, exercises, muscles] = await Axios.all([\r\n      Axios.get(\"/defaultData/workouts.json\"),\r\n      Axios.get(\"/defaultData/exercises.json\"),\r\n      Axios.get(\"/defaultData/muscles.json\")\r\n    ]);\r\n  } catch {\r\n    [workouts, exercises, muscles] = await Axios.all([\r\n      Axios.get(\"/be-fit/defaultData/workouts.json\"),\r\n      Axios.get(\"/be-fit/defaultData/exercises.json\"),\r\n      Axios.get(\"/be-fit/defaultData/muscles.json\")\r\n    ]);\r\n  }\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_JSON\",\r\n    payload: {\r\n      workouts: workouts.data,\r\n      exercises: exercises.data,\r\n      muscles: muscles.data\r\n    }\r\n  });\r\n  const [language, muscle, equipment] = await Axios.all([\r\n    wger.get(\"/language.json\"),\r\n    wger.get(\"/muscle.json\"),\r\n    wger.get(\"/equipment.json\")\r\n  ]);\r\n\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_WGER\",\r\n    payload: {\r\n      language: language.data.results,\r\n      muscle: muscle.data.results,\r\n      equipment: equipment.data.results\r\n    }\r\n  });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    //console.log(state.current.pause);\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0,\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: [],\r\n    exercises: [],\r\n    muscles: [],\r\n    equipment: [],\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles, equipment;\r\n  switch (action.type) {\r\n    /**Muscle */\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    /**Equipment */\r\n    case \"CREATE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: [\r\n          ...userData.equipment,\r\n          { id: getId(userData.equipment), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: userData.muscles.filter(\r\n          equipment => equipment.id !== action.payload\r\n        )\r\n      };\r\n    /**Workout */\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, { id: action.payload.exerciseId }]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          workout,\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId)\r\n        ]\r\n      };\r\n    /**Exercise */\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          {\r\n            id,\r\n            name: action.payload || \"Unnamed exercise \" + id,\r\n            duration: userData.defaultValues.exerciseDuration\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise.id !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          { ...action.payload.exercise, id: action.payload.id },\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id)\r\n        ]\r\n      };\r\n    /** History */\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    /**Bearbeitung aller Daten */\r\n    case \"SET_DEFAULT_VALUE\":\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles || action.payload.equipment) {\r\n        if (action.payload.muscles) {\r\n          //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n          //Behalte dabei die \"Standardmuskeln\" aus der Wger Datenbank\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              muscles: exercise.muscles.filter(muscle => muscle <= 15)\r\n            };\r\n          });\r\n        }\r\n        if (action.payload.equipment) {\r\n          //Gleiches für Equipment\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              equipment: exercise.muscles.filter(equipment => equipment <= 10)\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      //Behalte immer die \"Standardmuskeln\" aus der Wger Datenbank\r\n      muscles = action.payload.muscles\r\n        ? userData.muscles.filter(muscle => muscle.id <= 15)\r\n        : userData.muscles;\r\n      //Behalte immer das \"Standardequipment\" aus der Wger Datenbank\r\n      equipment = action.payload.equipment\r\n        ? userData.equipment.filter(equipment => equipment.id <= 10)\r\n        : userData.equipment;\r\n      //History des Trainings; muss einzeln geleert werden\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        equipment,\r\n        defaultValues\r\n      };\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history, muscles, equipment } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles.filter(m => m.id <= 15)],\r\n        equipment: [\r\n          ...userData.equipment,\r\n          ...equipment.filter(e => e.id <= 10)\r\n        ],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_JSON\":\r\n      return {\r\n        ...userData,\r\n        workouts: action.payload.workouts,\r\n        exercises: action.payload.exercises,\r\n        muscles: action.payload.muscles\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...action.payload.muscle],\r\n        equipment: [...userData.equipment, ...action.payload.equipment]\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: null,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined\r\n};\r\n","export default (\r\n  data = {\r\n    languages: [],\r\n    muscles: [],\r\n    equipment: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...data,\r\n        languages: action.payload.language,\r\n        equipment: action.payload.equipment,\r\n        muscles: action.payload.muscle\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  //Daten, die für die Wger-Suche (zum Importieren von Übungen) verwendet werden\r\n  wger: wgerReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport throttle from \"lodash.throttle\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\n\r\n//Gibt gemischtes Array <array> zurück\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\n//Finde erstes Objekt aus <array> mit id <id>\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Teste, ob <date1> und <date2> am gleichen Tag liegen\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\n//Teste, ob <date> heute ist\r\nexport function isToday(date) {\r\n  return isSameDay(date, new Date());\r\n}\r\n\r\n//Gebe ein Array zurück, in dem es keine doppelten Werte gibt\r\nexport function unique(array) {\r\n  return [...new Set(array)];\r\n}\r\n\r\n//TODO\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in echte Date-Objekte verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.5).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.5).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","import React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({\r\n            text: \"\" + time,\r\n            queue: false\r\n          });\r\n        }\r\n      }\r\n      //Eine Sekunde ist vergangen\r\n      this.props.addTime(1 / 60);\r\n      this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.props.exercise.description\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime, setPause } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0, pauseEnded: false, running: true };\r\n  async componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload);\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload);\r\n    this.props.setPause(this.state.time);\r\n  }\r\n  beforeunload = () => {\r\n    //Soll während reload nicht weiterlaufen\r\n    this.setState({ running: false });\r\n    this.props.setPause(this.state.lastTime);\r\n  };\r\n  renderTime = time => {\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.props.addTime(1);\r\n\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.setPause(null);\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            startAt={0}\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.state.running ? this.props.isRunning : false}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1\r\n                onClick={() => {\r\n                  this.setState({ pauseEnded: true });\r\n                  this.props.endPause();\r\n                }}\r\n              >\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  state => {\r\n    return { pause: state.current.pause };\r\n  },\r\n  { addTime, setPause }\r\n)(PauseScreen);\r\n","import React from \"react\";\r\nimport Exercise from \"./Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  //\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.exercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"step backward icon\" onClick={props.previous}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Loader = props => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <div className=\"loading-bar\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui text loader\">{props.message || \"Loading...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { findById } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isRunning: true,\r\n      pause: false\r\n    };\r\n  }\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text, queue: false });\r\n    }\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    console.log(this.props.pause);\r\n    if (this.props.pause != null) {\r\n      this.props.setPause(null);\r\n      this.speak(\r\n        this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n        //fertig machen für nächstes Training(Index auf 0, clearInterval)\r\n        this.props.pushWorkoutHistory(this.props.currentWorkout.title);\r\n        this.props.setIndex(0);\r\n        this.setState({ ready: true });\r\n        this.speak(\"Well done. workout completed!\");\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //tts(\"pause starts now\");\r\n          const nextExerciseIndex = this.props.currentWorkout.exercises[\r\n            this.props.indexInWorkout + 1\r\n          ].id;\r\n          const nextExercise = findById(\r\n            this.props.exerciseList,\r\n            nextExerciseIndex\r\n          );\r\n\r\n          this.speak(\r\n            this.props.pauseTime +\r\n              \" seconds pause. prepare for \" +\r\n              nextExercise.name\r\n          );\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.pause) {\r\n        this.props.setPause(null);\r\n      } else {\r\n        if (this.props.indexInWorkout - 1 >= 0) {\r\n          this.props.setIndex(this.props.indexInWorkout - 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <FinishScreen\r\n          goToHome={() => this.props.history.push(\"/be-fit/\")}\r\n          goToOverview={() => this.props.history.push(\"/be-fit/overview\")}\r\n          restart={() => {\r\n            this.setState({ ready: false });\r\n            this.props.setIndex(0);\r\n          }}\r\n        />\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <Loader />;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          previous={this.previous.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n\r\n  const currentIndex = state.current.index;\r\n  const currentExercise = currentWorkout\r\n    ? findById(\r\n        state.userData.exercises,\r\n        currentWorkout.exercises[currentIndex].id\r\n      )\r\n    : null;\r\n  let exercise = { ...currentExercise };\r\n\r\n  if (currentWorkout.exercises[currentIndex].duration) {\r\n    //Eigene Zeit wurde angegeben\r\n    exercise.duration = parseInt(\r\n      currentWorkout.exercises[currentIndex].duration\r\n    );\r\n  }\r\n  return {\r\n    exercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime,\r\n    exerciseList: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <span className=\"logo\" />\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <div className=\"scrollable-menu\">\r\n                {[\r\n                  <Dropdown.Item\r\n                    key={-2}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/be-fit/exercise/search\")\r\n                    }\r\n                  >\r\n                    <i className=\"search icon\"></i>Search\r\n                  </Dropdown.Item>,\r\n                  <Dropdown.Item\r\n                    key={-1}\r\n                    onClick={() => {\r\n                      const idForNewExercise = getId(this.props.exercises);\r\n                      this.props.addExercise(\"\");\r\n                      this.props.history.push(\r\n                        \"/be-fit/exercise/\" + idForNewExercise\r\n                      );\r\n                    }}\r\n                  >\r\n                    <i className=\"plus icon\"></i>Add exercise\r\n                  </Dropdown.Item>,\r\n                  <div className=\"ui divider\" key={-3} />,\r\n                  this.props.exercises.map(exercise => (\r\n                    <Dropdown.Item\r\n                      key={exercise.id}\r\n                      active={activeItem === \"/be-fit/exercise/\" + exercise.id}\r\n                      onClick={() =>\r\n                        this.props.history.push(\r\n                          \"/be-fit/exercise/\" + exercise.id\r\n                        )\r\n                      }\r\n                    >\r\n                      {exercise.name}\r\n                    </Dropdown.Item>\r\n                  ))\r\n                ]}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit/wger\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <div className=\"scrollable-menu\">\r\n                {[\r\n                  this.props.workouts.map(workout => (\r\n                    <Dropdown.Item\r\n                      key={workout.id}\r\n                      active={activeItem === \"/be-fit/workout/\" + workout.id}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/be-fit/workout/\" + workout.id)\r\n                      }\r\n                    >\r\n                      {workout.title}\r\n                    </Dropdown.Item>\r\n                  )),\r\n                  <Dropdown.Item\r\n                    key={-1}\r\n                    onClick={() => {\r\n                      this.props.setWorkout(null);\r\n                      this.props.history.push(\"/be-fit/workout/-1\");\r\n                    }}\r\n                  >\r\n                    <i className=\"plus icon\"></i>Add workout\r\n                  </Dropdown.Item>\r\n                ]}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#body-weight\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#body-weight\")\r\n                }\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#statistics\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#statistics\")\r\n                }\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit/settings\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay, unique } from \"../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={\r\n            this.state.index ||\r\n            this.uniqueDaysWithTraining.length -\r\n              (this.state.todayNoTraining ? 2 : 1)\r\n          }\r\n          values={this.uniqueDaysWithTraining}\r\n          indexClick={index => this.setState({ index })}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    return this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      let index = this.state.index || this.uniqueDaysWithTraining.length - 1;\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      filteredTrainings = unique(trainingsOnSelectedDay);\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addWeight } from \"../actions\";\r\n\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"./Popup\";\r\n\r\nclass Overview extends Component {\r\n  state = { weightValue: 0, lastAnchorTag: null };\r\n  componentDidMount() {\r\n    this.setState({ weightValue: this.props.lastWeight });\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    //Bewege Website zur jeweils in URL als #anchor am Ende angegebenen Stelle\r\n    const selected = this.props.history.location.hash;\r\n    if (selected !== this.state.lastAnchorTag) {\r\n      this.setState({ lastAnchorTag: selected });\r\n      if (selected && selected.length > 0) {\r\n        const elem = document.querySelector(selected);\r\n        elem && elem.scrollIntoView();\r\n      }\r\n    }\r\n  }\r\n  getWeightHistory() {\r\n    //Formatiere Aufzeichnungen des Körpergewichts\r\n    return this.props.weightHistory.map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        //Zeige zusätzlich das Jahr an.\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"overview-section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline\r\n            latestTrainings={this.props.lastWorkouts.map(training => {\r\n              return training.date;\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory()\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button className=\"circular ui icon button add-weight\">\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={this.state.weightValue}\r\n                    onChange={evt =>\r\n                      this.setState({ weightValue: evt.target.value })\r\n                    }\r\n                    onKeyDown={evt => {\r\n                      if (evt.keyCode === 13) {\r\n                        this.props.addWeight(this.state.weightValue);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  onClick={() => this.props.addWeight(this.state.weightValue)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { findById } from \"../helpers\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return <Redirect to=\"/be-fit/workout/-1\" />;\r\n    }\r\n    return (\r\n      <div className=\"ui center aligned basic vertical segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/be-fit/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div className=\"ui buttons\">\r\n          <button\r\n            className=\"ui button\"\r\n            onClick={() => {\r\n              this.props.history.push(\r\n                \"/be-fit/workout/\" + this.props.currentWorkout.id\r\n              );\r\n            }}\r\n          >\r\n            <i className=\"redo icon\" />\r\n            Restart\r\n          </button>\r\n          <div className=\"or\"></div>\r\n          <button\r\n            className=\"ui positive button\"\r\n            onClick={() => this.props.history.push(\"/be-fit/workout\")}\r\n          >\r\n            <i className=\"play icon\" />\r\n            Continue\r\n          </button>\r\n          Hello World\r\n        </div>\r\n        {this.props.currentWorkout.title}\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"eight wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i className=\"fas fa-play\"></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state,\r\n    exercise: state.userData.exercises[0]\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else if (selected) {\r\n                this.props.onChange(selected.value);\r\n              } else {\r\n                //Wert wurde mit Klick auf X gelöscht\r\n                this.props.onChange(null);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown as SemanticDropdown } from \"semantic-ui-react\";\r\n\r\nexport const Dropdown = props => {\r\n  return (\r\n    <SemanticDropdown text={props.header}>\r\n      <SemanticDropdown.Menu>\r\n        {props.items.map(item => (\r\n          <SemanticDropdown.Item key={item.id}>\r\n            {item.name}\r\n          </SemanticDropdown.Item>\r\n        ))}\r\n      </SemanticDropdown.Menu>\r\n    </SemanticDropdown>\r\n  );\r\n};\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt,\r\n  setIndex\r\n} from \"../actions\";\r\nimport { getId, unique, findById } from \"../helpers\";\r\nimport \"../style.css\";\r\nimport Selector from \"./Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\nimport { Loader } from \"./Loader\";\r\nimport { Dropdown } from \"./Dropdown\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    if (this.props.workout == null) {\r\n      this.props.history.push(\"/be-fit/workout/-1\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (this.props.workout == null && this.props.match.params.id !== \"-1\") {\r\n      this.props.history.push(\"/be-fit/workout/-1\");\r\n    }\r\n  }\r\n\r\n  editExerciseDurationInWorkout(indexInWorkout, duration) {\r\n    let editedExercises = this.props.workout.exercises.map((ex, index) => {\r\n      if (index !== indexInWorkout) {\r\n        return ex;\r\n      } else {\r\n        return { id: ex.id, duration };\r\n      }\r\n    });\r\n    this.props.editWorkout(this.props.workout.id, {\r\n      exercises: editedExercises\r\n    });\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={newIdOrder => {\r\n            const newOrder = newIdOrder.map(id =>\r\n              this.props.workout.exercises.find(ex => ex.id === id)\r\n            );\r\n            this.props.editWorkout(this.props.workout.id, {\r\n              exercises: newOrder\r\n            });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.props.workout.exercises\r\n            .map((ex, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = findById(this.props.usersExercises, ex.id);\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"eight wide column exercise-name\">\r\n                          {exercise.name}\r\n                        </div>\r\n                        <div className=\"four wide column\">\r\n                          <div className=\"ui right labeled mini input\">\r\n                            <input\r\n                              type=\"number\"\r\n                              value={\r\n                                ex.duration == null\r\n                                  ? exercise.duration\r\n                                  : ex.duration\r\n                              }\r\n                              onChange={evt =>\r\n                                this.editExerciseDurationInWorkout(\r\n                                  index,\r\n                                  parseInt(evt.target.value)\r\n                                )\r\n                              }\r\n                            ></input>\r\n                            <div className=\"ui basic label\">seconds</div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.props.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: ex.id\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderExerciseSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderExerciseSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onMouseOver={() => {\r\n                        this.setState({ preventSelect: true });\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        this.setState({ preventSelect: false });\r\n                      }}\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        this.props.removeExercise(exercise.id);\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            if (!this.state.preventSelect) {\r\n              this.props.addExerciseToWorkout(selected, this.props.workout.id);\r\n            }\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.props.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/be-fit/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  renderWorkoutSelector() {\r\n    const selectedWorkout = this.props.workout || {\r\n      title: \"SELECT WORKOUT OR TYPE TO ADD ONE\"\r\n    };\r\n    return (\r\n      <Selector\r\n        options={this.props.usersWorkouts.map(workout => {\r\n          return {\r\n            value: workout.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{workout.title}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={() => this.props.removeWorkout(workout.id)}\r\n                    onMouseOver={() => {\r\n                      this.setState({ preventSelect: true });\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      this.setState({ preventSelect: false });\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n        onChange={selected => {\r\n          if (!this.state.preventSelect) {\r\n            this.props.history.push(\"/be-fit/workout/\" + selected);\r\n          }\r\n        }}\r\n        value={{\r\n          value: selectedWorkout.title,\r\n          label: selectedWorkout.title\r\n        }}\r\n        onCreate={created => {\r\n          this.props.addWorkout(created);\r\n          this.props.history.push(\r\n            \"/workout/\" + getId(this.props.usersWorkouts)\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  neededEquipment(type, header) {\r\n    //Type: \"equipment\" or muscles\r\n    const list = {\r\n      equipment: this.props.usersEquipment,\r\n      muscles: this.props.usersMuscles\r\n    };\r\n    const ids = this.props.workout.exercises.map(ex => {\r\n      const exercise = findById(this.props.usersExercises, ex.id);\r\n\r\n      return exercise[type];\r\n    });\r\n\r\n    const uniqueIds = unique([].concat.apply([], ids));\r\n    if (uniqueIds.length === 0) {\r\n      return <div>No {header.toLowerCase()}</div>;\r\n    }\r\n    return (\r\n      <Dropdown\r\n        header={header}\r\n        items={uniqueIds.map(id => findById(list[type], id))}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (this.props.match.params.id === \"-1\") {\r\n      return this.renderWorkoutSelector();\r\n    }\r\n    if (!this.props.workout) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.props.workout.title}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            {this.renderWorkoutSelector()}\r\n          </div>\r\n          {this.props.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.props.workout.id !== -1 ? (\r\n            <div className=\"workout-information\">\r\n              <div className=\"ui grid\">\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"equipment\", \"Needed Equipment\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"muscles\", \"Strained muscles\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                  <div className=\"ui right labeled input\">\r\n                    <div className=\"ui label\">Pause time:</div>\r\n                    <input\r\n                      value={\r\n                        this.props.workout.pauseTime ||\r\n                        this.props.defaultPauseTime\r\n                      }\r\n                      onChange={evt => {\r\n                        this.setState({\r\n                          workout: {\r\n                            ...this.props.workout,\r\n                            pauseTime: evt.target.value\r\n                          }\r\n                        });\r\n                        this.props.editWorkout(this.props.workout.id, {\r\n                          ...this.props.workout,\r\n                          pauseTime: evt.target.value\r\n                        });\r\n                      }}\r\n                    />\r\n                    <div className=\"ui basic label\">sec</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            {this.props.workout.id !== -1 ? (\r\n              <div>\r\n                <button\r\n                  className={\r\n                    \"ui submit button\" +\r\n                    (this.props.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n                  }\r\n                  onClick={() => {\r\n                    this.props.setIndex(0);\r\n                    this.props.setWorkout(this.props.workout.id);\r\n                    this.props.history.push(\"/be-fit/workout\");\r\n                  }}\r\n                >\r\n                  Start\r\n                </button>\r\n                <button\r\n                  className=\"ui red button\"\r\n                  onClick={evt => {\r\n                    evt.preventDefault();\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are your sure that you want to delete all this workout?\"\r\n                      )\r\n                    ) {\r\n                      this.props.removeWorkout(this.props.workout.id);\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = parseInt(ownProps.match.params.id);\r\n  const workout = findById(state.userData.workouts, id);\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    usersEquipment: state.userData.equipment,\r\n    usersMuscles: state.userData.muscles,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime,\r\n    workout\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt,\r\n  setIndex\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass ImageWrapper extends Component {\r\n  baseURL =\r\n    \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9\";\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe\r\n    // eingegeben wird, cancele die alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(this.baseURL + \"&query=\" + keyword, {\r\n        cancelToken: new axios.CancelToken(c => {\r\n          this.cancel = c;\r\n        })\r\n      });\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <Loader message={\"Getting results for \" + unsplashKeyword} />;\r\n      } else if (unsplashImages.length === 0) {\r\n        return (\r\n          <div className=\"ui negative message\">\r\n            <div className=\"header\">\r\n              No results found for {unsplashKeyword}!\r\n            </div>\r\n            Please try another searchterm.\r\n          </div>\r\n        );\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onFocus={() =>\r\n                      this.setState({ imageUrlFieldFocused: true })\r\n                    }\r\n                    onBlur={() =>\r\n                      this.setState({ imageUrlFieldFocused: false })\r\n                    }\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  />\r\n                  {this.state.imageUrlFieldFocused ? (\r\n                    <div className=\"ui pointing label\">\r\n                      Press enter to set image\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","import React from \"react\";\r\nimport { getId } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nconst ExerciseFormSelector = props => {\r\n  //props.type either \"muscles\" or \"equipment\"\r\n  const create = {\r\n    muscles: props.createMuscle,\r\n    equipment: props.createEquipment\r\n  };\r\n  const remove = {\r\n    muscles: props.deleteMuscle,\r\n    equipment: props.deleteEquipment\r\n  };\r\n  return (\r\n    <div className=\"field\">\r\n      <label>{props.type}:</label>\r\n      <Selector\r\n        isMulti\r\n        onCreate={name => {\r\n          const newId = getId(props[props.type]);\r\n          create[props.type](name);\r\n          props.handleChange({\r\n            target: {\r\n              value: [\r\n                ...props.values[props.type],\r\n                { value: newId, label: name }\r\n              ],\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        onChange={evt => {\r\n          props.handleChange({\r\n            target: {\r\n              value: evt,\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        value={(props.values[props.type] || []).map(elem => {\r\n          let data = props[props.type].find(e => e.id === elem.value);\r\n          //Falls Muskulatur oder Equipment noch nicht geladen hat, setze jeweilige Namen auf leeren String\r\n          let label = \"\";\r\n          if (data) {\r\n            label = data.name;\r\n          }\r\n\r\n          return {\r\n            value: elem.value,\r\n            label: label\r\n          };\r\n        })}\r\n        options={(props[props.type] || []).map(elem => {\r\n          return {\r\n            value: elem.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{elem.name}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      remove[props.type](elem.id);\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseFormSelector;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"../ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n} from \"../../actions\";\r\nimport { Prompt } from \"react-router\";\r\nimport ExerciseFormSelector from \"./ExerciseFormSelector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const {\r\n      name,\r\n      duration,\r\n      description,\r\n      image,\r\n      muscles,\r\n      equipment\r\n    } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration,\r\n            description: description || \"\",\r\n            muscles: (muscles || []).map(muscleId => {\r\n              const name = this.props.muscles.find(\r\n                muscle => muscle.id === muscleId\r\n              );\r\n\r\n              return { value: muscleId, label: name };\r\n            }),\r\n            equipment: (equipment || []).map(equipmentId => {\r\n              const name = this.props.equipment.find(\r\n                equipment => equipment.id === equipmentId\r\n              );\r\n\r\n              return { value: equipmentId, label: name };\r\n            }),\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const {\r\n              name,\r\n              duration,\r\n              description,\r\n              image,\r\n              muscles,\r\n              equipment\r\n            } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles: (muscles || []).map(m => m.value),\r\n                equipment: (equipment || []).map(e => e.value),\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    autoFocus={values.name === \"\"}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    autoFocus={values.name !== \"\" && values.duration <= 5}\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"muscles\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"equipment\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={evt => {\r\n                    evt.preventDefault();\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Abbort\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are your sure that you want to delete this exercise?\"\r\n                      )\r\n                    ) {\r\n                      this.setState({ formChanged: false });\r\n                      this.props.removeExercise(this.props.exercise.id);\r\n                      this.props.back();\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles,\r\n    equipment: state.userData.equipment\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { getId } from \"../../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (this.props.match.params.id === \"search\") {\r\n      ///exercise/search\r\n      return null;\r\n    }\r\n    if (!this.state.exercise && !isNaN(this.props.match.params.id)) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\r\n                      \"/be-fit/exercise/\" + idForNewExercise\r\n                    );\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"item\">\r\n      <div className=\"field\">\r\n        <div className=\"ui checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={\r\n              props.historyField\r\n                ? props.values.history[props.label.toLowerCase()]\r\n                : props.values[props.label.toLowerCase()]\r\n            }\r\n            onChange={evt => {\r\n              if (props.historyField) {\r\n                props.setState({\r\n                  delete: {\r\n                    ...props.values,\r\n                    history: {\r\n                      ...props.values.history,\r\n                      [props.label.toLowerCase()]: evt.target.checked\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n                props.setState({\r\n                  delete: {\r\n                    ...props.values,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                });\r\n              }\r\n            }}\r\n          />\r\n          <label>{props.label}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n} from \"../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../helpers\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false,\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      equipment: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  saveData() {\r\n    return (\r\n      \"text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(this.props.userData))\r\n    );\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.state.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  setDefaultValue = evt => {\r\n    this.props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  render() {\r\n    console.log(this.state.delete);\r\n    console.log(\r\n      this.state.delete.history.workouts &&\r\n        this.state.delete.history.weight &&\r\n        this.state.delete.history[\"training time\"]\r\n    );\r\n    return (\r\n      <form className=\"ui form\">\r\n        <div className=\"ui dividing header\">Defaults</div>\r\n        <div className=\"fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration</label>\r\n            <input\r\n              name=\"exerciseDuration\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.exerciseDuration}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <input\r\n              name=\"pauseTime\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.pauseTime}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui dividing header\">Data</div>\r\n        <div className=\"field\">\r\n          <label>Download all your fitness-data as JSON:</label>\r\n          <a\r\n            className=\"ui button\"\r\n            href={\"data:'\" + this.saveData()}\r\n            download=\"fitness-data.json\"\r\n            title=\"Download all of your user-data\"\r\n          >\r\n            Download\r\n          </a>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Load saved data from JSON:</label>\r\n          <FileUpload\r\n            recievedFile={this.setUserData.bind(this)}\r\n            description=\"Drag or click here to upload JSON file and load it's content!\"\r\n          />\r\n          <div>{this.state.fileLoadingError}</div>\r\n          <div className=\"field\">\r\n            <div className=\"ui checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.overwriteChecked}\r\n                onChange={() =>\r\n                  this.setState({\r\n                    overwriteChecked: !this.state.overwriteChecked\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>Overwrite old data</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Delete data:</label>\r\n          <div className=\"ui list\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Equipment\"}\r\n              values={this.state.delete}\r\n            />\r\n            <div className=\"item\">\r\n              <div className=\"ui checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={\r\n                    this.state.delete.history.workouts &&\r\n                    this.state.delete.history.weight &&\r\n                    this.state.delete.history[\"training time\"]\r\n                  }\r\n                  onChange={evt =>\r\n                    this.setState({\r\n                      delete: {\r\n                        ...this.state.delete,\r\n                        history: {\r\n                          workouts: evt.target.checked,\r\n                          weight: evt.target.checked,\r\n                          \"training time\": evt.target.checked\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                ></input>\r\n                <label>History:</label>\r\n              </div>\r\n              <div className=\"list\">\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Weight\"}\r\n                  values={this.state.delete}\r\n                />\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Workouts\"}\r\n                  values={this.state.delete}\r\n                />\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Training Time\"}\r\n                  values={this.state.delete}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"ui red button\"\r\n            onClick={this.deleteAll.bind(this)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      {props.showLanguages ? (\r\n        <div className=\"field\">\r\n          <label>Language</label>\r\n          <Select\r\n            isClearable\r\n            options={props.languages.map(lang => {\r\n              return {\r\n                label: (\r\n                  <div style={{ color: \"black\" }}>\r\n                    <i className={lang.short_name + \" flag\"}></i>\r\n                    {lang.full_name}\r\n                  </div>\r\n                ),\r\n                value: lang.id\r\n              };\r\n            })}\r\n            onChange={evt => {\r\n              if (evt === null) {\r\n                //Sprachauswahl gelöscht\r\n                props.deleteKey(\"language\");\r\n              } else {\r\n                props.setSearchSettings(\"language\", evt.value);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{muscle.name}</div>,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{equipment.name}</div>,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword{props.wgerSearch ? <span> (exact)</span> : null}:</label>\r\n        <input\r\n          type=\"text\"\r\n          onKeyDown={evt =>\r\n            evt.keyCode === 13\r\n              ? props.setSearchSettings(\"name\", evt.target.value)\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport SearchSettings from \"./SearchSettings\";\r\nimport Axios from \"axios\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    //status:2 -> Nur \"verifizierte\" Übungen\r\n    searchSettings: { status: 2 },\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    const { searchSettings } = this.state;\r\n    if (this.props.wgerSearch) {\r\n      if (!url) {\r\n        url =\r\n          \"https://wger.de/api/v2/exercise.json?\" +\r\n          Object.keys(searchSettings)\r\n            .map(key => key + \"=\" + searchSettings[key])\r\n            .join(\"&\");\r\n      }\r\n\r\n      const result = await Axios.get(url);\r\n      this.setState({\r\n        exercises: result.data.results,\r\n        next: result.data.next,\r\n        prev: result.data.previous\r\n      });\r\n    } else {\r\n      this.setState({\r\n        exercises: this.props.exercises.filter(exercise => {\r\n          const isRightEquipment =\r\n            searchSettings.equipment == null ||\r\n            exercise.equipment.includes(searchSettings.equipment);\r\n          const isRightMuscles =\r\n            searchSettings.muscles == null ||\r\n            exercise.muscles.includes(searchSettings.muscles);\r\n          const keywordMatches =\r\n            searchSettings.name == null ||\r\n            exercise.name.includes(searchSettings.name);\r\n          return isRightEquipment && isRightMuscles && keywordMatches;\r\n        })\r\n      });\r\n    }\r\n  }\r\n  renderArrowButtons() {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"right aligned column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.prev) : null\r\n              }\r\n            >\r\n              Previous page\r\n              <i className=\"arrow left icon\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.next) : null\r\n              }\r\n            >\r\n              <i className=\"arrow right icon\"></i>\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  editIcon = exercise => {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <i\r\n          className=\"plus icon\"\r\n          onClick={() => {\r\n            const idForNewExercise = getId(this.props.exercises);\r\n            this.props.addExercise(\"\");\r\n            this.props.editExercise(\r\n              {\r\n                name: exercise.name,\r\n                description: exercise.description,\r\n                muscles: exercise.muscles,\r\n                equipment: exercise.equipment\r\n              },\r\n              idForNewExercise\r\n            );\r\n            this.props.history.push(\"/be-fit/exercise/\" + idForNewExercise);\r\n          }}\r\n        ></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i\r\n          className=\"edit icon\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/be-fit/exercise/\" + exercise.id);\r\n          }}\r\n        ></i>\r\n      );\r\n    }\r\n  };\r\n  renderResults() {\r\n    if (this.state.exercises === null) {\r\n      return <Loader />;\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div className=\"ui negative message\">\r\n          <div className=\"header\">No results found</div>\r\n          <p>Please try with other search settings!</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.exercises.map(ex => (\r\n        <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n          <div className=\"five wide column\">{ex.name}</div>\r\n          <div className=\"column\">{this.editIcon(ex)}</div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true,\r\n          searchSettings: { ...this.state.searchSettings, [key]: value }\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        delete this.state.searchSettings[key];\r\n        this.setState({ shouldReload: true });\r\n      },\r\n      showLanguages: this.props.showLanguages\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"ui grey inverted raised segment\">\r\n          <SearchSettings\r\n            {...settingsProps}\r\n            wgerSearch={this.props.wgerSearch}\r\n          />\r\n        </div>\r\n        <div className=\"wger-search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.renderResults()}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  addExercise\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass WgerSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Import exercises from wger.de</h1>\r\n        <ExerciseSearch showLanguages wgerSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WgerSearch;\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass InternalSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Search for exercises</h1>\r\n        <ExerciseSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InternalSearch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview/ExercisePreview\";\r\nimport Settings from \"./Settings\";\r\nimport WgerSearch from \"./ExerciseSearch/WgerSearch\";\r\nimport InternalSearch from \"./ExerciseSearch/InternalSearch\";\r\nimport { loadDefaultData } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    //Lade, falls nötig, die Standarddaten aus JSON-Dateien und wger-Datenbank\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.loadDefaultData();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/(be-fit)?\" component={Menu} />\r\n        <div className=\"content\">\r\n          <Route path=\"(/be-fit)?/overview\" component={Overview} />\r\n          <Route path=\"(/be-fit)?/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"(/be-fit)?/workout/:id\" component={WorkoutCreator} />\r\n          <Route path=\"(/be-fit)?/exercise/:id\" component={ExercisePreview} />\r\n          <Route path=\"(/be-fit)?/exercise/search\" component={InternalSearch} />\r\n          <Route path=\"(/be-fit)?/settings\" component={Settings} />\r\n          <Route path=\"(/be-fit)?/wger\" component={WgerSearch} />\r\n          <Route path=\"(/be-fit)?/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      muscles: state.wger.muscles,\r\n      exercise: state.userData.exercises[0]\r\n    };\r\n  },\r\n  { loadDefaultData }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}