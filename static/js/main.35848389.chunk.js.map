{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Statistic.jsx","components/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Timeline.jsx","components/ChartComponent.jsx","components/Popup.jsx","components/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/DragAndDropList.jsx","components/WorkoutCreator.jsx","components/ImageSearch/ImageCard.jsx","components/ImageSearch/ImageField.jsx","components/ExerciseForm.jsx","components/ExercisePreview.jsx","components/FileUpload.jsx","components/DeleteSelectorField.jsx","components/Settings.jsx","components/WgerSearch/WgerSearchSettings.jsx","components/WgerSearch/WgerSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setStoppedAt","timeInExercise","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","addWeight","newWeight","getMuscles","dispatch","a","wger","get","response","data","results","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","defaultExercises","defaultWorkouts","defaultMuscles","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","index","workoutStoppedAt","pause","undefined","languages","muscles","equipment","combineReducers","current","action","userData","history","workouts","exercises","shouldLoadMuscles","startId","getId","prop","map","key","parseInt","value","date","Date","title","filter","ex","find","w","splice","position","name","duration","updatedWorkouts","deleted","e","newMuscles","forEach","muscle","push","console","log","speech","sliceArray","arr","maxLength","slice","Math","sign","length","isSameDay","date1","date2","getDate","getMonth","getYear","getWorkout","workoutList","getExercise","exerciseList","list","sortedIds","item","sort","b","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","array","calcStats","setState","Array","from","statistics","keys","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","today","getFullYear","isToday","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","time","isNaN","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","Speech","init","lang","speak","text","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","PauseScreen","queue","endPause","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","previous","pauseTimer","runTimer","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","setPause","ready","pushWorkoutHistory","currentWorkout","setIndex","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","Dropdown","icon","idForNewExercise","Timeline","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","todayNoTraining","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","elem","filteredTrainings","trainingsOnSelectedDay","t","Set","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","popupCanOpen","weightValue","forceUpdate","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","training","weightHistory","latestTrainings","getLastTrainings","getWeightHistory","Number","POSITIVE_INFINITY","step","onChange","evt","target","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","WorkoutCreator","match","params","loadWorkout","_","prevState","ids","editWorkout","usersExercises","removeExerciseFromWorkout","renderSelector","onMouseOver","preventSelect","onMouseLeave","stopPropagation","addExerciseToWorkout","border","usersWorkouts","removeWorkout","created","addWorkout","renderExerciseList","defaultPauseTime","allWorkouts","workoutName","ImageCard","spans","imageRef","React","createRef","addEventListener","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","cancelToken","CancelToken","c","request","alt_description","urls","regular","imageList","showImage","imageUrl","href","preventDefault","htmlFor","event","onKeyDown","contentStyle","searchImages","autoComplete","imageSearch","ExerciseForm","formChanged","window","beforeunload","returnValue","removeEventListener","form","when","message","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","validate","errors","onSubmit","back","touched","handleChange","handleBlur","handleSubmit","onKeyPress","which","onBlur","newId","createMuscle","m","deleteMuscle","as","ImageField","muscleName","ExercisePreview","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DeleteSelectorField","checked","historyField","toLowerCase","delete","Settings","overwriteChecked","setDefaultValue","confirm","deleteAll","encodeURIComponent","file","json","setUserData","addUserData","error","fileLoadingError","saveData","download","fieldsToDelete","isClearable","short_name","full_name","deleteKey","setSearchSettings","keyCode","WgerSearch","searchSettings","status","shouldReload","getLanguages","getEquipment","searchData","url","Object","join","Axios","prev","settingsProps","WgerSearchSettings","renderArrowButtons","App","path","component","exact","onLeave","alert","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"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","file":"static/js/main.35848389.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\n\r\n//Setze ID von currentExercise(Mithilfe Übungsindex kann dann echte Übung geholt werden)\r\nexport const setExercise = exerciseId => {\r\n  return {\r\n    type: \"SET_EXERCISE\",\r\n    payload: exerciseId\r\n  };\r\n};\r\n\r\n//Erstelle zufälliges Workout aus exerciseCount Übungen (Array aus Inidzes)\r\n//Dabei ist exercisePool ein Array aus möglichen Indizes\r\nexport const createRandomWorkout = (exercisePool, exerciseCount) => {\r\n  return {\r\n    type: \"CREATE_RANDOM_WORKOUT\",\r\n    payload: { exercisePool, exerciseCount }\r\n  };\r\n};\r\n\r\n//Setze ID von Workout\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeInExercise => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeInExercise\r\n  };\r\n};\r\n\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n//Füge die ID eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = (workout, title) => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: { workout, title } };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Gewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n\r\n/*\r\n  Importiere Daten\r\n*/\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\n/** Wger actions */\r\n\r\nexport const getLanguages = () => async dispatch => {\r\n  const response = await wger.get(\"/language.json\");\r\n  dispatch({ type: \"GET_LANGUAGES\", payload: response.data.results });\r\n};\r\n\r\nexport const getMuscles = () => async dispatch => {\r\n  const response = await wger.get(\"/muscle.json\");\r\n\r\n  dispatch({ type: \"GET_MUSCLES\", payload: response.data.results });\r\n};\r\n\r\nexport const getEquipment = () => async dispatch => {\r\n  const response = await wger.get(\"/equipment.json\");\r\n\r\n  dispatch({ type: \"GET_EQUIPMENT\", payload: response.data.results });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultExercises = [];\r\n\r\nconst defaultWorkouts = [];\r\n\r\nconst defaultMuscles = [];\r\n\r\n//Lade nur beim ersten Mal auch die Muskeln aus der Wger-API,\r\n//danach jedoch nicht mehr\r\nconst shouldLoadMuscles = true;\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0,\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: defaultWorkouts,\r\n    exercises: defaultExercises,\r\n    muscles: defaultMuscles,\r\n    shouldLoadMuscles,\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles;\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles) {\r\n        //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n\r\n        exercises = userData.exercises.map(exercise => {\r\n          return { ...exercise, muscles: [] };\r\n        });\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      muscles = action.payload.muscles ? [] : userData.muscles;\r\n      //History des Trainings\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        defaultValues\r\n      };\r\n    case \"SET_DEFAULT_VALUE\":\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload.title }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id),\r\n          { ...action.payload.exercise, id: action.payload.id }\r\n        ]\r\n      };\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, action.payload.exerciseId]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          { id, name: action.payload || \"Unnamed exercise \" + id, duration: 0 }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"GET_MUSCLES\":\r\n      if (!userData.shouldLoadMuscles) {\r\n        return userData;\r\n      }\r\n      let newMuscles = [];\r\n      action.payload.forEach(muscle => {\r\n        newMuscles.push({\r\n          name: muscle.name,\r\n          id: getId([...(userData.muscles || []), ...newMuscles])\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...newMuscles],\r\n        shouldLoadMuscles: false\r\n      };\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      console.log(\r\n        userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      );\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: 1,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined\r\n};\r\n","export default (results = def, action) => {\r\n  switch (action.type) {\r\n    case \"GET_LANGUAGES\":\r\n      return { ...results, languages: action.payload };\r\n    case \"GET_EQUIPMENT\":\r\n      return { ...results, equipment: action.payload };\r\n    case \"GET_MUSCLES\":\r\n      return { ...results, muscles: action.payload };\r\n    default:\r\n      return results;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  languages: [],\r\n  muscles: [],\r\n  equipment: []\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  wger: wgerReducer,\r\n  speech: (speech = null, action) => {\r\n    if (action.type === \"SET_SPEECH\") {\r\n      return action.payload;\r\n    }\r\n    return speech;\r\n  }\r\n});\r\n","import { createStore } from \"redux\";\r\nimport throttle from \"lodash.throttle\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport function formatTime(seconds) {\r\n  let hours = Math.floor(seconds / (60 * 60));\r\n  let mins = Math.floor((seconds % (60 * 60)) / 60);\r\n  let secs = Math.floor(seconds % 60);\r\n  return (\r\n    (hours === 0 ? \"\" : hours + \":\") +\r\n    (mins < 10 ? \"0\" + mins : mins) +\r\n    \":\" +\r\n    (secs < 10 ? \"0\" + secs : secs)\r\n  );\r\n}\r\n\r\n//For copy call shuffle([...array])\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Calculates an array, which has max length of maxLength\r\nexport function sliceArray(arr, maxLength) {\r\n  return arr.slice(\r\n    Math.sign(arr.length - maxLength) === -1 ? 0 : arr.length - maxLength\r\n  );\r\n}\r\n\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\nexport function getWorkout(id, workoutList) {\r\n  return workoutList.find(workout => workout.id === id);\r\n}\r\n\r\nexport function getExercise(id, exerciseList) {\r\n  return exerciseList.find(exercise => exercise.id === id);\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\nexport function isToday(date) {\r\n  const today = new Date();\r\n  return (\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n  );\r\n}\r\n\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in Daten verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.1).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.1).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","import React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n    this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                {this.props.exercise.description}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0 };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime = time => {\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.isRunning}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1 onClick={this.props.endPause}>\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { addTime })(PauseScreen);\r\n","import React from \"react\";\r\nimport Exercise from \"../Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.nextExercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"step backward icon\" onClick={props.previous}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { getWorkout, getExercise } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  state = {\r\n    isRunning: true,\r\n    pause: false\r\n  };\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        //this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text });\r\n    }\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    if (this.props.pause !== null) {\r\n      this.props.setPause(null);\r\n      this.speak(\r\n        this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n      );\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n        //fertig machen für nächstes Training(Index auf 0, clearInterval)\r\n        this.props.pushWorkoutHistory(\r\n          this.props.currentWorkout.id,\r\n          this.props.currentWorkout.title\r\n        );\r\n        this.props.setIndex(0);\r\n        this.setState({ ready: true });\r\n        this.speak(\"Well done. workout completed!\");\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //tts(\"pause starts now\");\r\n          this.speak(this.props.pauseTime + \" seconds pause\");\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout - 1 >= 0) {\r\n        this.props.setIndex(this.props.indexInWorkout - 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <FinishScreen\r\n          goToHome={() => this.props.history.push(\"/\")}\r\n          goToOverview={() => this.props.history.push(\"/overview\")}\r\n          restart={() => {\r\n            this.setState({ ready: false });\r\n            this.props.setIndex(0);\r\n          }}\r\n        />\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <div>Loading Exercise...</div>;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          pause={this.props.pause}\r\n          nextExercise={this.props.exercise}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          previous={this.previous.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = getWorkout(\r\n    state.current.workout,\r\n    state.userData.workouts\r\n  );\r\n  const currentIndex = state.current.index;\r\n  const currentExercise = currentWorkout\r\n    ? getExercise(\r\n        currentWorkout.exercises[currentIndex],\r\n        state.userData.exercises\r\n      )\r\n    : null;\r\n  return {\r\n    exercise: currentExercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <i className=\"big heartbeat icon\"></i>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/\"}\r\n            onClick={() => this.props.history.push(\"/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                this.props.exercises.map(exercise => (\r\n                  <Dropdown.Item\r\n                    key={exercise.id}\r\n                    active={activeItem === \"/exercise/\" + exercise.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/exercise/\" + exercise.id)\r\n                    }\r\n                  >\r\n                    {exercise.name}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add exercise\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                this.props.workouts.map(workout => (\r\n                  <Dropdown.Item\r\n                    key={workout.id}\r\n                    active={activeItem === \"/workout/\" + workout.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/workout/\" + workout.id)\r\n                    }\r\n                  >\r\n                    {workout.title}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    this.props.setWorkout(null);\r\n                    this.props.history.push(\"/workout/-1\");\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add workout\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#body-weight\"}\r\n                onClick={() => this.props.history.push(\"/overview#body-weight\")}\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#statistics\"}\r\n                onClick={() => this.props.history.push(\"/overview#statistics\")}\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/wger\"}\r\n            onClick={() => this.props.history.push(\"/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/settings\"}\r\n            onClick={() => this.props.history.push(\"/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay } from \"../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={\r\n            this.state.index ||\r\n            this.uniqueDaysWithTraining.length -\r\n              (this.state.todayNoTraining ? 2 : 1)\r\n          }\r\n          values={this.uniqueDaysWithTraining}\r\n          indexClick={index => this.setState({ index })}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    return this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      let index = this.state.index || this.uniqueDaysWithTraining.length - 1;\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      filteredTrainings = [...new Set(trainingsOnSelectedDay)];\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\nimport dateFormat from \"dateformat\";\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { sliceArray } from \"../helpers\";\r\nimport { addWeight } from \"../actions\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"./Popup\";\r\nclass Overview extends Component {\r\n  state = { popupCanOpen: true, weightValue: this.props.lastWeight };\r\n  componentDidMount() {\r\n    this.forceUpdate();\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    const selected = this.props.history.location.hash;\r\n    if (selected && selected.length > 0) {\r\n      const elem = document.querySelector(selected);\r\n      elem && elem.scrollIntoView();\r\n    }\r\n  }\r\n  //Die letzen count Trainings werden formatiert und auf die richtige Länge gekürzt\r\n  getLastTrainings(count) {\r\n    return sliceArray(this.props.lastWorkouts, count).map(training => {\r\n      return training.date;\r\n    });\r\n  }\r\n  getWeightHistory(count) {\r\n    return sliceArray(this.props.weightHistory, count).map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"overview-section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline latestTrainings={this.getLastTrainings(20)} />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory(Number.POSITIVE_INFINITY)\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button\r\n                onClick={() =>\r\n                  this.setState({ popupCanOpen: !this.state.popupCanOpen })\r\n                }\r\n                className=\"circular ui icon button add-weight\"\r\n              >\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={this.state.weightValue}\r\n                    onChange={evt =>\r\n                      this.setState({ weightValue: evt.target.value })\r\n                    }\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  onClick={() => {\r\n                    this.props.addWeight(this.state.weightValue);\r\n                    this.setState({ popupCanOpen: false });\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n            canOpen={this.state.popupCanOpen}\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = null;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { getWorkout } from \"../helpers\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"start-popup ui center aligned basic segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout\")}\r\n        >\r\n          <i className=\"play icon\"></i> Continue{\" \"}\r\n          {this.props.currentWorkout.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"eight wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i\r\n                    className=\"fas fa-play\"\r\n                    onClick={() => {\r\n                      if (this.props.currentWorkout) {\r\n                        this.props.history.push(\"/workout\");\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={!!this.props.currentWorkout}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = getWorkout(\r\n    state.current.workout,\r\n    state.userData.workouts\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else {\r\n                this.props.onChange(selected.value);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt\r\n} from \"../actions\";\r\nimport { getExercise, getId, getWorkout } from \"../helpers\";\r\nimport \"../style.css\";\r\nimport Selector from \"./Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = this.getWorkout(id);\r\n    if (id === -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout === null) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else {\r\n      this.setState({ workout, id: workout.id, title: workout.title });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    //Wie componentDidMount(), inkl. Verhinderung einer endlosschleife durch setState()\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = this.getWorkout(id);\r\n    if (id === -1 && prevState.workout.id !== -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout === null && id !== -1) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else if (id !== -1) {\r\n      if (workout.exercises !== prevState.workout.exercises) {\r\n        this.setState({ workout, id: workout.id, title: workout.title });\r\n      }\r\n    }\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={ids => {\r\n            this.props.editWorkout(this.state.workout.id, { exercises: ids });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.state.workout.exercises\r\n            .map((exerciseId, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = getExercise(\r\n                exerciseId,\r\n                this.props.usersExercises\r\n              );\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"twelve wide column exercise-name\">\r\n                          {exercise.name}\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.state.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: exerciseId\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onMouseOver={() => {\r\n                        this.setState({ preventSelect: true });\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        this.setState({ preventSelect: false });\r\n                      }}\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        this.props.removeExercise(exercise.id);\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            if (!this.state.preventSelect) {\r\n              this.props.addExerciseToWorkout(selected, this.state.workout.id);\r\n            }\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.state.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (!this.state.workout) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.state.workout.title || \"Please select workout\"}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            <Selector\r\n              options={this.props.usersWorkouts.map(workout => {\r\n                return {\r\n                  value: workout.id,\r\n                  label: (\r\n                    <div className=\"ui grid\">\r\n                      <div className=\"twelve wide column\">{workout.title}</div>\r\n                      <div className=\"one wide column\">\r\n                        <i\r\n                          onClick={() => this.props.removeWorkout(workout.id)}\r\n                          onMouseOver={() => {\r\n                            this.setState({ preventSelect: true });\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            this.setState({ preventSelect: false });\r\n                          }}\r\n                          className=\"trash alternate icon\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                };\r\n              })}\r\n              onChange={selected => {\r\n                if (!this.state.preventSelect) {\r\n                  this.props.history.push(\"/workout/\" + selected);\r\n                }\r\n              }}\r\n              value={{ value: this.state.title, label: this.state.title }}\r\n              onCreate={created => {\r\n                this.props.addWorkout(created);\r\n                this.props.history.push(\r\n                  \"/workout/\" + getId(this.props.usersWorkouts)\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          {this.state.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.state.workout.id !== -1 ? (\r\n            <div className=\"ui right labeled input pause-time-input\">\r\n              <div className=\"ui label\">Pause time:</div>\r\n              <input\r\n                value={\r\n                  this.state.workout.pauseTime || this.props.defaultPauseTime\r\n                }\r\n                onChange={evt => {\r\n                  this.setState({\r\n                    workout: {\r\n                      ...this.state.workout,\r\n                      pauseTime: evt.target.value\r\n                    }\r\n                  });\r\n                  this.props.editWorkout(this.state.workout.id, {\r\n                    ...this.state.workout,\r\n                    pauseTime: evt.target.value\r\n                  });\r\n                }}\r\n              />\r\n              <div className=\"ui basic label\">sec</div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <button\r\n              className={\r\n                \"ui submit button\" +\r\n                (this.state.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() => {\r\n                this.props.setWorkout(this.state.workout.id);\r\n                this.props.history.push(\"/workout\");\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //Finde das Workout mit ID id aus der Liste aller Workouts\r\n  getWorkout(id) {\r\n    const workout = getWorkout(id, this.props.allWorkouts);\r\n    if (workout) {\r\n      return workout;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nclass ImageWrapper extends Component {\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe eingegeben wird, cancele die\r\n    //alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(\r\n        \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9&query=\" +\r\n          keyword,\r\n        {\r\n          cancelToken: new axios.CancelToken(c => {\r\n            this.cancel = c;\r\n          })\r\n        }\r\n      );\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <div>Searching for {unsplashKeyword}...</div>;\r\n      } else if (unsplashImages.length === 0) {\r\n        return <div>Could not find result for {unsplashKeyword}</div>;\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"./ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  getMuscles,\r\n  deleteMuscle,\r\n  removeExercise\r\n} from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nimport { Prompt } from \"react-router\";\r\nimport Selector from \"./Selector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.getMuscles();\r\n    }\r\n\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n    /*\r\n    if (window.performance) {\r\n      if (performance.navigation.type == 1) {\r\n        let x = window.confirm(\"This page is reloaded\");\r\n        alert(x);\r\n      } else {\r\n        alert(\"This page is not reloaded\");\r\n      }\r\n    }*/\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n      e.preventDefault();\r\n      e.returnValue = false;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const { name, duration, description, image, muscles } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration,\r\n            description: description || \"\",\r\n            muscles: muscles || [],\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          onChange={evt => console.log(evt)}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const { name, duration, description, image, muscles } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles,\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Muscles:</label>\r\n                  <Selector\r\n                    isMulti\r\n                    onCreate={name => {\r\n                      const newId = getId(this.props.muscles);\r\n                      this.props.createMuscle(name);\r\n                      handleChange({\r\n                        target: {\r\n                          value: [\r\n                            ...values.muscles,\r\n                            { value: newId, label: name }\r\n                          ],\r\n                          name: \"muscles\"\r\n                        }\r\n                      });\r\n                    }}\r\n                    onChange={evt => {\r\n                      handleChange({\r\n                        target: {\r\n                          value: evt,\r\n                          name: \"muscles\"\r\n                        }\r\n                      });\r\n                    }}\r\n                    value={(values.muscles || []).map(muscle => {\r\n                      return {\r\n                        value: muscle.value,\r\n                        label: this.props.muscles.find(\r\n                          m => m.id === muscle.value\r\n                        ).name\r\n                      };\r\n                    })}\r\n                    options={this.props.muscles.map(muscle => {\r\n                      return {\r\n                        value: muscle.id,\r\n                        label: (\r\n                          <div className=\"ui grid\">\r\n                            <div className=\"twelve wide column\">\r\n                              {muscle.name}\r\n                            </div>\r\n                            <div className=\"one wide column\">\r\n                              <i\r\n                                onClick={evt => {\r\n                                  evt.stopPropagation();\r\n                                  this.props.deleteMuscle(muscle.id);\r\n                                }}\r\n                                className=\"trash alternate icon\"\r\n                              ></i>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      };\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.props.removeExercise(this.props.exercise.id);\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  getMuscles,\r\n  deleteMuscle,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n  TODO: Leere Übungen nicht erlauben\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (!this.state.exercise) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"ui checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={\r\n            props.historyField\r\n              ? props.values.history[props.label.toLowerCase()]\r\n              : props.values[props.label.toLowerCase()]\r\n          }\r\n          onChange={evt => {\r\n            if (props.historyField) {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  history: {\r\n                    ...props.values.history,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  [props.label.toLowerCase()]: evt.target.checked\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n} from \"../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../helpers\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false,\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  saveData() {\r\n    return (\r\n      \"text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(this.props.userData))\r\n    );\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.props.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  setDefaultValue = evt => {\r\n    this.props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"ui form\">\r\n        <div className=\"ui dividing header\">Defaults</div>\r\n        <div className=\"fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration</label>\r\n            <input\r\n              name=\"exerciseDuration\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.exerciseDuration}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <input\r\n              name=\"pauseTime\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.pauseTime}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Description:</label>\r\n            <input></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui dividing header\">Data</div>\r\n        <div className=\"field\">\r\n          <label>Download all your fitness-data as JSON:</label>\r\n          <a\r\n            className=\"ui button\"\r\n            href={\"data:'\" + this.saveData()}\r\n            download=\"fitness-data.json\"\r\n            title=\"Download all of your user-data\"\r\n          >\r\n            Download\r\n          </a>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Load saved data from JSON:</label>\r\n          <FileUpload\r\n            recievedFile={this.setUserData.bind(this)}\r\n            description=\"Drag or click here to upload JSON file and load it's content!\"\r\n          />\r\n          <div>{this.state.fileLoadingError}</div>\r\n          <div className=\"field\">\r\n            <div className=\"ui checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.overwriteChecked}\r\n                onChange={() =>\r\n                  this.setState({\r\n                    overwriteChecked: !this.state.overwriteChecked\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>Overwrite old data</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Delete data:</label>\r\n          <div className=\"grouped field\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <div className=\"grouped field\">\r\n              <label>History:</label>\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Weight\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Workouts\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Training Time\"}\r\n                values={this.state.delete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"ui red button\"\r\n            onClick={this.deleteAll.bind(this)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      <div className=\"field\">\r\n        <label>Language</label>\r\n        <Select\r\n          isClearable\r\n          options={props.languages.map(lang => {\r\n            return {\r\n              label: (\r\n                <div>\r\n                  <i className={lang.short_name + \" flag\"}></i>\r\n                  {lang.full_name}\r\n                </div>\r\n              ),\r\n              value: lang.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"language\");\r\n            } else {\r\n              props.setSearchSettings(\"language\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: muscle.name,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: equipment.name,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword (exact):</label>\r\n        <input\r\n          type=\"text\"\r\n          onKeyDown={evt =>\r\n            evt.keyCode === 13\r\n              ? props.setSearchSettings(\"name\", evt.target.value)\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  getLanguages,\r\n  getMuscles,\r\n  getEquipment,\r\n  editExercise,\r\n  addExercise\r\n} from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport WgerSearchSettings from \"./WgerSearchSettings\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    //status:2 -> Nur \"verifizierte\" Übungen\r\n    searchSettings: { status: 2 },\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.languages.length === 0) {\r\n      this.props.getLanguages();\r\n    }\r\n\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.getMuscles();\r\n    }\r\n    if (this.props.equipment.length === 0) {\r\n      this.props.getEquipment();\r\n    }\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    if (!url) {\r\n      const { searchSettings } = this.state;\r\n      url =\r\n        \"http://wger.de/api/v2/exercise.json?\" +\r\n        Object.keys(searchSettings)\r\n          .map(key => key + \"=\" + searchSettings[key])\r\n          .join(\"&\");\r\n    }\r\n\r\n    const result = await Axios.get(url);\r\n    this.setState({\r\n      exercises: result.data.results,\r\n      next: result.data.next,\r\n      prev: result.data.previous\r\n    });\r\n  }\r\n  renderArrowButtons() {\r\n    return (\r\n      <div className=\"ui two column grid\">\r\n        <div className=\"right aligned column\">\r\n          <button\r\n            className={\r\n              \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n            }\r\n            onClick={() =>\r\n              this.state.next ? this.searchData(this.state.next) : null\r\n            }\r\n          >\r\n            Previous page\r\n            <i\r\n              className=\"arrow left icon\"\r\n              onClick={() =>\r\n                this.state.prev ? this.searchData(this.state.prev) : null\r\n              }\r\n            ></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"column\">\r\n          <button\r\n            className={\r\n              \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n            }\r\n            onClick={() =>\r\n              this.state.next ? this.searchData(this.state.next) : null\r\n            }\r\n          >\r\n            <i className=\"arrow right icon\"></i>\r\n            Next page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true,\r\n          searchSettings: { ...this.state.searchSettings, [key]: value }\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        delete this.state.searchSettings[key];\r\n        this.setState({ shouldReload: true });\r\n      }\r\n    };\r\n    if (this.state.exercises === null) {\r\n      return (\r\n        <div>\r\n          <WgerSearchSettings {...settingsProps} />\r\n          Loading...\r\n        </div>\r\n      );\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div>\r\n          <WgerSearchSettings {...settingsProps} />\r\n          Could not find result... Please change search settings!\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <WgerSearchSettings {...settingsProps} />\r\n        <div className=\"wger-search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.state.exercises.map(ex => (\r\n              <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n                <div className=\"five wide column\">{ex.name}</div>\r\n                <div className=\"column\">\r\n                  <i\r\n                    className=\"plus icon\"\r\n                    onClick={() => {\r\n                      const idForNewExercise = getId(this.props.exercises);\r\n                      this.props.addExercise(\"\");\r\n                      this.props.editExercise(\r\n                        {\r\n                          name: ex.name,\r\n                          description: ex.description\r\n                        },\r\n                        idForNewExercise\r\n                      );\r\n                      this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                    }}\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  getLanguages,\r\n  getMuscles,\r\n  getEquipment,\r\n  editExercise,\r\n  addExercise\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview\";\r\nimport Settings from \"./Settings\";\r\nimport WgerSearch from \"./WgerSearch/WgerSearch\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Menu} />\r\n        <div className=\"content\">\r\n          {/*Da die Github Seite als Root /project hat, muss diew auf meine Hauptseite gelenkt werden (/)*/}\r\n          <Route path=\"/project\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n          <Route path=\"/overview\" component={Overview} />\r\n          <Route path=\"/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"/workout/:id\" component={WorkoutCreator} />\r\n          <Route\r\n            path=\"/exercise/:id\"\r\n            component={ExercisePreview}\r\n            onLeave={() => alert(\"hi\")}\r\n          />\r\n          <Route path=\"/settings\" component={Settings} />\r\n          <Route path=\"/wger\" component={WgerSearch} />\r\n          <Route path=\"/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}