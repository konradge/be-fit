{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Overview/Statistic.jsx","components/Overview/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/ExerciseWrapper/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/Loader.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Overview/Timeline.jsx","components/Overview/ChartComponent.jsx","components/Popup.jsx","components/Overview/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/WorkoutCreator/DragAndDropList.jsx","components/WorkoutCreator/Dropdown.jsx","components/WorkoutCreator/WorkoutCreator.jsx","components/ExercisePreview/ImageSearch/ImageCard.jsx","components/ExercisePreview/ImageSearch/ImageField.jsx","components/ExercisePreview/ExerciseFormSelector.jsx","components/ExercisePreview/ExerciseForm.jsx","components/ExercisePreview/ExercisePreview.jsx","components/Settings/FileUpload.jsx","components/Settings/DefaultSettings.jsx","components/Settings/DataDownloader.jsx","components/Settings/DeleteSelectorField.jsx","components/Settings/DataDeletor.jsx","components/Settings/Settings.jsx","components/ExerciseSearch/SearchSettings.jsx","components/ExerciseSearch/ExerciseSearch.jsx","components/ExerciseSearch/WgerSearch.jsx","components/ExerciseSearch/InternalSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setIndex","index","setStoppedAt","timeAlreadyPassed","setPause","time","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","addWeight","newWeight","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","workoutStoppedAt","pause","undefined","searchSettings","status","page","combineReducers","current","action","userData","history","workouts","exercises","muscles","equipment","getId","name","filter","muscle","title","find","w","splice","position","duration","updatedWorkouts","map","deleted","e","ex","date","Date","key","parseInt","value","startId","prop","m","wger","data","languages","language","announceExercise","exerciseList","speech","findById","speak","text","queue","array","elem","isSameDay","date1","date2","getDate","getMonth","getYear","list","sortedIds","item","sort","a","b","length","isToday","unique","Set","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","calcStats","setState","Array","from","statistics","keys","Math","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","isNaN","isFinite","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","Speech","init","lang","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","dangerouslySetInnerHTML","__html","PauseScreen","pauseEnded","beforeunload","endPause","window","addEventListener","removeEventListener","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","push","stopWorkout","pauseTimer","runTimer","Loader","message","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","ready","pushWorkoutHistory","currentWorkout","finishWorkout","nextExerciseIndex","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","icon","idForNewExercise","Timeline","today","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","lastTrainings","arr","filteredTrainings","trainingsOnSelectedDay","t","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","weightValue","lastAnchorTag","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","weightHistory","latestTrainings","training","getWeightHistory","step","min","onChange","evt","target","onKeyDown","keyCode","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Dropdown","header","WorkoutCreator","match","params","loadWorkout","_","prevState","editedExercises","editWorkout","newIdOrder","newOrder","usersExercises","editExerciseDurationInWorkout","removeExerciseFromWorkout","renderExerciseSelector","stopPropagation","confirm","addExerciseToWorkout","border","selectedWorkout","usersWorkouts","removeWorkout","preventSelect","created","addWorkout","usersEquipment","usersMuscles","ids","uniqueIds","concat","toLowerCase","renderWorkoutSelector","renderExerciseList","neededEquipment","preventDefault","ownProps","allWorkouts","defaultPauseTime","workoutName","ImageCard","spans","imageRef","React","createRef","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","get","cancelToken","CancelToken","c","request","results","alt_description","urls","regular","imageList","showImage","imageUrl","href","htmlFor","event","onFocus","imageUrlFieldFocused","onBlur","contentStyle","searchImages","autoComplete","imageSearch","ExerciseFormSelector","createMuscle","createEquipment","remove","deleteMuscle","deleteEquipment","newId","handleChange","ExerciseForm","formChanged","form","when","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","muscleId","equipmentId","validate","errors","onSubmit","back","touched","handleBlur","handleSubmit","onKeyPress","which","autoFocus","as","ImageField","muscleName","equipmentName","ExercisePreview","getExercise","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DefaultSettings","setDefaultValue","DataDownloader","url","encodeURIComponent","download","DeleteSelectorField","checked","historyField","delete","DataDeletor","deleteAll","fieldsToDelete","Settings","overwriteChecked","clear","reload","file","json","setUserData","addUserData","error","fileLoadingError","resetAll","showLanguages","isClearable","short_name","full_name","deleteKey","setSearchSettings","defaultValue","mus","eq","wgerSearch","WgerSearch","shouldReload","editIcon","searchData","Object","join","Axios","prev","previous","isRightEquipment","includes","isRightMuscles","keywordMatches","setSearchPage","settingsProps","settings","SearchSettings","renderArrowButtons","renderResults","ExerciseSearch","InternalSearch","App","loadDefaultData","path","component","exact","dispatch","all","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"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","file":"static/js/main.03f0061d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\nimport Axios from \"axios\";\r\n\r\n/**Current Reducer actions */\r\n//Setze ID von aktuellen Workout (in currentReducer)\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Setzt den Index der gerade durchgeführten Übung im gerade durchgeführten Workout\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeAlreadyPassed => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeAlreadyPassed\r\n  };\r\n};\r\n\r\n//Setzte die Pause in Sekunden; time = null -> Keine Pause\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\n/**userData reducer actions */\r\n\r\n/**Muscle */\r\n//Erstelle eine neue Muskulatur mit Namen <muscleName>\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\n//Lösche eine Muskulatur mit ID <id>\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n/**Equipment */\r\n//Erstelle eine neues Equipment mit Namen <equipmentName>\r\nexport const createEquipment = equipmentName => {\r\n  return { type: \"CREATE_EQUIPMENT\", payload: equipmentName };\r\n};\r\n\r\n//Lösche ein Equipment mit ID <id>\r\nexport const deleteEquipment = id => {\r\n  return { type: \"DELETE_EQUIPMENT\", payload: id };\r\n};\r\n/**Workout */\r\n//Füge ein Workout mit dem Namen <workoutName> hinzu\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\n//Entferne ein Workout mit der ID <workoutId>\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Füge eine Übung zu einem Workout hinzu (Nur Übungs-ID wird gespeichert)\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\n//Entferne eine Übung an der Stelle <position> im Workout mit der ID <workoutId> aus diesem Workout\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\n//Setze einzelne Felder in einem Workout (z. B. workout={exercises:[1,2,3]})\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\n/**Exercise */\r\n//Füge eine Übung mit dem Namen <exerciseName> zur userdata hinzu\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\n//Entferne eine Übung mit ID <exerciseId> aus der userdata\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise(exakt)\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n/** History */\r\n//Füge den Titel eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = title => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: title };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Körpergewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n/**Bearbeitung aller Daten */\r\n//Setze den Standardwert von <key> auf <value>\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\n//Lösche alle in <fieldsToDelete> angegebenen Felder\r\n//z. B. {exercises:true, muscles:true} löscht Übungen und Muskelgruppen\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\n//Setze userData auf data (überschreibt andere Daten)\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\n//Füge data zu userData hinzu (wird angehängt)\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\nexport const setSearchSettings = searchSettings => {\r\n  return { type: \"SET_SEARCH_SETTINGS\", payload: searchSettings };\r\n};\r\n\r\nexport const setSearchPage = page => {\r\n  return { type: \"SET_SEARCH_PAGE\", payload: page };\r\n};\r\n\r\n/** Load defaults */\r\n\r\n//Lade Standarddaten aus json-Dateien und von wger.de\r\nexport const loadDefaultData = () => async dispatch => {\r\n  let workouts, exercises, muscles;\r\n  try {\r\n    [workouts, exercises, muscles] = await Axios.all([\r\n      Axios.get(\"/defaultData/workouts.json\"),\r\n      Axios.get(\"/defaultData/exercises.json\"),\r\n      Axios.get(\"/defaultData/muscles.json\")\r\n    ]);\r\n  } catch {\r\n    [workouts, exercises, muscles] = await Axios.all([\r\n      Axios.get(\"/be-fit/defaultData/workouts.json\"),\r\n      Axios.get(\"/be-fit/defaultData/exercises.json\"),\r\n      Axios.get(\"/be-fit/defaultData/muscles.json\")\r\n    ]);\r\n  }\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_JSON\",\r\n    payload: {\r\n      workouts: workouts.data,\r\n      exercises: exercises.data,\r\n      muscles: muscles.data\r\n    }\r\n  });\r\n  const [language, muscle, equipment] = await Axios.all([\r\n    wger.get(\"/language.json\"),\r\n    wger.get(\"/muscle.json\"),\r\n    wger.get(\"/equipment.json\")\r\n  ]);\r\n\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_WGER\",\r\n    payload: {\r\n      language: language.data.results,\r\n      muscle: muscle.data.results,\r\n      equipment: equipment.data.results\r\n    }\r\n  });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    //;\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch (err) {}\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0, //in seconds\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: [],\r\n    exercises: [],\r\n    muscles: [],\r\n    equipment: [],\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles, equipment;\r\n  switch (action.type) {\r\n    /**Muscle */\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    /**Equipment */\r\n    case \"CREATE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: [\r\n          ...userData.equipment,\r\n          { id: getId(userData.equipment), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: userData.muscles.filter(\r\n          equipment => equipment.id !== action.payload\r\n        )\r\n      };\r\n    /**Workout */\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, { id: action.payload.exerciseId }]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          workout,\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId)\r\n        ]\r\n      };\r\n    /**Exercise */\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          {\r\n            id,\r\n            name: action.payload || \"Unnamed exercise \" + id,\r\n            duration: userData.defaultValues.exerciseDuration\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise.id !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          { ...action.payload.exercise, id: action.payload.id },\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id)\r\n        ]\r\n      };\r\n    /** History */\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    /**Bearbeitung aller Daten */\r\n    case \"SET_DEFAULT_VALUE\":\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles || action.payload.equipment) {\r\n        if (action.payload.muscles) {\r\n          //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n          //Behalte dabei die \"Standardmuskeln\" aus der Wger Datenbank\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              muscles: exercise.muscles.filter(muscle => muscle <= 15)\r\n            };\r\n          });\r\n        }\r\n        if (action.payload.equipment) {\r\n          //Gleiches für Equipment\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              equipment: exercise.muscles.filter(equipment => equipment <= 10)\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      //Behalte immer die \"Standardmuskeln\" aus der Wger Datenbank\r\n      muscles = action.payload.muscles\r\n        ? userData.muscles.filter(muscle => muscle.id <= 15)\r\n        : userData.muscles;\r\n      //Behalte immer das \"Standardequipment\" aus der Wger Datenbank\r\n      equipment = action.payload.equipment\r\n        ? userData.equipment.filter(equipment => equipment.id <= 10)\r\n        : userData.equipment;\r\n      //History des Trainings; muss einzeln geleert werden\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        equipment,\r\n        defaultValues\r\n      };\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history, muscles, equipment } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles.filter(m => m.id <= 15)],\r\n        equipment: [\r\n          ...userData.equipment,\r\n          ...equipment.filter(e => e.id <= 10)\r\n        ],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_JSON\":\r\n      return {\r\n        ...userData,\r\n        workouts: action.payload.workouts,\r\n        exercises: action.payload.exercises,\r\n        muscles: action.payload.muscles\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...action.payload.muscle],\r\n        equipment: [...userData.equipment, ...action.payload.equipment]\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    case \"SET_SEARCH_SETTINGS\":\r\n      //Set settings, reset page\r\n      return { ...current, searchSettings: { ...action.payload, page: 1 } };\r\n    case \"SET_SEARCH_PAGE\":\r\n      return {\r\n        //Copy settings, set page\r\n        ...current,\r\n        searchSettings: { ...current.searchSettings, page: action.payload }\r\n      };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: null,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined,\r\n  searchSettings: { status: 2, page: 1 }\r\n};\r\n","export default (\r\n  data = {\r\n    languages: [],\r\n    muscles: [],\r\n    equipment: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...data,\r\n        languages: action.payload.language,\r\n        equipment: action.payload.equipment,\r\n        muscles: action.payload.muscle\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  //Daten, die für die Wger-Suche (zum Importieren von Übungen) verwendet werden\r\n  wger: wgerReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport throttle from \"lodash.throttle\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport function announceExercise(index, workout, exerciseList, speech) {\r\n  let exercise = findById(exerciseList, workout.exercises[index].id);\r\n  speech.speak({\r\n    text:\r\n      (workout.exercises[index].duration || exercise.duration) +\r\n      \" seconds \" +\r\n      exercise.name,\r\n    queue: false\r\n  });\r\n}\r\n//Gibt gemischtes Array <array> zurück\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\n//Finde erstes Objekt aus <array> mit id <id>\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Teste, ob <date1> und <date2> am gleichen Tag liegen\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\n//Teste, ob <date> heute ist\r\nexport function isToday(date) {\r\n  return isSameDay(date, new Date());\r\n}\r\n\r\n//Gebe ein Array zurück, in dem es keine doppelten Werte gibt\r\nexport function unique(array) {\r\n  return [...new Set(array)];\r\n}\r\n\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in echte Date-Objekte verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time) || !isFinite(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      //oder Workout-history gelöscht wurde\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    //Zeige Verlust oder, falls kein Verlust, null\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    //Statistik zur Anzeige und zum bearbeiten des Körpergewichts\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.5).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.5).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","/**\r\n * Workout wurde beendet; Zeige Statistiken und verschiedene Links an\r\n */\r\nimport React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../Overview/WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({\r\n            text: \"\" + time,\r\n            queue: false\r\n          });\r\n        }\r\n      }\r\n      //Eine Sekunde ist vergangen\r\n      this.props.addTime(1 / 60);\r\n      this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.props.exercise.description\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime, setPause } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0, pauseEnded: false, running: true };\r\n  async componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload);\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload);\r\n    this.props.setPause(this.state.time);\r\n  }\r\n  beforeunload = () => {\r\n    //Soll während reload nicht weiterlaufen\r\n    this.setState({ running: false });\r\n    this.props.setPause(this.state.lastTime);\r\n  };\r\n  renderTime = time => {\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.props.addTime(1 / 60);\r\n\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.setPause(null);\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            startAt={0}\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.state.running ? this.props.isRunning : false}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1\r\n                onClick={() => {\r\n                  this.setState({ pauseEnded: true });\r\n                  this.props.endPause();\r\n                }}\r\n              >\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  state => {\r\n    return { pause: state.current.pause };\r\n  },\r\n  { addTime, setPause }\r\n)(PauseScreen);\r\n","/**\r\n * Zeige entweder die aktuelle Übung (Exercise) oder die Pausenanzeige (PauseScreen) an\r\n */\r\nimport React from \"react\";\r\nimport Exercise from \"./Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.exercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui centered grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"stop icon\" onClick={props.stopWorkout}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <div className=\"loading-bar\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui text loader\">{props.message || \"Loading...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { findById, announceExercise } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\nimport Loader from \"../Loader\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isRunning: true,\r\n      pause: false\r\n    };\r\n  }\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n\r\n      this.speak(\r\n        this.props.exercise.duration -\r\n          (this.props.workoutStoppedAt || 0) +\r\n          \" seconds \" +\r\n          this.props.exercise.name\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n      if (\r\n        this.props.workoutExercises &&\r\n        this.props.exercise &&\r\n        !this.state.ready &&\r\n        !this.props.pause\r\n      ) {\r\n        this.speak(\r\n          this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text, queue: false });\r\n    }\r\n  }\r\n\r\n  finishWorkout() {\r\n    //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n    //fertig machen für nächstes Training(Index auf 0)\r\n    this.props.pushWorkoutHistory(this.props.currentWorkout.title);\r\n    this.props.setIndex(0);\r\n    this.setState({ ready: true });\r\n    this.speak(\"Well done. workout completed!\");\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    if (this.props.pause != null) {\r\n      this.props.setPause(null);\r\n      announceExercise(\r\n        this.props.indexInWorkout,\r\n        this.props.currentWorkout,\r\n        this.props.exerciseList,\r\n        this.state.speech\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        this.finishWorkout();\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //Starte Pause, sage nächste Übung an\r\n          if (this.props.pauseTime) {\r\n            const nextExerciseIndex = this.props.currentWorkout.exercises[\r\n              this.props.indexInWorkout + 1\r\n            ].id;\r\n            const nextExercise = findById(\r\n              this.props.exerciseList,\r\n              nextExerciseIndex\r\n            );\r\n            this.speak(\r\n              this.props.pauseTime +\r\n                \" seconds pause. prepare for \" +\r\n                nextExercise.name\r\n            );\r\n          } else {\r\n            //Pause wurde nicht angegeben oder ist 0, nächste Übung startet dann sofort\r\n            announceExercise(\r\n              this.props.indexInWorkout + 1,\r\n              this.props.currentWorkout,\r\n              this.props.exerciseList,\r\n              this.state.speech\r\n            );\r\n          }\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({ isRunning: true });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <div>\r\n          <FinishScreen\r\n            goToHome={() => this.props.history.push(\"/be-fit/\")}\r\n            goToOverview={() => this.props.history.push(\"/be-fit/overview\")}\r\n            restart={() => {\r\n              this.setState({ ready: false });\r\n              this.props.setIndex(0);\r\n              announceExercise(\r\n                0,\r\n                this.props.currentWorkout,\r\n                this.props.exerciseList,\r\n                this.state.speech\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu (WorkoutCreator)\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <Loader />;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          stopWorkout={this.finishWorkout.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n\r\n  const currentIndex = state.current.index;\r\n  //Erhalte aktuelle Übung, ggf. mit anderer Zeit\r\n  const currentExercise = currentWorkout\r\n    ? findById(\r\n        state.userData.exercises,\r\n        currentWorkout.exercises[currentIndex].id\r\n      )\r\n    : null;\r\n  let exercise = { ...currentExercise };\r\n\r\n  if (currentWorkout.exercises[currentIndex].duration) {\r\n    //Eigene Zeit wurde angegeben\r\n    exercise.duration = parseInt(\r\n      currentWorkout.exercises[currentIndex].duration\r\n    );\r\n  }\r\n  let nextExercise;\r\n  if (currentWorkout.exercises.length > currentIndex + 1) {\r\n    nextExercise = currentWorkout\r\n      ? {\r\n          ...findById(\r\n            state.userData.exercises,\r\n            currentWorkout.exercises[currentIndex + 1].id\r\n          )\r\n        }\r\n      : null;\r\n    if (currentWorkout.exercises[currentIndex + 1].duration) {\r\n      //Eigene Zeit wurde angegeben\r\n      nextExercise.duration = parseInt(\r\n        currentWorkout.exercises[currentIndex + 1].duration\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    exercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime,\r\n    exerciseList: state.userData.exercises,\r\n    nextExercise,\r\n    workoutStoppedAt: state.current.workoutStoppedAt\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","/**\r\n * Oberes Menu\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <span className=\"logo\" />\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <div className=\"scrollable-menu\">\r\n                {[\r\n                  <Dropdown.Item\r\n                    key={-2}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/be-fit/exercise/search\")\r\n                    }\r\n                  >\r\n                    <i className=\"search icon\"></i>Search\r\n                  </Dropdown.Item>,\r\n                  <Dropdown.Item\r\n                    key={-1}\r\n                    onClick={() => {\r\n                      const idForNewExercise = getId(this.props.exercises);\r\n                      this.props.addExercise(\"\");\r\n                      this.props.history.push(\r\n                        \"/be-fit/exercise/\" + idForNewExercise\r\n                      );\r\n                    }}\r\n                  >\r\n                    <i className=\"plus icon\"></i>Add exercise\r\n                  </Dropdown.Item>,\r\n                  <div className=\"ui divider\" key={-3} />,\r\n                  this.props.exercises.map(exercise => (\r\n                    <Dropdown.Item\r\n                      key={exercise.id}\r\n                      active={activeItem === \"/be-fit/exercise/\" + exercise.id}\r\n                      onClick={() =>\r\n                        this.props.history.push(\r\n                          \"/be-fit/exercise/\" + exercise.id\r\n                        )\r\n                      }\r\n                    >\r\n                      {exercise.name}\r\n                    </Dropdown.Item>\r\n                  ))\r\n                ]}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit/wger\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <div className=\"scrollable-menu\">\r\n                {[\r\n                  this.props.workouts.map(workout => (\r\n                    <Dropdown.Item\r\n                      key={workout.id}\r\n                      active={activeItem === \"/be-fit/workout/\" + workout.id}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/be-fit/workout/\" + workout.id)\r\n                      }\r\n                    >\r\n                      {workout.title}\r\n                    </Dropdown.Item>\r\n                  )),\r\n                  <Dropdown.Item\r\n                    key={-1}\r\n                    onClick={() => {\r\n                      this.props.setWorkout(null);\r\n                      this.props.history.push(\"/be-fit/workout/-1\");\r\n                    }}\r\n                  >\r\n                    <i className=\"plus icon\"></i>Add workout\r\n                  </Dropdown.Item>\r\n                ]}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#body-weight\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#body-weight\")\r\n                }\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#statistics\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#statistics\")\r\n                }\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit/settings\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay, unique, isToday } from \"../../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n    this.setState({ index: this.uniqueDaysWithTraining.length - 1 });\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={this.state.index || 0}\r\n          values={this.getValues()}\r\n          indexClick={index => {\r\n            this.setState({ index });\r\n          }}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    const lastTrainings = this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n    if (isToday(lastTrainings[lastTrainings.length - 1])) {\r\n      return lastTrainings;\r\n    } else {\r\n      //Zeige immer heutiges Datum an\r\n      return [...lastTrainings, new Date()];\r\n    }\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      //Zeige ausgewählten oder heutigen Tag an\r\n      let index = this.state.index;\r\n      if (index == null) {\r\n        index = this.uniqueDaysWithTraining.length - 1;\r\n      }\r\n\r\n      //Finde Traings-Titel an diesem Tag\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      //Reduziere diese auf einzigartige Trainings\r\n      filteredTrainings = unique(trainingsOnSelectedDay);\r\n      //Zähle, wie oft diese vorkommen\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addWeight } from \"../../actions\";\r\n\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"../Popup\";\r\n\r\nclass Overview extends Component {\r\n  state = { weightValue: 0, lastAnchorTag: null };\r\n  componentDidMount() {\r\n    this.setState({ weightValue: this.props.lastWeight });\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    //Bewege Website zur jeweils in URL als #anchor am Ende angegebenen Stelle\r\n    const selected = this.props.history.location.hash;\r\n    if (selected !== this.state.lastAnchorTag) {\r\n      this.setState({ lastAnchorTag: selected });\r\n      if (selected && selected.length > 0) {\r\n        const elem = document.querySelector(selected);\r\n        elem && elem.scrollIntoView();\r\n      }\r\n    }\r\n  }\r\n  getWeightHistory() {\r\n    //Formatiere Aufzeichnungen des Körpergewichts\r\n    return this.props.weightHistory.map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        //Zeige zusätzlich das Jahr an.\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline\r\n            latestTrainings={this.props.lastWorkouts.map(training => {\r\n              return training.date;\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory()\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button className=\"circular ui icon button\">\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    min={0}\r\n                    value={this.state.weightValue}\r\n                    onChange={evt => {\r\n                      if (evt.target.value >= 0) {\r\n                        this.setState({ weightValue: evt.target.value });\r\n                      }\r\n                    }}\r\n                    onKeyDown={evt => {\r\n                      if (evt.keyCode === 13) {\r\n                        this.props.addWeight(this.state.weightValue);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => this.props.addWeight(this.state.weightValue)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { findById } from \"../helpers\";\r\nimport WorkoutStatistics from \"./Overview/WorkoutStatistics\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return <Redirect to=\"/be-fit/workout/-1\" />;\r\n    }\r\n    return (\r\n      <div className=\"ui center aligned basic vertical segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/be-fit/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div className=\"ui buttons\">\r\n          <button\r\n            className=\"ui button\"\r\n            onClick={() => {\r\n              this.props.history.push(\r\n                \"/be-fit/workout/\" + this.props.currentWorkout.id\r\n              );\r\n            }}\r\n          >\r\n            <i className=\"redo icon\" />\r\n            Restart\r\n          </button>\r\n          <div className=\"or\"></div>\r\n          <button\r\n            className=\"ui positive button\"\r\n            onClick={() => this.props.history.push(\"/be-fit/workout\")}\r\n          >\r\n            <i className=\"play icon\" />\r\n            Continue\r\n          </button>\r\n          Hello World\r\n        </div>\r\n        {this.props.currentWorkout.title}\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"ten wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i className=\"fas fa-play\"></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state,\r\n    exercise: state.userData.exercises[0]\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else if (selected) {\r\n                this.props.onChange(selected.value);\r\n              } else {\r\n                //Wert wurde mit Klick auf X gelöscht\r\n                this.props.onChange(null);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown as SemanticDropdown } from \"semantic-ui-react\";\r\n\r\nconst Dropdown = props => {\r\n  return (\r\n    <SemanticDropdown text={props.header}>\r\n      <SemanticDropdown.Menu>\r\n        {props.items.map(item => (\r\n          <SemanticDropdown.Item key={item.id}>\r\n            {item.name}\r\n          </SemanticDropdown.Item>\r\n        ))}\r\n      </SemanticDropdown.Menu>\r\n    </SemanticDropdown>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt,\r\n  setIndex\r\n} from \"../../actions\";\r\nimport { getId, unique, findById } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\nimport Loader from \"../Loader\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    if (this.props.workout == null) {\r\n      this.props.history.push(\"/be-fit/workout/-1\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (this.props.workout == null && this.props.match.params.id !== \"-1\") {\r\n      this.props.history.push(\"/be-fit/workout/-1\");\r\n    }\r\n  }\r\n\r\n  editExerciseDurationInWorkout(indexInWorkout, duration) {\r\n    let editedExercises = this.props.workout.exercises.map((ex, index) => {\r\n      if (index !== indexInWorkout) {\r\n        return ex;\r\n      } else {\r\n        return { id: ex.id, duration };\r\n      }\r\n    });\r\n    this.props.editWorkout(this.props.workout.id, {\r\n      exercises: editedExercises\r\n    });\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={newIdOrder => {\r\n            const newOrder = newIdOrder.map(id =>\r\n              this.props.workout.exercises.find(ex => ex.id === id)\r\n            );\r\n            this.props.editWorkout(this.props.workout.id, {\r\n              exercises: newOrder\r\n            });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.props.workout.exercises\r\n            .map((ex, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = findById(this.props.usersExercises, ex.id);\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"eight wide column\">{exercise.name}</div>\r\n                        <div className=\"four wide column\">\r\n                          <div className=\"ui right labeled mini input\">\r\n                            <input\r\n                              type=\"number\"\r\n                              min={0}\r\n                              value={\r\n                                ex.duration == null\r\n                                  ? exercise.duration\r\n                                  : ex.duration\r\n                              }\r\n                              onChange={evt => {\r\n                                if (evt.target.value >= 0) {\r\n                                  this.editExerciseDurationInWorkout(\r\n                                    index,\r\n                                    parseInt(evt.target.value)\r\n                                  );\r\n                                }\r\n                              }}\r\n                            ></input>\r\n                            <div className=\"ui basic label\">seconds</div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.props.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: ex.id\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderExerciseSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderExerciseSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        if (\r\n                          window.confirm(\r\n                            \"Are your sure that you want to permanently delete this exercise?\"\r\n                          )\r\n                        ) {\r\n                          this.props.removeExercise(exercise.id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            this.props.addExerciseToWorkout(selected, this.props.workout.id);\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.props.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/be-fit/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  renderWorkoutSelector() {\r\n    const selectedWorkout = this.props.workout || {\r\n      title: \"SELECT WORKOUT OR TYPE TO ADD ONE\"\r\n    };\r\n    return (\r\n      <Selector\r\n        options={this.props.usersWorkouts.map(workout => {\r\n          return {\r\n            value: workout.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{workout.title}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      if (\r\n                        window.confirm(\r\n                          \"Are your sure that you want to permanently delete this workout?\"\r\n                        )\r\n                      ) {\r\n                        this.props.removeWorkout(workout.id);\r\n                      }\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n        onChange={selected => {\r\n          if (!this.state.preventSelect) {\r\n            this.props.history.push(\"/be-fit/workout/\" + selected);\r\n          }\r\n        }}\r\n        value={{\r\n          value: selectedWorkout.title,\r\n          label: selectedWorkout.title\r\n        }}\r\n        onCreate={created => {\r\n          this.props.addWorkout(created);\r\n          this.props.history.push(\r\n            \"/workout/\" + getId(this.props.usersWorkouts)\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  neededEquipment(type, header) {\r\n    //Zeige belastete Muskulatur oder benötigtes Equipment an\r\n    //Type: \"equipment\" or muscles\r\n    const list = {\r\n      equipment: this.props.usersEquipment,\r\n      muscles: this.props.usersMuscles\r\n    };\r\n    const ids = this.props.workout.exercises.map(ex => {\r\n      const exercise = findById(this.props.usersExercises, ex.id);\r\n\r\n      return exercise[type];\r\n    });\r\n\r\n    const uniqueIds = unique([].concat.apply([], ids));\r\n    if (uniqueIds.length === 0) {\r\n      return <div>No {header.toLowerCase()}</div>;\r\n    }\r\n    return (\r\n      <Dropdown\r\n        header={header}\r\n        items={uniqueIds.map(id => findById(list[type], id))}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (this.props.match.params.id === \"-1\") {\r\n      return this.renderWorkoutSelector();\r\n    }\r\n    if (!this.props.workout) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.props.workout.title}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            {this.renderWorkoutSelector()}\r\n          </div>\r\n          {this.props.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.props.workout.id !== -1 ? (\r\n            <div className=\"workout-information\">\r\n              <div className=\"ui grid\">\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"equipment\", \"Needed Equipment\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"muscles\", \"Strained muscles\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                  <div className=\"ui right labeled input\">\r\n                    <div className=\"ui label\">Pause time:</div>\r\n                    <input\r\n                      type=\"number\"\r\n                      min={0}\r\n                      value={this.props.workout.pauseTime || \"\"}\r\n                      onChange={evt => {\r\n                        if (evt.target.value >= 0) {\r\n                          this.setState({\r\n                            workout: {\r\n                              ...this.props.workout,\r\n                              pauseTime: evt.target.value\r\n                            }\r\n                          });\r\n                          this.props.editWorkout(this.props.workout.id, {\r\n                            ...this.props.workout,\r\n                            pauseTime: evt.target.value\r\n                          });\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div className=\"ui basic label\">sec</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            {this.props.workout.id !== -1 ? (\r\n              <div>\r\n                <button\r\n                  className={\r\n                    \"ui submit button\" +\r\n                    (this.props.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n                  }\r\n                  onClick={() => {\r\n                    this.props.setIndex(0);\r\n                    this.props.setWorkout(this.props.workout.id);\r\n                    this.props.history.push(\"/be-fit/workout\");\r\n                  }}\r\n                >\r\n                  Start\r\n                </button>\r\n                <button\r\n                  className=\"ui red button\"\r\n                  onClick={evt => {\r\n                    evt.preventDefault();\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are your sure that you want to delete permanently delete this workout?\"\r\n                      )\r\n                    ) {\r\n                      this.props.removeWorkout(this.props.workout.id);\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = parseInt(ownProps.match.params.id);\r\n  const workout = findById(state.userData.workouts, id);\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    usersEquipment: state.userData.equipment,\r\n    usersMuscles: state.userData.muscles,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime,\r\n    workout\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt,\r\n  setIndex\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport Loader from \"../../Loader\";\r\n\r\nclass ImageWrapper extends Component {\r\n  baseURL =\r\n    \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9\";\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe\r\n    // eingegeben wird, cancele die alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(this.baseURL + \"&query=\" + keyword, {\r\n        cancelToken: new axios.CancelToken(c => {\r\n          this.cancel = c;\r\n        })\r\n      });\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <Loader message={\"Getting results for \" + unsplashKeyword} />;\r\n      } else if (unsplashImages.length === 0) {\r\n        return (\r\n          <div className=\"ui negative message\">\r\n            <div className=\"header\">\r\n              No results found for {unsplashKeyword}!\r\n            </div>\r\n            Please try another searchterm.\r\n          </div>\r\n        );\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onFocus={() =>\r\n                      this.setState({ imageUrlFieldFocused: true })\r\n                    }\r\n                    onBlur={() =>\r\n                      this.setState({ imageUrlFieldFocused: false })\r\n                    }\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  />\r\n                  {this.state.imageUrlFieldFocused ? (\r\n                    <div className=\"ui pointing label\">\r\n                      Press enter to set image\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","import React from \"react\";\r\nimport { getId } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nconst ExerciseFormSelector = props => {\r\n  //props.type either \"muscles\" or \"equipment\"\r\n  const create = {\r\n    muscles: props.createMuscle,\r\n    equipment: props.createEquipment\r\n  };\r\n  const remove = {\r\n    muscles: props.deleteMuscle,\r\n    equipment: props.deleteEquipment\r\n  };\r\n  return (\r\n    <div className=\"field\">\r\n      <label>{props.type}:</label>\r\n      <Selector\r\n        isMulti\r\n        onCreate={name => {\r\n          const newId = getId(props[props.type]);\r\n          create[props.type](name);\r\n          props.handleChange({\r\n            target: {\r\n              value: [\r\n                ...props.values[props.type],\r\n                { value: newId, label: name }\r\n              ],\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        onChange={evt => {\r\n          props.handleChange({\r\n            target: {\r\n              value: evt,\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        value={(props.values[props.type] || []).map(elem => {\r\n          let data = props[props.type].find(e => e.id === elem.value);\r\n          //Falls Muskulatur oder Equipment noch nicht geladen hat, setze jeweilige Namen auf leeren String\r\n          let label = \"\";\r\n          if (data) {\r\n            label = data.name;\r\n          }\r\n\r\n          return {\r\n            value: elem.value,\r\n            label: label\r\n          };\r\n        })}\r\n        options={(props[props.type] || []).map(elem => {\r\n          return {\r\n            value: elem.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{elem.name}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      remove[props.type](elem.id);\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseFormSelector;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"./ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n} from \"../../actions\";\r\nimport { Prompt } from \"react-router\";\r\nimport ExerciseFormSelector from \"./ExerciseFormSelector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const {\r\n      name,\r\n      duration,\r\n      description,\r\n      image,\r\n      muscles,\r\n      equipment\r\n    } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration || null,\r\n            description: description || \"\",\r\n            muscles: (muscles || []).map(muscleId => {\r\n              const name = this.props.muscles.find(\r\n                muscle => muscle.id === muscleId\r\n              );\r\n\r\n              return { value: muscleId, label: name };\r\n            }),\r\n            equipment: (equipment || []).map(equipmentId => {\r\n              const name = this.props.equipment.find(\r\n                equipment => equipment.id === equipmentId\r\n              );\r\n\r\n              return { value: equipmentId, label: name };\r\n            }),\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const {\r\n              name,\r\n              duration,\r\n              description,\r\n              image,\r\n              muscles,\r\n              equipment\r\n            } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles: (muscles || []).map(m => m.value),\r\n                equipment: (equipment || []).map(e => e.value),\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    autoFocus={values.name === \"\"}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    autoFocus={values.name !== \"\" && values.duration <= 5}\r\n                    type=\"number\"\r\n                    min={0}\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"muscles\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"equipment\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={evt => {\r\n                    evt.preventDefault();\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Abbort\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are your sure that you want to permanently delete this exercise?\"\r\n                      )\r\n                    ) {\r\n                      this.setState({ formChanged: false });\r\n                      this.props.removeExercise(this.props.exercise.id);\r\n                      this.props.back();\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles,\r\n    equipment: state.userData.equipment\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { getId } from \"../../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (this.props.match.params.id === \"search\") {\r\n      ///exercise/search\r\n      return null;\r\n    }\r\n    if (!this.state.exercise && !isNaN(this.props.match.params.id)) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\r\n                      \"/be-fit/exercise/\" + idForNewExercise\r\n                    );\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nfunction DefaultSettings(props) {\r\n  const setDefaultValue = evt => {\r\n    props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  return (\r\n    <div className=\"section\">\r\n      <h1>Defaults</h1>\r\n      <form className=\"ui form\">\r\n        <div className=\"two fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration:</label>\r\n            <div className=\"ui input\">\r\n              <input\r\n                name=\"exerciseDuration\"\r\n                min={0}\r\n                type=\"number\"\r\n                value={props.defaultValues.exerciseDuration}\r\n                onChange={evt => {\r\n                  if (evt.target.value >= 0) {\r\n                    setDefaultValue(evt);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <div className=\"ui input\">\r\n              <input\r\n                name=\"pauseTime\"\r\n                type=\"number\"\r\n                min={0}\r\n                value={props.defaultValues.pauseTime}\r\n                onChange={evt => {\r\n                  if (evt.target.value >= 0) {\r\n                    setDefaultValue(evt);\r\n                  }\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DefaultSettings;\r\n","import React from \"react\";\r\n\r\nfunction DataDownloader(props) {\r\n  const url =\r\n    \"text/json;charset=utf-8,\" +\r\n    encodeURIComponent(JSON.stringify(props.userData));\r\n  return (\r\n    <div className=\"subsection\">\r\n      <h2>Download all your fitness-data as JSON:</h2>\r\n      <a\r\n        className=\"ui button\"\r\n        href={\"data:'\" + url}\r\n        download=\"fitness-data.json\"\r\n        title=\"Download all of your user-data\"\r\n      >\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataDownloader;\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"ui toggle checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={\r\n            props.historyField\r\n              ? props.values.history[props.label.toLowerCase()]\r\n              : props.values[props.label.toLowerCase()]\r\n          }\r\n          onChange={evt => {\r\n            if (props.historyField) {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  history: {\r\n                    ...props.values.history,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  [props.label.toLowerCase()]: evt.target.checked\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\nimport { deleteAll } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DataDeletor extends Component {\r\n  state = {\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      equipment: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"subsection\">\r\n        <h2>Delete data:</h2>\r\n        <form className=\"ui form\">\r\n          <div className=\"grouped fields\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Equipment\"}\r\n              values={this.state.delete}\r\n            />\r\n          </div>\r\n          <div className=\"framed\">\r\n            <div className=\"grouped fields\">\r\n              <div className=\"ui toggle checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={\r\n                    this.state.delete.history.workouts &&\r\n                    this.state.delete.history.weight &&\r\n                    this.state.delete.history[\"training time\"]\r\n                  }\r\n                  onChange={evt =>\r\n                    this.setState({\r\n                      delete: {\r\n                        ...this.state.delete,\r\n                        history: {\r\n                          workouts: evt.target.checked,\r\n                          weight: evt.target.checked,\r\n                          \"training time\": evt.target.checked\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                ></input>\r\n                <label>History:</label>\r\n              </div>\r\n              <div className=\"grouped field\">\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Weight\"}\r\n                  values={this.state.delete}\r\n                />\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Workouts\"}\r\n                  values={this.state.delete}\r\n                />\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Training Time\"}\r\n                  values={this.state.delete}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          className=\"ui red button\"\r\n          onClick={this.deleteAll.bind(this)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { deleteAll })(DataDeletor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserData, setDefaultValue, addUserData } from \"../../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../../helpers\";\r\nimport DefaultSettings from \"./DefaultSettings\";\r\nimport DataDownloader from \"./DataDownloader\";\r\nimport DataDeletor from \"./DataDeletor\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false\r\n  };\r\n  resetAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\r\n        \"Are your sure that you want to reset this app? All data will be lost!\"\r\n      )\r\n    ) {\r\n      //Back to home screen\r\n      this.props.history.push(\"/be-fit\");\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.state.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DefaultSettings\r\n          defaultValues={this.props.defaultValues}\r\n          setDefaultValue={this.props.setDefaultValue}\r\n        />\r\n        <div className=\"section\">\r\n          <h1>Data</h1>\r\n          <DataDownloader userData={this.props.userData} />\r\n          <div className=\"subsection\">\r\n            <h2>Load saved data from JSON:</h2>\r\n            <form className=\"ui form\">\r\n              <FileUpload\r\n                recievedFile={this.setUserData.bind(this)}\r\n                description=\"Drag or click here to upload JSON file and load it's content!\"\r\n              />\r\n              <div>{this.state.fileLoadingError}</div>\r\n              <div className=\"field\">\r\n                <div className=\"ui checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={this.state.overwriteChecked}\r\n                    onChange={() =>\r\n                      this.setState({\r\n                        overwriteChecked: !this.state.overwriteChecked\r\n                      })\r\n                    }\r\n                  ></input>\r\n                  <label>Overwrite old data</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"red-section\">\r\n            <DataDeletor />\r\n            <div className=\"subsection reset\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"ui big red button\"\r\n                onClick={this.resetAll.bind(this)}\r\n              >\r\n                Full Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      {props.showLanguages ? (\r\n        <div className=\"field\">\r\n          <label>Language</label>\r\n          <Select\r\n            isClearable\r\n            options={props.languages.map(lang => {\r\n              return {\r\n                label: (\r\n                  <div style={{ color: \"black\" }}>\r\n                    <i className={lang.short_name + \" flag\"}></i>\r\n                    {lang.full_name}\r\n                  </div>\r\n                ),\r\n                value: lang.id\r\n              };\r\n            })}\r\n            onChange={evt => {\r\n              if (evt === null) {\r\n                //Sprachauswahl gelöscht\r\n                props.deleteKey(\"language\");\r\n              } else {\r\n                props.setSearchSettings(\"language\", evt.value);\r\n              }\r\n            }}\r\n            defaultValue={{\r\n              label: (\r\n                props.languages.find(\r\n                  lang => lang.id === props.selected.language\r\n                ) || {}\r\n              ).full_name,\r\n              value: props.selected.language\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{muscle.name}</div>,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n          defaultValue={{\r\n            label: (\r\n              props.muscles.find(mus => mus.id === props.selected.muscles) || {}\r\n            ).name,\r\n            value: props.selected.muscles\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{equipment.name}</div>,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n          defaultValue={{\r\n            label: (\r\n              props.equipment.find(eq => eq.id === props.selected.equipment) ||\r\n              {}\r\n            ).name,\r\n            value: props.selected.equipment\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword{props.wgerSearch ? <span> (exact)</span> : null}:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={evt => props.setSearchSettings(\"name\", evt.target.value)}\r\n          defaultValue={props.selected.name}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  editExercise,\r\n  addExercise,\r\n  setSearchSettings,\r\n  setSearchPage\r\n} from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport SearchSettings from \"./SearchSettings\";\r\nimport Axios from \"axios\";\r\nimport Loader from \"../Loader\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    const { searchSettings } = this.props;\r\n\r\n    if (this.props.wgerSearch) {\r\n      if (!url) {\r\n        url =\r\n          \"https://wger.de/api/v2/exercise.json?\" +\r\n          Object.keys(searchSettings)\r\n            .map(key => key + \"=\" + searchSettings[key])\r\n            .join(\"&\");\r\n      }\r\n\r\n      const result = await Axios.get(url);\r\n      this.setState({\r\n        exercises: result.data.results,\r\n        next: result.data.next,\r\n        prev: result.data.previous\r\n      });\r\n    } else {\r\n      this.setState({\r\n        exercises: this.props.exercises.filter(exercise => {\r\n          const isRightEquipment =\r\n            searchSettings.equipment == null ||\r\n            exercise.equipment.includes(searchSettings.equipment);\r\n          const isRightMuscles =\r\n            searchSettings.muscles == null ||\r\n            exercise.muscles.includes(searchSettings.muscles);\r\n          const keywordMatches =\r\n            searchSettings.name == null ||\r\n            exercise.name.includes(searchSettings.name);\r\n          return isRightEquipment && isRightMuscles && keywordMatches;\r\n        })\r\n      });\r\n    }\r\n  }\r\n  renderArrowButtons() {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"right aligned column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() => {\r\n                if (this.state.prev) {\r\n                  this.searchData(this.state.prev);\r\n                  this.props.setSearchPage(this.props.searchSettings.page - 1);\r\n                }\r\n              }}\r\n            >\r\n              Previous page\r\n              <i className=\"arrow left icon\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() => {\r\n                if (this.state.next) {\r\n                  this.searchData(this.state.next);\r\n                  this.props.setSearchPage(this.props.searchSettings.page + 1);\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"arrow right icon\"></i>\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  editIcon = exercise => {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <i\r\n          className=\"plus icon\"\r\n          onClick={() => {\r\n            const idForNewExercise = getId(this.props.exercises);\r\n            this.props.addExercise(\"\");\r\n            this.props.editExercise(\r\n              {\r\n                name: exercise.name,\r\n                description: exercise.description,\r\n                muscles: exercise.muscles,\r\n                equipment: exercise.equipment\r\n              },\r\n              idForNewExercise\r\n            );\r\n            this.props.history.push(\"/be-fit/exercise/\" + idForNewExercise);\r\n          }}\r\n        ></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i\r\n          className=\"edit icon\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/be-fit/exercise/\" + exercise.id);\r\n          }}\r\n        ></i>\r\n      );\r\n    }\r\n  };\r\n  renderResults() {\r\n    if (this.state.exercises === null) {\r\n      return <Loader />;\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div className=\"ui negative message\">\r\n          <div className=\"header\">No results found</div>\r\n          <p>Please try with other search settings!</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.exercises.map(ex => (\r\n        <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n          <div className=\"five wide column\">{ex.name}</div>\r\n          <div className=\"column\">{this.editIcon(ex)}</div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true\r\n        });\r\n        this.props.setSearchSettings({\r\n          ...this.props.searchSettings,\r\n          [key]: value\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        let settings = { ...this.props.searchSettings };\r\n        delete settings[key];\r\n        this.props.setSearchSettings(settings);\r\n        this.setState({ shouldReload: true });\r\n      },\r\n      showLanguages: this.props.showLanguages\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"ui grey inverted raised segment\">\r\n          <SearchSettings\r\n            {...settingsProps}\r\n            wgerSearch={this.props.wgerSearch}\r\n            selected={this.props.searchSettings}\r\n          />\r\n        </div>\r\n        <div className=\"search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.renderResults()}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises,\r\n    searchSettings: state.current.searchSettings\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  addExercise,\r\n  setSearchSettings,\r\n  setSearchPage\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass WgerSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Import exercises from wger.de</h1>\r\n        <ExerciseSearch showLanguages wgerSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WgerSearch;\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass InternalSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Search for exercises</h1>\r\n        <ExerciseSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InternalSearch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport \"../style.css\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview/Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator/WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview/ExercisePreview\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport WgerSearch from \"./ExerciseSearch/WgerSearch\";\r\nimport InternalSearch from \"./ExerciseSearch/InternalSearch\";\r\nimport { loadDefaultData } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    //Lade, falls nötig, die Standarddaten aus JSON-Dateien und wger-Datenbank\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.loadDefaultData();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/(be-fit)?\" component={Menu} />\r\n        <div className=\"content\">\r\n          <Route path=\"(/be-fit)?/overview\" component={Overview} />\r\n          <Route path=\"(/be-fit)?/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"(/be-fit)?/workout/:id\" component={WorkoutCreator} />\r\n          <Route path=\"(/be-fit)?/exercise/:id\" component={ExercisePreview} />\r\n          <Route path=\"(/be-fit)?/exercise/search\" component={InternalSearch} />\r\n          <Route path=\"(/be-fit)?/settings\" component={Settings} />\r\n          <Route path=\"(/be-fit)?/wger\" component={WgerSearch} />\r\n          <Route path=\"(/be-fit)?/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      muscles: state.wger.muscles,\r\n      exercise: state.userData.exercises[0]\r\n    };\r\n  },\r\n  { loadDefaultData }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}