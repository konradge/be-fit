{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Overview/Statistic.jsx","components/Overview/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/ExerciseWrapper/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/Loader.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Overview/Timeline.jsx","components/Overview/ChartComponent.jsx","components/Popup.jsx","components/Overview/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/WorkoutCreator/DragAndDropList.jsx","components/WorkoutCreator/Dropdown.jsx","components/WorkoutCreator/WorkoutCreator.jsx","components/ExercisePreview/ImageSearch/ImageCard.jsx","components/ExercisePreview/ImageSearch/ImageField.jsx","components/ExercisePreview/ExerciseFormSelector.jsx","components/ExercisePreview/ExerciseForm.jsx","components/ExercisePreview/ExercisePreview.jsx","components/Settings/FileUpload.jsx","components/Settings/DefaultSettings.jsx","components/Settings/DataDownloader.jsx","components/Settings/DeleteSelectorField.jsx","components/Settings/DataDeletor.jsx","components/Settings/Settings.jsx","components/ExerciseSearch/SearchSettings.jsx","components/ExerciseSearch/ExerciseSearch.jsx","components/ExerciseSearch/WgerSearch.jsx","components/ExerciseSearch/InternalSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setIndex","index","setStoppedAt","timeAlreadyPassed","setPause","time","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","console","log","addWeight","newWeight","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","workoutStoppedAt","pause","undefined","test","combineReducers","current","action","userData","history","workouts","exercises","muscles","equipment","getId","name","filter","muscle","title","find","w","splice","position","duration","updatedWorkouts","map","deleted","e","ex","date","Date","value","key","parseInt","startId","prop","m","wger","data","languages","language","announceExercise","exerciseList","speech","findById","speak","text","queue","array","elem","isSameDay","date1","date2","getDate","getMonth","getYear","list","sortedIds","item","sort","a","b","length","unique","Set","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","calcStats","setState","Array","from","statistics","keys","Math","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","isNaN","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","Speech","init","lang","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","dangerouslySetInnerHTML","__html","PauseScreen","pauseEnded","beforeunload","endPause","window","addEventListener","removeEventListener","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","push","stopWorkout","pauseTimer","runTimer","Loader","message","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","ready","pushWorkoutHistory","currentWorkout","finishWorkout","nextExerciseIndex","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","icon","idForNewExercise","Timeline","today","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","arr","filteredTrainings","trainingsOnSelectedDay","t","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","weightValue","lastAnchorTag","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","weightHistory","latestTrainings","training","getWeightHistory","step","onChange","evt","target","onKeyDown","keyCode","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Dropdown","header","WorkoutCreator","match","params","loadWorkout","_","prevState","editedExercises","editWorkout","newIdOrder","newOrder","usersExercises","editExerciseDurationInWorkout","removeExerciseFromWorkout","renderExerciseSelector","stopPropagation","addExerciseToWorkout","border","selectedWorkout","usersWorkouts","removeWorkout","preventSelect","created","addWorkout","usersEquipment","usersMuscles","ids","uniqueIds","concat","toLowerCase","renderWorkoutSelector","renderExerciseList","neededEquipment","preventDefault","confirm","ownProps","allWorkouts","defaultPauseTime","workoutName","ImageCard","spans","imageRef","React","createRef","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","get","cancelToken","CancelToken","c","request","results","alt_description","urls","regular","imageList","showImage","imageUrl","href","htmlFor","event","onFocus","imageUrlFieldFocused","onBlur","contentStyle","searchImages","autoComplete","imageSearch","ExerciseFormSelector","createMuscle","createEquipment","remove","deleteMuscle","deleteEquipment","newId","handleChange","ExerciseForm","formChanged","form","when","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","muscleId","equipmentId","validate","errors","onSubmit","back","touched","handleBlur","handleSubmit","onKeyPress","which","autoFocus","as","ImageField","muscleName","equipmentName","ExercisePreview","getExercise","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DefaultSettings","setDefaultValue","DataDownloader","url","encodeURIComponent","download","DeleteSelectorField","checked","historyField","delete","DataDeletor","deleteAll","fieldsToDelete","Settings","overwriteChecked","clear","reload","file","json","setUserData","addUserData","error","fileLoadingError","resetAll","showLanguages","isClearable","short_name","full_name","deleteKey","setSearchSettings","wgerSearch","WgerSearch","searchSettings","status","shouldReload","editIcon","searchData","Object","join","Axios","prev","previous","isRightEquipment","includes","isRightMuscles","keywordMatches","settingsProps","SearchSettings","renderArrowButtons","renderResults","ExerciseSearch","InternalSearch","App","loadDefaultData","path","component","exact","dispatch","all","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"uSAEeA,MAAMC,OAAO,CAAEC,QAAS,4BCG1BC,EAAa,SAAAC,GACxB,MAAO,CACLC,KAAM,cACNC,QAASF,IAKAG,EAAW,SAAAC,GACtB,MAAO,CACLH,KAAM,YACNC,QAASE,IAKAC,EAAe,SAAAC,GAC1B,MAAO,CACLL,KAAM,iBACNC,QAASI,IAKAC,EAAW,SAAAC,GACtB,MAAO,CAAEP,KAAM,YAAaC,QAASM,IA2D1BC,EAAc,SAAAC,GACzB,MAAO,CAAET,KAAM,eAAgBC,QAASQ,IAI7BC,EAAiB,SAAAC,GAC5B,MAAO,CAAEX,KAAM,kBAAmBC,QAASU,IAIhCC,EAAe,SAACC,EAAUC,GACrC,MAAO,CAAEd,KAAM,gBAAiBC,QAAS,CAAEY,WAAUC,QAU1CC,EAAU,SAAAC,GAErB,OADAC,QAAQC,IAAIF,GACL,CAAEhB,KAAM,WAAYC,QAASe,IAIzBG,EAAY,SAAAC,GACvB,MAAO,CAAEpB,KAAM,aAAcC,QAASmB,I,2CCrH3BC,EAAY,WACvB,IACE,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,UACxD,GAAwB,OAApBJ,EACF,OAEF,OAAOC,KAAKC,MAAMF,GAClB,MAAOK,GACP,SAISC,EAAY,SAAAC,GACvB,IAEE,IAAMP,EAAkBC,KAAKO,UAAUD,GACvCJ,aAAaM,QAAQ,QAASR,KAAKO,UAAUR,IAC7C,MAAOK,M,yjBCfX,IAAMK,EAAiB,CACrBC,aAAc,GACdC,kBAAmB,EACnBC,OAAQ,IAEJC,EAAgB,CAAEC,iBAAkB,GAAIC,UAAW,I,yjBCP1C,IAqBTC,EAAM,CACV1B,SAAU,KACV2B,QAAS,KACTrC,MAAO,EACPsC,iBAAkB,EAClBC,WAAOC,EACPC,KAAM,I,yjBC3BO,ICKAC,cAAgB,CAE7BC,QFPa,WAA4B,IAA3BA,EAA0B,uDAAhBP,EAAKQ,EAAW,uCACxC,OAAQA,EAAO/C,MACb,IAAK,eACH,OAAO,KAAK8C,EAAZ,CAAqBjC,SAAUkC,EAAO9C,QAASwC,iBAAkB,IACnE,IAAK,cACH,OAAO,KAAKK,EAAZ,CAAqBN,QAASO,EAAO9C,QAASwC,iBAAkB,IAClE,IAAK,YACH,OAAO,KACFK,EADL,CAEE3C,MAAO4C,EAAO9C,QACdwC,iBAAkB,IAEtB,IAAK,iBACH,OAAO,KAAKK,EAAZ,CAAqBL,iBAAkBM,EAAO9C,UAChD,IAAK,YACH,OAAO,KAAK6C,EAAZ,CAAqBJ,MAAOK,EAAO9C,UACrC,QACE,OAAO6C,IERXE,SHAa,WAUT,IAEAR,EAASS,EAASC,EAAUC,EAAWC,EAASC,EAXpDL,EASG,uDATQ,CACTE,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAW,GACXJ,QAASjB,EACTI,iBAEFW,EACG,uCAGH,OAAQA,EAAO/C,MAEb,IAAK,gBACH,OAAO,EAAP,GACKgD,EADL,CAEEI,QAAQ,GAAD,mBACFJ,EAASI,SADP,CAEL,CAAEtC,GAAIwC,GAAMN,EAASI,SAAUG,KAAMR,EAAO9C,aAGlD,IAAK,gBACH,OAAO,EAAP,GACK+C,EADL,CAEEI,QAASJ,EAASI,QAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAO3C,KAAOiC,EAAO9C,aAGpE,IAAK,mBACH,OAAO,EAAP,GACK+C,EADL,CAEEK,UAAU,GAAD,mBACJL,EAASK,WADL,CAEP,CAAEvC,GAAIwC,GAAMN,EAASK,WAAYE,KAAMR,EAAO9C,aAGpD,IAAK,mBACH,OAAO,EAAP,GACK+C,EADL,CAEEK,UAAWL,EAASI,QAAQI,QAC1B,SAAAH,GAAS,OAAIA,EAAUvC,KAAOiC,EAAO9C,aAI3C,IAAK,cACH,OAAO,EAAP,GACK+C,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,UADN,CAEN,CACEpC,GAAIwC,GAAMN,EAASE,UACnBQ,MAAOX,EAAO9C,QACdkD,UAAW,GACXb,UAAWU,EAASZ,cAAcE,eAI1C,IAAK,iBACH,OAAO,EAAP,GACKU,EADL,CAEEE,SAAUF,EAASE,SAASM,QAC1B,SAAAhB,GAAO,OAAIA,EAAQ1B,KAAOiC,EAAO9C,aAGvC,IAAK,0BAEH,OADAuC,EAAUQ,EAASE,SAASS,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,KAAOiC,EAAO9C,QAAQF,eAI9DyC,EAAO,KACFA,EADE,CAELW,UAAU,GAAD,mBAAMX,EAAQW,WAAd,CAAyB,CAAErC,GAAIiC,EAAO9C,QAAQU,gBAElD,EAAP,GACKqC,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,SAASM,QAAO,SAAAI,GAAC,OAAIA,EAAE9C,KAAOiC,EAAO9C,QAAQF,cADnD,CAENyC,OAVKQ,EAaX,IAAK,+BAGH,OAFAR,EAAUQ,EAASE,SAASS,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,KAAOiC,EAAO9C,QAAQF,cACtDoD,UAAUU,OAAOd,EAAO9C,QAAQ6D,SAAU,GAC3C,EAAP,GACKd,EADL,CAEEE,SAAS,GAAD,mBACHF,EAASE,SAASM,QAAO,SAAAI,GAAC,OAAIA,EAAE9C,KAAOiC,EAAO9C,QAAQF,cADnD,CAENyC,MAGN,IAAK,eAGH,OADAA,EAAO,KADPA,EAAUQ,EAASE,SAASS,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,KAAOiC,EAAO9C,QAAQF,aACvD,GAAoBgD,EAAO9C,QAAQuC,SACnC,EAAP,GACKQ,EADL,CAEEE,SAAS,CACPV,GADM,mBAEHQ,EAASE,SAASM,QAAO,SAAAI,GAAC,OAAIA,EAAE9C,KAAOiC,EAAO9C,QAAQF,iBAI/D,IAAK,eACH,IAAMe,EAAKwC,GAAMN,EAASG,WAC1B,OAAO,EAAP,GACKH,EADL,CAEEG,UAAU,GAAD,mBACJH,EAASG,WADL,CAEP,CACErC,KACAyC,KAAMR,EAAO9C,SAAW,oBAAsBa,EAC9CiD,SAAUf,EAASZ,cAAcC,sBAIzC,IAAK,kBACH,IAAM2B,EAAkBhB,EAASE,SAASe,KAAI,SAAAzB,GAC5C,OAAO,EAAP,GACKA,EADL,CAEE0B,SAAS,EACTf,UAAWX,EAAQW,UAAUK,QAC3B,SAAA3C,GAAQ,OAAIA,EAASC,KAAOiC,EAAO9C,gBAIzC,OAAO,EAAP,GACK+C,EADL,CAEEG,UAAWH,EAASG,UAAUK,QAAO,SAAAW,GAAC,OAAIA,EAAErD,KAAOiC,EAAO9C,WAC1DiD,SAAUc,IAEd,IAAK,gBAEH,OAAO,EAAP,GACKhB,EADL,CAEEG,UAAU,CAAD,KACFJ,EAAO9C,QAAQY,SADb,CACuBC,GAAIiC,EAAO9C,QAAQa,MAD1C,mBAEJkC,EAASG,UAAUK,QAAO,SAAAY,GAAE,OAAIA,EAAGtD,KAAOiC,EAAO9C,QAAQa,UAIlE,IAAK,uBACH,OAAO,EAAP,GACKkC,EADL,CAEEC,QAAQ,EAAD,GACFD,EAASC,QADP,CAELhB,aAAa,GAAD,mBACPe,EAASC,QAAQhB,cADV,CAEV,CAAEoC,KAAM,IAAIC,KAAQZ,MAAOX,EAAO9C,eAI1C,IAAK,WACH,OAAO,EAAP,GACK+C,EADL,CAEEC,QAAQ,EAAD,GACFD,EAASC,QADP,CAELf,kBAAmBc,EAASC,QAAQf,kBAAoBa,EAAO9C,YAGrE,IAAK,aACH,OAAO,EAAP,GACK+C,EADL,CAEEC,QAAQ,EAAD,GACFD,EAASC,QADP,CAELd,OAAO,GAAD,mBACDa,EAASC,QAAQd,QADhB,CAEJ,CAAEkC,KAAM,IAAIC,KAAQnC,OAAQY,EAAO9C,eAK3C,IAAK,oBACHgB,QAAQC,IAAI6B,EAAO9C,QAAQsE,OAC3B,IACEnC,EAAcW,EAAO9C,QAAQuE,KAAOC,SAAS1B,EAAO9C,QAAQsE,OAC5D,SACAnC,EAAcW,EAAO9C,QAAQuE,KAAOzB,EAAO9C,QAAQsE,MAErD,OAAO,EAAP,GACKvB,EADL,CAEEZ,kBAEJ,IAAK,aA4DH,OAzDEc,EADEH,EAAO9C,QAAQiD,SACN,GACFH,EAAO9C,QAAQkD,UAEbH,EAASE,SAASe,KAAI,SAAAzB,GAC/B,OAAO,EAAP,GACKA,EADL,CAEEW,UAAW,QAIJH,EAASE,SAElBH,EAAO9C,QAAQkD,UACjBA,EAAY,GACHJ,EAAO9C,QAAQmD,SAAWL,EAAO9C,QAAQoD,WAC9CN,EAAO9C,QAAQmD,UAGjBD,EAAYH,EAASG,UAAUc,KAAI,SAAApD,GACjC,OAAO,EAAP,GACKA,EADL,CAEEuC,QAASvC,EAASuC,QAAQI,QAAO,SAAAC,GAAM,OAAIA,GAAU,YAIvDV,EAAO9C,QAAQoD,YAEjBF,EAAYH,EAASG,UAAUc,KAAI,SAAApD,GACjC,OAAO,EAAP,GACKA,EADL,CAEEwC,UAAWxC,EAASuC,QAAQI,QAAO,SAAAH,GAAS,OAAIA,GAAa,aAKnEF,EAAYH,EAASG,UAIvBC,EAAUL,EAAO9C,QAAQmD,QACrBJ,EAASI,QAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAO3C,IAAM,MAC/CkC,EAASI,QAEbC,EAAYN,EAAO9C,QAAQoD,UACvBL,EAASK,UAAUG,QAAO,SAAAH,GAAS,OAAIA,EAAUvC,IAAM,MACvDkC,EAASK,UAEbJ,EAAUD,EAASC,QACfF,EAAO9C,QAAQgD,QAAQd,SACzBc,EAAQd,OAAS,IAEfY,EAAO9C,QAAQgD,QAAQ,mBACzBA,EAAQf,kBAAoB,GAE1Ba,EAAO9C,QAAQgD,QAAQC,WACzBD,EAAQhB,aAAe,IAElB,CACLgB,UACAE,YACAD,WACAE,UACAC,YACAjB,iBAEJ,IAAK,gBAEH,OAAOW,EAAO9C,QAChB,IAAK,gBAAL,MAE0D8C,EAAO9C,QAA5DkD,EAFL,EAEKA,UAAWD,EAFhB,EAEgBA,SAAUD,EAF1B,EAE0BA,QAASG,EAFnC,EAEmCA,QAASC,EAF5C,EAE4CA,UAE1C,IAAIqB,EAAUpB,GAAMN,EAASG,WAC7B,IAAK,IAAIwB,KAAQxB,EACfA,EAAUwB,GAAM7D,GAAK4D,EACrBA,IAIF,IAAK,IAAIC,KADTD,EAAUpB,GAAMN,EAASE,UACRA,EACfA,EAASyB,GAAM7D,GAAK4D,EACpBA,IAIF,IAAK,IAAIC,KADTD,EAAUpB,GAAMN,EAASI,SACRA,EACfA,EAAQuB,GAAM7D,GAAK4D,EACnBA,IAEF,OAAO,EAAP,GACK1B,EADL,CAEEG,UAAU,GAAD,mBAAMH,EAASG,WAAf,YAA6BA,IACtCD,SAAS,GAAD,mBAAMF,EAASE,UAAf,YAA4BA,IACpCE,QAAQ,GAAD,mBAAMJ,EAASI,SAAf,YAA2BA,EAAQI,QAAO,SAAAoB,GAAC,OAAIA,EAAE9D,IAAM,QAC9DuC,UAAU,GAAD,mBACJL,EAASK,WADL,YAEJA,EAAUG,QAAO,SAAAW,GAAC,OAAIA,EAAErD,IAAM,QAGnCmC,QAAS,CACPhB,aAAa,GAAD,mBACPe,EAASC,QAAQhB,cADV,YAEPgB,EAAQhB,eAEbC,kBACEc,EAASC,QAAQf,kBAAoBe,EAAQf,kBAC/CC,OAAO,GAAD,mBAAMa,EAASC,QAAQd,QAAvB,YAAkCc,EAAQd,YAGtD,IAAK,8BACH,OAAO,EAAP,GACKa,EADL,CAEEE,SAAUH,EAAO9C,QAAQiD,SACzBC,UAAWJ,EAAO9C,QAAQkD,UAC1BC,QAASL,EAAO9C,QAAQmD,UAE5B,IAAK,8BACH,OAAO,EAAP,GACKJ,EADL,CAEEI,QAAQ,GAAD,mBAAMJ,EAASI,SAAf,YAA2BL,EAAO9C,QAAQwD,SACjDJ,UAAU,GAAD,mBAAML,EAASK,WAAf,YAA6BN,EAAO9C,QAAQoD,cAEzD,QACE,OAAOL,IGlTX6B,KDXa,WAOT,IANJC,EAMG,uDANI,CACLC,UAAW,GACX3B,QAAS,GACTC,UAAW,IAEbN,EACG,uCACH,OAAQA,EAAO/C,MACb,IAAK,8BACH,OAAO,KACF8E,EADL,CAEEC,UAAWhC,EAAO9C,QAAQ+E,SAC1B3B,UAAWN,EAAO9C,QAAQoD,UAC1BD,QAASL,EAAO9C,QAAQwD,SAE5B,QACE,OAAOqB,METN,SAASG,EAAiB9E,EAAOqC,EAAS0C,EAAcC,GAC7D,IAAItE,EAAWuE,EAASF,EAAc1C,EAAQW,UAAUhD,GAAOW,IAC/DqE,EAAOE,MAAM,CACXC,MACG9C,EAAQW,UAAUhD,GAAO4D,UAAYlD,EAASkD,UAC/C,YACAlD,EAAS0C,KACXgC,OAAO,IASJ,SAASH,EAASI,EAAO1E,GAC9B,OAAO0E,EAAM7B,MAAK,SAAA8B,GAAI,OAAIA,EAAK3E,KAAOA,KAIjC,SAAS4E,EAAUC,EAAOC,GAC/B,OACED,EAAME,YAAcD,EAAMC,WAC1BF,EAAMG,aAAeF,EAAME,YAC3BH,EAAMI,YAAcH,EAAMG,UAKvB,SAASzC,GAAM0C,GACpB,IAAMC,EAAYD,EAAK/B,KAAI,SAAAiC,GAAI,OAAIA,EAAKpF,MAAIqF,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAC/D,OAAyB,IAArBJ,EAAUK,OACL,EAEFL,EAAUA,EAAUK,OAAS,GAAK,EASpC,SAASC,GAAOf,GACrB,OAAO,YAAI,IAAIgB,IAAIhB,IA4Bd,SAASiB,GAAqBC,GAAiB,IAC9CzE,EAAyByE,EAAzBzE,aAAcE,EAAWuE,EAAXvE,OACpB,IAAK,IAAIqC,KAAOvC,EACdA,EAAauC,GAAKH,KAAO,IAAIC,KAAKrC,EAAauC,GAAKH,MAEtD,IAAK,IAAIG,KAAOrC,EACdA,EAAOqC,GAAKH,KAAO,IAAIC,KAAKnC,EAAOqC,GAAKH,M,IC3E7BsC,G,iLATX,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,SAASC,KAAKC,MAAMvC,OACnC,yBAAKqC,UAAU,SAASC,KAAKC,MAAMC,Y,GALnBC,aCSlBC,G,2MACJpF,MAAQ,CACNqF,WAAY,EAAKJ,MAAMI,WACvBC,eAAe,EACfC,UAAW,I,mFFKR,IAAiB5B,EEApBqB,KAAKQ,YACLR,KAAKS,SAAS,CACZF,WFFkB5B,EEEC+B,MAAMC,KAAKD,MAAMV,KAAKY,WAAWnB,QAAQoB,QFDzDlC,EAAMW,MAAK,kBAAMwB,KAAKC,SAAW,W,2CEKtCf,KAAKQ,c,kCAEK,MAEqDR,KAAKC,MAA5De,EAFE,EAEFA,YAAaC,EAFX,EAEWA,mBAAoBC,EAF/B,EAE+BA,kBACjC9F,EAAiB4F,EAAjB5F,aACR4E,KAAKY,WAAa,CAChB,kBAAC,GAAD,CAAWlD,MAAOsC,KAAKmB,sBAAuBjB,MAAM,kBACpD,kBAAC,GAAD,CACExC,MAAOoD,KAAKM,MAAMJ,EAAY3F,mBAC9B6E,MAAM,qBAER,kBAAC,GAAD,CAAWxC,MAAOtC,EAAaqE,OAAQS,MAAM,kBAC7C,kBAAC,GAAD,CACExC,MAAOsC,KAAKqB,yBACZnB,MAAM,8BAERF,KAAKsB,uBAAuBC,KAAKvB,MACjC,kBAAC,GAAD,CAAWtC,MAAOwD,EAAmBhB,MAAM,uBAC3C,kBAAC,GAAD,CAAWxC,MAAOuD,EAAoBf,MAAM,wBAC5C,kBAAC,GAAD,CACExC,MAAOtC,EAAauB,QAAO,SAAAhB,GAAO,OFEjCkD,EEF6ClD,EAAQ6B,KFErC,IAAIC,SEFwCgC,OAC7DS,MAAM,qBAERF,KAAKwB,iBAAiBD,KAAKvB,S,4CAGR,IACb5E,EAAiB4E,KAAKC,MAAMe,YAA5B5F,aACR,GAA4B,IAAxBA,EAAaqE,OAEf,OAAO,EAET,IAAMgC,EAAYrG,EAAa,GAAGoC,KAC5BkE,EAAa,IAAIjE,KAASgE,EAC1BE,EAAYb,KAAKM,MAAMM,EAAa,IAAO,GAAK,GAAK,GAAK,GAAK,EAErE,OADgBtG,EAAaqE,OAASkC,GACvBC,QAAQ,K,+CAGvB,IAAMlI,GACJsG,KAAKC,MAAMe,YAAY3F,kBACvB2E,KAAKC,MAAMe,YAAY5F,aAAaqE,QACpCmC,QAAQ,GAEV,OAAIC,MAAMnI,GAED,EAEAA,I,yCAGS,IACZ2G,EAAeL,KAAKhF,MAApBqF,WACDL,KAAKhF,MAAMsF,gBACdD,EAAaL,KAAKC,MAAMI,YAE1B,IAAMyB,GACJhB,KAAKiB,IAAIC,MACP,KACAhC,KAAKC,MAAMe,YAAY1F,OAAO8B,KAAI,SAAAL,GAAC,OAAIA,EAAEzB,WACvC+E,GACJuB,QAAQ,GAEV,OAAO,kBAAC,GAAD,CAAWlE,MAAQoE,GAAQ,GAAKA,GAAS,EAAG5B,MAAM,kB,+CAEjC,IAAD,OAEjBG,EAAeL,KAAKhF,MAApBqF,WAIN,OAHKL,KAAKhF,MAAMsF,gBACdD,EAAaL,KAAKC,MAAMI,YAGxB,kBAAC,GAAD,CACE3C,MAAO2C,EACPH,MACE,6BACE,uBACEH,UAAU,mCACVkC,QAAS,WACP,EAAKxB,SAAS,CACZH,eAAe,EACfD,WAAY6B,YAAY7B,EAAa,IAAKuB,QAAQ,SAN1D,YAWE,uBACE7B,UAAU,iCACVkC,QAAS,kBACP,EAAKxB,SAAS,CACZH,eAAe,EACfD,WAAY6B,YAAY7B,EAAa,IAAKuB,QAAQ,SAIxD,6BACC5B,KAAKhF,MAAMsF,cACV,yBAAKP,UAAU,mBACb,yBACEA,UAAU,iBACVkC,QAAS,WACP,EAAKxB,SAAS,CAAEH,eAAe,IAC/B,EAAKL,MAAM3F,UAAU+F,KAGvB,uBAAGN,UAAU,eAEf,yBACEA,UAAU,gBACVkC,QAAS,WACP,EAAKxB,SAAS,CACZH,eAAe,EACfD,WAAY,EAAKJ,MAAMI,eAI3B,uBAAGN,UAAU,aAGf,U,+BAMJ,IAAD,OACP,OACE,6BACE,yBAAKA,UAAU,kCACZC,KAAKhF,MAAMuF,UAAUnD,KAAI,SAAA9D,GAExB,MAAsC,oBAA3B,EAAKsH,WAAWtH,GAIvB,yBAAKyG,UAAU,SAASpC,IAAKrE,GAC1B,EAAKsH,WAAWtH,MAKrB,yBAAKyG,UAAU,SAASpC,IAAKrE,GAC1B,EAAKsH,WAAWtH,a,GA9JD6G,aAuLjBgC,gBAfS,SAAAnH,GACtB,IAAIqF,EAAa,GAMjB,OALIrF,EAAMmB,SAASC,QAAQd,OAAOmE,OAAS,IACzCY,EACErF,EAAMmB,SAASC,QAAQd,OAAON,EAAMmB,SAASC,QAAQd,OAAOmE,OAAS,GAClEnE,QAEA,CACL0F,YAAahG,EAAMmB,SAASC,QAC5BiE,aACAY,mBAAoBjG,EAAMmB,SAASG,UAAUmD,OAC7CyB,kBAAmBlG,EAAMmB,SAASE,SAASoD,UAIP,CACtCnF,aADa6H,CAEZ/B,IC5LY,SAASgC,GAAanC,GACnC,OACE,6BACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,cAAf,sCAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,mBACb,yBAAKkC,QAAShC,EAAMoC,UAClB,6BACE,uBAAGtC,UAAU,cADf,SAIF,yBAAKkC,QAAShC,EAAMqC,cAClB,6BACE,uBAAGvC,UAAU,oBADf,aAIF,yBAAKkC,QAAShC,EAAMsC,SAClB,6BACE,uBAAGxC,UAAU,cADf,iB,cCtBVyC,G,2MACJxH,MAAQ,CAAE2C,IAAK,EAAG8E,SAAU,EAAGnE,OAAQ,M,0MAE/BA,EAAS,IAAIoE,I,SACbpE,EAAOqE,KAAK,CAAEC,KAAM,U,OAE1B5C,KAAKS,SAAS,CAAEnC,W,uIAEP5E,GA2BT,OAxBIsG,KAAKhF,MAAMyH,WAAa/I,IACtBsG,KAAKhF,MAAMsD,QACT5E,EAAO,GAAKA,EAAO,GACrBsG,KAAKhF,MAAMsD,OAAOE,MAAM,CACtBC,KAAM,GAAK/E,EACXgF,OAAO,IAKbsB,KAAKC,MAAM/F,QAAQ,EAAI,IACvB8F,KAAKC,MAAM1G,aAAayG,KAAKC,MAAMjG,SAASkD,SAAWxD,GAEvDsG,KAAKS,SAAS,CAAEgC,SAAU/I,KAKf,IAATA,IAEFsG,KAAKS,SAAS,CAAE9C,IAAKqC,KAAKhF,MAAM2C,IAAM,IAEtCqC,KAAKC,MAAM4C,QAGX,yBAAK9C,UAAU,qBACb,yBAAKA,UAAU,QAAQrG,EAAvB,KACA,4BAAKsG,KAAKC,MAAMjG,SAAS0C,S,+BAKrB,IAAD,OACP,OACE,6BACE,yBAAKqD,UAAU,aACb,kBAAC,wBAAD,CACEA,UAAU,QACVpC,IAAK,GAAKqC,KAAKC,MAAMjG,SAASC,GAAK+F,KAAKhF,MAAM2C,IAC9CmF,gBAAiB9C,KAAKC,MAAMjG,SAASkD,SACrC6F,OAAQ,CAAC,CAAC,OAAQ,KAAO,CAAC,OAAQ,KAAO,CAAC,SAC1CC,UAAWhD,KAAKC,MAAMgD,QACtBC,QAASlD,KAAKC,MAAMiD,QACpBC,WAAYnD,KAAKmD,WAAW5B,KAAKvB,MACjCoD,KAAM,OAGV,yBAAKrD,UAAU,wBACb,wBAAIA,UAAU,mBACXC,KAAKC,MAAMjG,SAAS0C,KACrB,8BACE,uBAAGqD,UAAU,YAAYkC,QAAS,kBAAM,EAAKhC,MAAMoD,YAGvD,yBAAKtD,UAAU,eACZC,KAAKC,MAAMjG,SAASsJ,MACnB,yBAAKvD,UAAU,cACb,yBACEA,UAAU,6BACVwD,IAAKvD,KAAKC,MAAMjG,SAASsJ,MACzBE,IAAK,YAAcxD,KAAKC,MAAMjG,SAAS0C,QAGzC,KACHsD,KAAKC,MAAMjG,SAASyJ,YACnB,yBAAK1D,UAAU,wCACb,yBACE2D,wBAAyB,CACvBC,OAAQ3D,KAAKC,MAAMjG,SAASyJ,gBAIhC,Y,GAnFOtD,aA2FRgC,eAAQ,KAAM,CAAEjI,UAASX,gBAAzB4I,CAAyCK,IC/FlDoB,G,2MACJ5I,MAAQ,CAAEsD,OAAQ,KAAMmE,SAAU,EAAGoB,YAAY,EAAOZ,SAAS,G,EAYjEa,aAAe,WAEb,EAAKrD,SAAS,CAAEwC,SAAS,IACzB,EAAKhD,MAAMxG,SAAS,EAAKuB,MAAMyH,W,EAEjCU,WAAa,SAAAzJ,GAeX,OAdI,EAAKsB,MAAMyH,WAAa/I,IACtB,EAAKsB,MAAMsD,QACT5E,EAAO,GAAKA,EAAO,GACrB,EAAKsB,MAAMsD,OAAOE,MAAM,CAAEC,KAAM,GAAK/E,EAAMgF,OAAO,IAGtD,EAAKuB,MAAM/F,QAAQ,EAAI,IAEvB,EAAKuG,SAAS,CAAEgC,SAAU/I,KAExBA,GAAQ,IACV,EAAKuG,MAAMxG,SAAS,MACpB,EAAKwG,MAAM8D,YAGX,yBAAKhE,UAAU,qBACb,yBAAKA,UAAU,QAAQrG,EAAvB,KACA,0C,0MAjCJsK,OAAOC,iBAAiB,eAAgBjE,KAAK8D,cACvCxF,EAAS,IAAIoE,I,SACbpE,EAAOqE,KAAK,CAAEC,KAAM,U,OAE1B5C,KAAKS,SAAS,CAAEnC,W,mJAGhB0F,OAAOE,oBAAoB,eAAgBlE,KAAK8D,cAChD9D,KAAKC,MAAMxG,SAASuG,KAAKhF,MAAMtB,Q,+BA6BvB,IAAD,OACP,OACE,6BACE,yBAAKqG,UAAU,aACb,kBAAC,wBAAD,CACEA,UAAU,QACVmD,QAAS,EACTJ,gBAAiB9C,KAAKC,MAAMvG,KAC5ByJ,WAAYnD,KAAKmD,WACjBJ,OAAQ,CAAC,CAAC,OAAQ,KAAO,CAAC,OAAQ,KAAO,CAAC,SAC1CC,YAAWhD,KAAKhF,MAAMiI,SAAUjD,KAAKC,MAAMkE,UAC3Cf,KAAM,OAGV,yBAAKrD,UAAU,uCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAAf,iBAEE,wBACEkC,QAAS,WACP,EAAKxB,SAAS,CAAEoD,YAAY,IAC5B,EAAK5D,MAAM8D,aAGb,uBAAGhE,UAAU,+BACZC,KAAKC,MAAMmE,sB,GAjEFjE,aA0EXgC,gBACb,SAAAnH,GACE,MAAO,CAAEa,MAAOb,EAAMiB,QAAQJ,SAEhC,CAAE3B,UAAST,YAJE0I,CAKbyB,IC9Ea,SAASS,GAAepE,GACrC,OACE,6BACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,kBAAkBE,EAAMqE,eAExCrE,EAAMpE,MACL,kBAAC,GAAD,CACEnC,KAAMuG,EAAMpE,MACZsI,UAAWlE,EAAMkE,UACjBJ,SAAU9D,EAAM4C,KAChBuB,aAAcnE,EAAMjG,SAAS0C,OAG/B,kBAAC,GAAD,CACE1C,SAAUiG,EAAMjG,SAChBiJ,QAAShD,EAAMkE,UACfjB,QAASjD,EAAMsE,oBACf1B,KAAM5C,EAAM4C,KACZQ,KAAM,kBAAMpD,EAAM7D,QAAQoI,KAAK,aAAevE,EAAMjG,SAASC,OAGjE,yBAAK8F,UAAU,iBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,YAAYkC,QAAShC,EAAMwE,eAE1C,yBAAK1E,UAAU,qBACZE,EAAMkE,UACL,uBAAGpE,UAAU,aAAakC,QAAShC,EAAMyE,aAEzC,uBAAG3E,UAAU,YAAYkC,QAAShC,EAAM0E,YAG5C,yBAAK5E,UAAU,qBACb,uBAAGA,UAAU,oBAAoBkC,QAAShC,EAAM4C,WCxC5D,IAYe+B,GAZA,SAAA3E,GACb,OACE,yBAAKF,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,kBAAkBE,EAAM4E,SAAW,kB,ikBCUtDC,G,YACJ,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KAEDjF,MAAQ,CACXmJ,WAAW,EACXtI,OAAO,GALQ,E,wMAWXyC,EAAS,IAAIoE,I,SACbpE,EAAOqE,KAAK,CAAEC,KAAM,U,OAE1B5C,KAAKS,SAAS,CAAEnC,WACZ0B,KAAKC,MAAM8E,kBAAoB/E,KAAKC,MAAMjG,WAC5CgG,KAAKgF,gBACL5K,QAAQC,IAAI2F,KAAKC,MAAMjG,SAASkD,UAChC8C,KAAKxB,MACHwB,KAAKC,MAAMjG,SAASkD,UACjB8C,KAAKC,MAAMrE,kBAAoB,GAChC,YACAoE,KAAKC,MAAMjG,SAAS0C,O,+IAKTuI,GACbjF,KAAKC,MAAMiF,iBAAmBD,EAAUC,iBACtClF,KAAKC,MAAMjG,SAASC,KAAOgL,EAAUjL,SAASC,IAChD+F,KAAKC,MAAM1G,aAAa,GAE1ByG,KAAKgF,gBAEHhF,KAAKC,MAAM8E,kBACX/E,KAAKC,MAAMjG,WACVgG,KAAKhF,MAAMmK,QACXnF,KAAKC,MAAMpE,OAEZmE,KAAKxB,MACHwB,KAAKC,MAAMjG,SAASkD,SAAW,YAAc8C,KAAKC,MAAMjG,SAAS0C,S,sCAOvEsD,KAAKS,SAAS,CACZ0D,WAAW,M,4BAIT1F,GACAuB,KAAKhF,MAAMsD,QACb0B,KAAKhF,MAAMsD,OAAOE,MAAM,CAAEC,KAAMA,EAAMC,OAAO,M,sCAO/CsB,KAAKC,MAAMmF,mBAAmBpF,KAAKC,MAAMoF,eAAexI,OACxDmD,KAAKC,MAAM5G,SAAS,GACpB2G,KAAKS,SAAS,CAAE0E,OAAO,IACvBnF,KAAKxB,MAAM,mC,6BAOX,GAAwB,MAApBwB,KAAKC,MAAMpE,MASb,OARAmE,KAAKC,MAAMxG,SAAS,WACpB2E,EACE4B,KAAKC,MAAMiF,eACXlF,KAAKC,MAAMoF,eACXrF,KAAKC,MAAM5B,aACX2B,KAAKhF,MAAMsD,QAKf,GAAI0B,KAAKC,MAAMjG,WAAagG,KAAKhF,MAAMmK,MACrC,GAAInF,KAAKC,MAAMiF,eAAiB,GAAKlF,KAAKC,MAAM8E,iBAAiBtF,OAC/DO,KAAKsF,qBAEL,IAAKtF,KAAKC,MAAMpE,MAAO,CAErB,GAAImE,KAAKC,MAAMxE,UAAW,CACxB,IAAM8J,EAAoBvF,KAAKC,MAAMoF,eAAe/I,UAClD0D,KAAKC,MAAMiF,eAAiB,GAC5BjL,GACImK,EAAe7F,EACnByB,KAAKC,MAAM5B,aACXkH,GAEFvF,KAAKxB,MACHwB,KAAKC,MAAMxE,UACT,+BACA2I,EAAa1H,WAIjB0B,EACE4B,KAAKC,MAAMiF,eAAiB,EAC5BlF,KAAKC,MAAMoF,eACXrF,KAAKC,MAAM5B,aACX2B,KAAKhF,MAAMsD,QAGf0B,KAAKC,MAAM5G,SAAS2G,KAAKC,MAAMiF,eAAiB,GAChDlF,KAAKC,MAAMxG,SAASuG,KAAKC,MAAMxE,c,mCAQrCuE,KAAKS,SAAS,CAAE0D,WAAW,M,iCAK3BnE,KAAKS,SAAS,CAAE0D,WAAW,M,+BAInB,IAAD,OACP,OAAInE,KAAKhF,MAAMmK,MAGX,6BACE,kBAAC/C,GAAD,CACEC,SAAU,kBAAM,EAAKpC,MAAM7D,QAAQoI,KAAK,aACxClC,aAAc,kBAAM,EAAKrC,MAAM7D,QAAQoI,KAAK,qBAC5CjC,QAAS,WACP,EAAK9B,SAAS,CAAE0E,OAAO,IACvB,EAAKlF,MAAM5G,SAAS,GACpB+E,EACE,EACA,EAAK6B,MAAMoF,eACX,EAAKpF,MAAM5B,aACX,EAAKrD,MAAMsD,YAOpB0B,KAAKC,MAAM8E,kBAC2B,IAAvC/E,KAAKC,MAAM8E,iBAAiBtF,OAIlBO,KAAKC,MAAMjG,SAKnB,kBAACqK,GAAD,iBACMrE,KAAKC,MADX,CAEEkE,UAAWnE,KAAKhF,MAAMmJ,UACtBtB,KAAM7C,KAAK6C,KAAKtB,KAAKvB,MACrB0E,WAAY1E,KAAK0E,WAAWnD,KAAKvB,MACjCyE,YAAazE,KAAKsF,cAAc/D,KAAKvB,MACrC2E,SAAU3E,KAAK2E,SAASpD,KAAKvB,SAV1B,kBAAC,GAAD,MAFA,kBAAC,IAAD,CAAUwF,GAAG,oB,GA3JIrF,aAqOfgC,gBAvDS,SAAAnH,GACtB,IAqBIoJ,EArBEiB,EAAiB9G,EACrBvD,EAAMmB,SAASE,SACfrB,EAAMiB,QAAQN,SAGV8J,EAAezK,EAAMiB,QAAQ3C,MAQ/BU,EAAQ,MANYqL,EACpB9G,EACEvD,EAAMmB,SAASG,UACf+I,EAAe/I,UAAUmJ,GAAcxL,IAEzC,MA0BJ,OAvBIoL,EAAe/I,UAAUmJ,GAAcvI,WAEzClD,EAASkD,SAAWU,SAClByH,EAAe/I,UAAUmJ,GAAcvI,WAIvCmI,EAAe/I,UAAUmD,OAASgG,EAAe,IACnDrB,EAAeiB,EAAc,MAEpB9G,EACDvD,EAAMmB,SAASG,UACf+I,EAAe/I,UAAUmJ,EAAe,GAAGxL,KAG/C,KACAoL,EAAe/I,UAAUmJ,EAAe,GAAGvI,WAE7CkH,EAAalH,SAAWU,SACtByH,EAAe/I,UAAUmJ,EAAe,GAAGvI,YAI1C,CACLlD,WACA+K,iBAAkBM,EAAiBA,EAAe/I,UAAY,KAC9DgI,aAAce,EAAiBA,EAAexI,MAAQ,KACtDqI,eAAgBO,EAChBJ,iBACAd,oBAAqBvJ,EAAMiB,QAAQL,iBACnCC,MAAOb,EAAMiB,QAAQJ,MACrBJ,UAAW4J,EACPA,EAAe5J,UACfT,EAAMmB,SAASZ,cAAcE,UACjC4C,aAAcrD,EAAMmB,SAASG,UAC7B8H,eACAxI,iBAAkBZ,EAAMiB,QAAQL,oBAGI,CACtCwJ,mBd9IgC,SAAAvI,GAChC,MAAO,CAAE1D,KAAM,uBAAwBC,QAASyD,Ic8IhD3C,UACAb,WACAE,eACAE,YALa0I,CAMZ2C,I,sBCnPGY,G,2MACJ1K,MAAQ,CAAE2K,OAAQ,G,wEACR,IAAD,OACDC,EAAa5F,KAAKC,MAAM4F,SAASC,SACvC,OACE,yBAAK/F,UAAU,sBACb,kBAAC,KAAD,CAAcgG,WAAS,EAACC,WAAS,GAC/B,kBAAC,KAAaC,KAAd,KACE,0BAAMlG,UAAU,UAElB,kBAAC,KAAakG,KAAd,CACEN,OAAuB,YAAfC,EACR3D,QAAS,kBAAM,EAAKhC,MAAM7D,QAAQoI,KAAK,cAEvC,6BACE,uBAAGzE,UAAU,cADf,SAIF,kBAAC,KAAD,CACEV,MAAI,EACJ6G,KACE,6BACE,uBAAGnG,UAAU,oBADf,YAEE,uBAAGA,UAAU,sBAIjB,kBAAC,KAAS2F,KAAV,KACE,yBAAK3F,UAAU,mBACZ,CACC,kBAAC,KAASkG,KAAV,CACEtI,KAAM,EACNsE,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KAAK,6BAG1B,uBAAGzE,UAAU,gBANf,UAQA,kBAAC,KAASkG,KAAV,CACEtI,KAAM,EACNsE,QAAS,WACP,IAAMkE,EAAmB1J,GAAM,EAAKwD,MAAM3D,WAC1C,EAAK2D,MAAMtG,YAAY,IACvB,EAAKsG,MAAM7D,QAAQoI,KACjB,oBAAsB2B,KAI1B,uBAAGpG,UAAU,cAVf,gBAYA,yBAAKA,UAAU,aAAapC,KAAM,IAClCqC,KAAKC,MAAM3D,UAAUc,KAAI,SAAApD,GAAQ,OAC/B,kBAAC,KAASiM,KAAV,CACEtI,IAAK3D,EAASC,GACd0L,OAAQC,IAAe,oBAAsB5L,EAASC,GACtDgI,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KACjB,oBAAsBxK,EAASC,MAIlCD,EAAS0C,aAOtB,kBAAC,KAAauJ,KAAd,CACEN,OAAuB,iBAAfC,EACR3D,QAAS,kBAAM,EAAKhC,MAAM7D,QAAQoI,KAAK,kBAEvC,6BACE,uBAAGzE,UAAU,uBADf,qBAIF,kBAAC,KAAD,CACEV,MAAI,EACJ6G,KACE,6BACE,uBAAGnG,UAAU,wBADf,WAEE,uBAAGA,UAAU,sBAIjB,kBAAC,KAAS2F,KAAV,KACE,yBAAK3F,UAAU,mBACZ,CACCC,KAAKC,MAAM5D,SAASe,KAAI,SAAAzB,GAAO,OAC7B,kBAAC,KAASsK,KAAV,CACEtI,IAAKhC,EAAQ1B,GACb0L,OAAQC,IAAe,mBAAqBjK,EAAQ1B,GACpDgI,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KAAK,mBAAqB7I,EAAQ1B,MAGtD0B,EAAQkB,UAGb,kBAAC,KAASoJ,KAAV,CACEtI,KAAM,EACNsE,QAAS,WACP,EAAKhC,MAAMhH,WAAW,MACtB,EAAKgH,MAAM7D,QAAQoI,KAAK,wBAG1B,uBAAGzE,UAAU,cAPf,mBAaR,kBAAC,KAAD,CACEV,MAAI,EACJ6G,KACE,6BACE,uBAAGnG,UAAU,mBADf,WAEE,uBAAGA,UAAU,sBAIjB,kBAAC,KAAS2F,KAAV,KACE,kBAAC,KAASO,KAAV,CACEN,OAAuB,oCAAfC,EACR3D,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KAAK,qCAH5B,kBAQA,kBAAC,KAASyB,KAAV,CACEN,OAAuB,iCAAfC,EACR3D,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KAAK,kCAH5B,eAQA,kBAAC,KAASyB,KAAV,CACEN,OAAuB,gCAAfC,EACR3D,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KAAK,iCAH5B,gBAUJ,kBAAC,KAAayB,KAAd,CACEN,OAAuB,qBAAfC,EACR3D,QAAS,kBAAM,EAAKhC,MAAM7D,QAAQoI,KAAK,sBAEvC,6BACE,uBAAGzE,UAAU,cADf,mB,GAxJOI,aAyKJgC,gBAPS,SAAAnH,GACtB,MAAO,CACLsB,UAAWtB,EAAMmB,SAASG,UAC1BD,SAAUrB,EAAMmB,SAASE,YAIW,CAAEpD,aAAYU,eAAvCwI,CAAsDuD,I,0CC7K/DU,G,2MACJC,MAAQ,IAAI5I,K,EACZ6I,kBAAoB,EAAKrG,MAAM7E,aAAagC,KAAI,SAAAzB,GAAO,OAAIA,EAAQ6B,Q,EAEnExC,MAAQ,CAAE1B,MAAO,M,EAEjBiN,uBAAyB,G,mFAEvBvG,KAAKuG,uBAAyBvG,KAAKwG,YACnCxG,KAAKS,SAAS,CAAEnH,MAAO0G,KAAKuG,uBAAuB9G,OAAS,M,sCAE7C,IAAD,OAEd,OACE,yBAAKgH,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,OAAQ,WACpD,kBAAC,KAAD,CACEtN,MAAO0G,KAAKhF,MAAM1B,OAAS,EAC3BuN,OAAQ7G,KAAKwG,YACbM,WAAY,SAAAxN,GACVc,QAAQC,IAAIf,GACZ,EAAKmH,SAAS,CAAEnH,WAElByN,SAAU,SAAAvJ,GACR,OAAIA,EAAK0B,YAAc,EAAKmH,MAAMnH,UACzB8H,KAAWxJ,EAAM,UAEjBwJ,KAAWxJ,EAAM,aAG5ByJ,OAAQ,CAAEC,WAAY,YAAaC,QAAS,gBAC5CC,iBAAiB,O,kCAUvB,OAHAhN,QAAQC,IAAI,cACZD,QAAQC,IAAI2F,KAAKhF,MAAM1B,OAEe,IAAlC0G,KAAKsG,kBAAkB7G,OAGlB,CAAC,IAAIhC,OAGdrD,QAAQC,IAAI2F,KAAKsG,mBACVtG,KAAKsG,kBAAkB3J,QAAO,SAACiC,EAAMtF,EAAO+N,GACjD,OAAc,IAAV/N,IAGIuF,EAAUwI,EAAI/N,EAAQ,GAAIsF,S,+BAG5B,IAAD,OACH0I,EAAoB,GACxB,GAAItH,KAAKuG,uBAAuB9G,OAAS,EAAG,CAE1C,IAAInG,EAAQ0G,KAAKhF,MAAM1B,MACV,MAATA,IACFA,EAAQ0G,KAAKuG,uBAAuB9G,OAAS,GAE/CrF,QAAQC,IAAI,UAAYf,GAExB,IAAIiO,EAAyBvH,KAAKC,MAAM7E,aACrCuB,QAAO,SAAA6K,GAAC,OAAI3I,EAAU2I,EAAEhK,KAAM,EAAK+I,uBAAuBjN,OAC1D8D,KAAI,SAAAoK,GAAC,OAAIA,EAAE3K,SAIdyK,GAFAA,EAAoB5H,GAAO6H,IAEWnK,KAAI,SAAAV,GACxC,MAAO,CACLA,OACA+K,MAAOF,EAAuBG,QAAO,SAACC,EAAKC,GACzC,OAAOD,GAAOC,IAAQlL,EAAO,EAAI,KAChC,OAIT,OACE,6BACGsD,KAAK6H,gBACN,yBAAK9H,UAAU,WACiB,IAA7BuH,EAAkB7H,OACf,yBACA6H,EAAkBlK,KAAI,SAAAoK,GAAC,OACrB,yBAAK7J,IAAK6J,EAAE9K,MACT8K,EAAEC,MADL,MACeD,EAAE9K,e,GAvFVyD,aAgGRgC,gBAAQ,SAAAnH,GACrB,MAAO,CACLI,aAAcJ,EAAMmB,SAASC,QAAQhB,gBAF1B+G,CAIZiE,I,UCnGY,SAAS0B,GAAe7H,GACrC,OACE,yBAAKF,UAAU,SACb,kBAAC,SAAD,CACE0G,MAAO,CAAEC,MAAO,SAChBqB,OAAQ9H,EAAMhC,KAAK4I,OAAOzJ,KAAI,SAAAwK,GAAG,OAAIA,EAAI1H,SACzC/G,KAAK,OACL6O,mBAAiB,GAEjB,kBAAC,WAAD,CACEnL,MAAOoD,EAAMhC,KAAKpB,MAClBgK,OAAQ5G,EAAMhC,KAAK4I,OAAOzJ,KAAI,SAAAwK,GAAG,OAAIhK,SAASgK,EAAIlK,UAClDuK,gBAAiBhI,EAAMgI,gBACvBC,YAAajI,EAAMiI,gB,eChBvBC,G,2MACJnN,MAAQ,CAAEoN,MAAM,G,uEACRA,GACFpI,KAAKC,MAAMoI,SACbrI,KAAKS,SAAS,CAAE2H,W,+BAGV,IAAD,OACP,OACE,kBAAC,KAAD,CACEE,QAAStI,KAAKC,MAAMqI,QACpBC,eAAe,EACfC,GAAG,QACHC,QAAS,WACP,EAAKC,SAAQ,IAEfC,OAAQ,WACN,EAAKD,SAAQ,IAEfN,KAAMpI,KAAKhF,MAAMoN,KACjBQ,QAAS5I,KAAKC,MAAM2I,c,GApBRzI,aAAdgI,GAwBGU,aAAe,CACpBR,SAAS,GAIEF,UCpBTW,G,2MACJ9N,MAAQ,CAAE+N,YAAa,EAAGC,cAAe,M,mFAEvChJ,KAAKS,SAAS,CAAEsI,YAAa/I,KAAKC,MAAMI,e,2CAGxCL,KAAKiJ,oB,wCAIL,IAAMC,EAAWlJ,KAAKC,MAAM7D,QAAQyJ,SAASsD,KAC7C,GAAID,IAAalJ,KAAKhF,MAAMgO,gBAC1BhJ,KAAKS,SAAS,CAAEuI,cAAeE,IAC3BA,GAAYA,EAASzJ,OAAS,GAAG,CACnC,IAAMb,EAAOwK,SAASC,cAAcH,GACpCtK,GAAQA,EAAK0K,oB,yCAMjB,OAAOtJ,KAAKC,MAAMsJ,cAAcnM,KAAI,SAAA9B,GAClC,OAAIA,EAAOkC,KAAK0B,aAAc,IAAIzB,MAAOyB,UAChC,CACLgB,MAAO8G,KAAW1L,EAAOkC,KAAM,UAC/BE,MAAOpC,EAAOA,QAIT,CACL4E,MAAO8G,KAAW1L,EAAOkC,KAAM,YAC/BE,MAAOpC,EAAOA,a,+BAKZ,IAAD,OACP,OACE,6BACE,yBAAKyE,UAAU,UAAU9F,GAAG,kBAC1B,8CACA,kBAAC,GAAD,CACEuP,gBAAiBxJ,KAAKC,MAAM7E,aAAagC,KAAI,SAAAqM,GAC3C,OAAOA,EAASjM,WAItB,yBAAKuC,UAAU,UAAU9F,GAAG,eAC1B,2CACA,kBAAC6N,GAAD,CACE7J,KAAM,CACJpB,MAAO,SACPgK,OAAQ7G,KAAK0J,oBAEfzB,gBAAgB,OAChBC,YAAY,SAEd,kBAAC,GAAD,CACEU,QACE,4BAAQ7I,UAAU,2BAChB,uBAAGA,UAAU,eAGjBuI,QACE,6BACE,yBAAKvI,UAAU,0BACb,2BACE5G,KAAK,SACLwQ,KAAK,MACLjM,MAAOsC,KAAKhF,MAAM+N,YAClBa,SAAU,SAAAC,GAAG,OACX,EAAKpJ,SAAS,CAAEsI,YAAac,EAAIC,OAAOpM,SAE1CqM,UAAW,SAAAF,GACW,KAAhBA,EAAIG,SACN,EAAK/J,MAAM3F,UAAU,EAAKU,MAAM+N,cAGpCkB,YAAY,iBAEd,yBAAKlK,UAAU,kBAAf,OAEF,4BACEA,UAAU,YACVkC,QAAS,kBAAM,EAAKhC,MAAM3F,UAAU,EAAKU,MAAM+N,eAFjD,YAUR,yBAAKhJ,UAAU,UAAU9F,GAAG,cAC1B,0CACA,kBAAC,GAAD,Y,GA9FakG,aAmHRgC,gBAdS,SAAAnH,GACtB,IAAIqF,EAAa,GAMjB,OALIrF,EAAMmB,SAASC,QAAQd,OAAON,EAAMmB,SAASC,QAAQd,OAAOmE,OAAS,KACvEY,EACErF,EAAMmB,SAASC,QAAQd,OAAON,EAAMmB,SAASC,QAAQd,OAAOmE,OAAS,GAClEnE,QAEA,CACLF,aAAcJ,EAAMmB,SAASC,QAAQhB,aACrCmO,cAAevO,EAAMmB,SAASC,QAAQd,OACtC+E,gBAIoC,CAAE/F,aAA3B6H,CAAwC2G,ICrHjDoB,G,4LAEiB,IAAD,OAClB,OAAKlK,KAAKC,MAAMoF,eAId,yBAAKtF,UAAU,4CACb,yBACEA,UAAU,YACVkC,QAAS,kBAAM,EAAKhC,MAAM7D,QAAQoI,KAAK,wBAEvC,uBAAGzE,UAAU,uBAJf,mBAMA,yBAAKA,UAAU,yBAAf,MACA,yBAAKA,UAAU,cACb,4BACEA,UAAU,YACVkC,QAAS,WACP,EAAKhC,MAAM7D,QAAQoI,KACjB,mBAAqB,EAAKvE,MAAMoF,eAAepL,MAInD,uBAAG8F,UAAU,cARf,WAWA,yBAAKA,UAAU,OACf,4BACEA,UAAU,qBACVkC,QAAS,kBAAM,EAAKhC,MAAM7D,QAAQoI,KAAK,qBAEvC,uBAAGzE,UAAU,cAJf,YAbF,eAsBCC,KAAKC,MAAMoF,eAAexI,OAjCtB,kBAAC,IAAD,CAAU2I,GAAG,yB,+BAsCtB,OACE,6BACE,yBAAKzF,UAAU,SACb,yBAAKA,UAAU,WAAf,kBAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,8BACb,kBAAC,GAAD,CACE6I,QACE,yBAAK7I,UAAU,iBACb,uBAAGA,UAAU,gBACb,yDAGJuI,QAAStI,KAAKmK,oBACd9B,SAAS,W,GA5DJlI,aAkFJgC,gBAbS,SAAAnH,GAMtB,OALAA,EAAMiB,QAAQF,KAAO,IAKd,CACLsJ,eALqB9G,EACrBvD,EAAMmB,SAASE,SACfrB,EAAMiB,QAAQN,SAIdX,QACAhB,SAAUgB,EAAMmB,SAASG,UAAU,MAIxB6F,CAAyB+H,I,2kBCzFlCE,G,2MACJC,aAAe,CACbC,OAAQ,SAAAC,GAAQ,aACXA,EADW,CAEdC,SAAU,OACVC,WAAY,OACZC,MAAO,SACJ,EAAKzK,MAAM0K,YAAYJ,WAE5BK,QAAS,SAAAL,GAAQ,WACfC,SAAU,OACVC,WAAY,QACTF,EAHY,GAIZ,EAAKtK,MAAM0K,YAAYC,UAE5BC,YAAa,sBACXL,SAAU,OACVC,WAAY,QACT,EAAKxK,MAAM0K,YAAYE,e,wEAGpB,IAAD,OACP,OACE,6BACE,kBAAC,KAAD,CACEC,QAAS9K,KAAKC,MAAM6K,QACpB7D,OAAQjH,KAAKqK,aACbU,QAAS/K,KAAKC,MAAM8K,QACpBC,eAAgBhL,KAAKC,MAAMgL,SAC3BrB,SAAU,SAAAV,GACJ,EAAKjJ,MAAM2J,WACTlJ,MAAMwK,QAAQhC,GAChB,EAAKjJ,MAAM2J,SAASV,GACXA,EACT,EAAKjJ,MAAM2J,SAASV,EAASxL,OAG7B,EAAKuC,MAAM2J,SAAS,QAI1BlM,MAAOsC,KAAKC,MAAMvC,MAClByN,iBAAkB,iBAChB,8D,GA3CWhL,aAAjBiK,GAiDGvB,aAAe,CACpB8B,YAAa,IAIFP,U,UClDTgB,GAAU,SAACjM,EAAMkM,EAAYC,GACjC,IAAMC,EAAS7K,MAAMC,KAAKxB,GADoB,EAE5BoM,EAAOvO,OAAOqO,EAAY,GAArCG,EAFuC,oBAK9C,OAFAD,EAAOvO,OAAOsO,EAAU,EAAGE,GAEpBD,GAGM,SAASE,GAAgBxL,GACtC,OACE,kBAAC,KAAD,CACEyL,UAAW,SAAAH,GAET,GAAKA,EAAOI,YAAZ,CAKA,IAAMC,EAAQR,GACZnL,EAAM2L,MACNL,EAAOM,OAAOvS,MACdiS,EAAOI,YAAYrS,OAIrB2G,EAAMyL,UAAUE,EAAMxO,KAAI,SAAA0O,GAAC,OAAIA,EAAE7R,UAGnC,kBAAC,KAAD,CAAW8R,YAAY,cACpB,SAAAxB,GAAQ,OACP,yCAASA,EAASyB,eAAlB,CAAkCC,IAAK1B,EAAS2B,WAC7CjM,EAAM2L,MAAMxO,KAAI,SAACiC,EAAM/F,GAAP,OACf,kBAAC,KAAD,CACEqE,IAAK,GAAK0B,EAAKpF,GAAKX,EACpB6S,YAAa,GAAK9M,EAAKpF,GAAKX,EAC5BA,MAAOA,IAEN,SAAAiR,GAAQ,OACP,uCACE0B,IAAK1B,EAAS2B,UACV3B,EAAS6B,eACT7B,EAAS8B,iBAEZhN,EAAKiJ,eAKbiC,EAASN,iBCpDtB,IAceqC,GAdE,SAAArM,GACf,OACE,kBAAC,KAAD,CAAkBxB,KAAMwB,EAAMsM,QAC5B,kBAAC,KAAiB7G,KAAlB,KACGzF,EAAM2L,MAAMxO,KAAI,SAAAiC,GAAI,OACnB,kBAAC,KAAiB4G,KAAlB,CAAuBtI,IAAK0B,EAAKpF,IAC9BoF,EAAK3C,Y,ikBCcZ8P,G,2MACJxR,MAAQ,CACNkO,SAAU,KACVvN,QAAS,CAAE1B,IAAK,EAAG4C,MAAO,KAAMP,UAAW,IAC3CrC,GAAI2D,SAAS,EAAKqC,MAAMwM,MAAMC,OAAOzS,IACrC4C,MAAO,M,mFAIPmD,KAAK2M,gB,oCAIqB,MAAtB3M,KAAKC,MAAMtE,SACbqE,KAAKC,MAAM7D,QAAQoI,KAAK,wB,yCAIToI,EAAGC,GACM,MAAtB7M,KAAKC,MAAMtE,SAAkD,OAA/BqE,KAAKC,MAAMwM,MAAMC,OAAOzS,IACxD+F,KAAKC,MAAM7D,QAAQoI,KAAK,wB,oDAIEU,EAAgBhI,GAC5C,IAAI4P,EAAkB9M,KAAKC,MAAMtE,QAAQW,UAAUc,KAAI,SAACG,EAAIjE,GAC1D,OAAIA,IAAU4L,EACL3H,EAEA,CAAEtD,GAAIsD,EAAGtD,GAAIiD,eAGxB8C,KAAKC,MAAM8M,YAAY/M,KAAKC,MAAMtE,QAAQ1B,GAAI,CAC5CqC,UAAWwQ,M,2CAMO,IAAD,OACnB,OACE,yBAAK/M,UAAU,SACb,kBAAC0L,GAAD,CACEC,UAAW,SAAAsB,GACT,IAAMC,EAAWD,EAAW5P,KAAI,SAAAnD,GAAE,OAChC,EAAKgG,MAAMtE,QAAQW,UAAUQ,MAAK,SAAAS,GAAE,OAAIA,EAAGtD,KAAOA,QAEpD,EAAKgG,MAAM8M,YAAY,EAAK9M,MAAMtE,QAAQ1B,GAAI,CAC5CqC,UAAW2Q,IAEb,EAAKN,eAEPf,MAAO5L,KAAKC,MAAMtE,QAAQW,UACvBc,KAAI,SAACG,EAAIjE,GAER,IAAMU,EAAWuE,EAAS,EAAK0B,MAAMiN,eAAgB3P,EAAGtD,IACxD,OAAID,EAEK,CACLsO,QACE,yBACEvI,UAAU,uCACVpC,IAAK,GAAK3D,EAASC,GAAKX,GAExB,yBAAKyG,UAAU,WACb,yBAAKA,UAAU,qBAAqB/F,EAAS0C,MAC7C,yBAAKqD,UAAU,oBACb,yBAAKA,UAAU,+BACb,2BACE5G,KAAK,SACLuE,MACiB,MAAfH,EAAGL,SACClD,EAASkD,SACTK,EAAGL,SAET0M,SAAU,SAAAC,GAAG,OACX,EAAKsD,8BACH7T,EACAsE,SAASiM,EAAIC,OAAOpM,WAI1B,yBAAKqC,UAAU,kBAAf,aAGJ,yBAAKA,UAAU,mBACb,uBACEA,UAAU,kBACVkC,QAAS,kBACP,EAAKhC,MAAM7D,QAAQoI,KACjB,aAAexK,EAASC,QAKhC,yBAAK8F,UAAU,mBACb,uBACEA,UAAU,6BACVkC,QAAS,kBACP,EAAKhC,MAAMmN,0BACT9T,EACA,EAAK2G,MAAMtE,QAAQ1B,UAQjCA,GAAIsD,EAAGtD,IAGF,CAAEqO,QAAS,8BAAarO,IAAK,MAGvC0C,QAAO,SAAAiC,GAAI,YAAa9C,IAAT8C,OAEnBoB,KAAKqN,4B,+CAIc,IAAD,OACvB,OACE,yBAAKtN,UAAU,wCACb,kBAAC,GAAD,CACEgL,QAAS/K,KAAKC,MAAMiN,eAAe9P,KAAI,SAAApD,GACrC,MAAO,CACL0D,MAAO1D,EAASC,GAChBiG,MACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,sBAAsB/F,EAAS0C,MAC9C,yBAAKqD,UAAU,mBACb,uBACEA,UAAU,uBACVkC,QAAS,SAAA4H,GACPA,EAAIyD,kBACJ,EAAKrN,MAAMpG,eAAeG,EAASC,aAQjD2P,SAAU,SAAAV,GAER,EAAKjJ,MAAMsN,qBAAqBrE,EAAU,EAAKjJ,MAAMtE,QAAQ1B,KAE/DgR,SAAU,SAAA/B,GAER,IAAM/C,EAAmB1J,GAAM,EAAKwD,MAAMiN,gBAC1C,EAAKjN,MAAMtG,YAAYuP,GACvB,EAAKjJ,MAAMsN,qBACTpH,EACA,EAAKlG,MAAMtE,QAAQ1B,IAGrB,EAAKgG,MAAM7D,QAAQoI,KAAK,oBAAsB2B,IAEhDwE,YAAa,CACXC,QAAS,CACP3C,gBAAiB,UACjBuF,OAAQ,wB,8CAOK,IAAD,OAChBC,EAAkBzN,KAAKC,MAAMtE,SAAW,CAC5CkB,MAAO,qCAET,OACE,kBAAC,GAAD,CACEkO,QAAS/K,KAAKC,MAAMyN,cAActQ,KAAI,SAAAzB,GACpC,MAAO,CACL+B,MAAO/B,EAAQ1B,GACfiG,MACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,sBAAsBpE,EAAQkB,OAC7C,yBAAKkD,UAAU,mBACb,uBACEkC,QAAS,SAAA4H,GACPA,EAAIyD,kBACJ,EAAKrN,MAAM0N,cAAchS,EAAQ1B,KAEnC8F,UAAU,+BAOtB6J,SAAU,SAAAV,GACH,EAAKlO,MAAM4S,eACd,EAAK3N,MAAM7D,QAAQoI,KAAK,mBAAqB0E,IAGjDxL,MAAO,CACLA,MAAO+P,EAAgB5Q,MACvBqD,MAAOuN,EAAgB5Q,OAEzBoO,SAAU,SAAA4C,GACR,EAAK5N,MAAM6N,WAAWD,GACtB,EAAK5N,MAAM7D,QAAQoI,KACjB,YAAc/H,GAAM,EAAKwD,MAAMyN,qB,sCAMzBvU,EAAMoT,GAAS,IAAD,OAGtBpN,EAAO,CACX3C,UAAWwD,KAAKC,MAAM8N,eACtBxR,QAASyD,KAAKC,MAAM+N,cAEhBC,EAAMjO,KAAKC,MAAMtE,QAAQW,UAAUc,KAAI,SAAAG,GAG3C,OAFiBgB,EAAS,EAAK0B,MAAMiN,eAAgB3P,EAAGtD,IAExCd,MAGZ+U,EAAYxO,GAAO,GAAGyO,OAAOnM,MAAM,GAAIiM,IAC7C,OAAyB,IAArBC,EAAUzO,OACL,mCAAS8M,EAAO6B,eAGvB,kBAAC,GAAD,CACE7B,OAAQA,EACRX,MAAOsC,EAAU9Q,KAAI,SAAAnD,GAAE,OAAIsE,EAASY,EAAKhG,GAAOc,U,+BAI5C,IAAD,OAGP,MAAmC,OAA/B+F,KAAKC,MAAMwM,MAAMC,OAAOzS,GACnB+F,KAAKqO,wBAETrO,KAAKC,MAAMtE,QAKd,6BACE,4BAAKqE,KAAKC,MAAMtE,QAAQkB,OACxB,0BAAMkD,UAAU,WACd,yBAAKA,UAAU,SAIZC,KAAKqO,yBAEsB,OAA7BrO,KAAKC,MAAMtE,QAAQkB,MAAiBmD,KAAKsO,qBAAuB,MACrC,IAA3BtO,KAAKC,MAAMtE,QAAQ1B,GAClB,yBAAK8F,UAAU,uBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,cACZC,KAAKuO,gBAAgB,YAAa,sBAGvC,yBAAKxO,UAAU,oBACb,yBAAKA,UAAU,cACZC,KAAKuO,gBAAgB,UAAW,sBAGrC,yBAAKxO,UAAU,UACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,YAAf,eACA,2BACE5G,KAAK,SACLuE,MAAOsC,KAAKC,MAAMtE,QAAQF,WAAa,KACvCmO,SAAU,SAAAC,GACR,EAAKpJ,SAAS,CACZ9E,QAAQ,MACH,EAAKsE,MAAMtE,QADT,CAELF,UAAWoO,EAAIC,OAAOpM,UAG1B,EAAKuC,MAAM8M,YAAY,EAAK9M,MAAMtE,QAAQ1B,GAA1C,MACK,EAAKgG,MAAMtE,QADhB,CAEEF,UAAWoO,EAAIC,OAAOpM,YAI5B,yBAAKqC,UAAU,kBAAf,WAKN,KACJ,8BAC8B,IAA3BC,KAAKC,MAAMtE,QAAQ1B,GAClB,6BACE,4BACE8F,UACE,oBACCC,KAAKC,MAAMtE,QAAQW,UAAUmD,OAAS,EAAI,GAAK,aAElDwC,QAAS,WACP,EAAKhC,MAAM5G,SAAS,GACpB,EAAK4G,MAAMhH,WAAW,EAAKgH,MAAMtE,QAAQ1B,IACzC,EAAKgG,MAAM7D,QAAQoI,KAAK,qBAR5B,SAaA,4BACEzE,UAAU,gBACVkC,QAAS,SAAA4H,GACPA,EAAI2E,iBAEFxK,OAAOyK,QACL,4DAGF,EAAKxO,MAAM0N,cAAc,EAAK1N,MAAMtE,QAAQ1B,MATlD,WAgBA,QApFH,kBAAC,GAAD,U,GAnPgBkG,aA8VdgC,gBAfS,SAACnH,EAAO0T,GAC9B,IAAMzU,EAAK2D,SAAS8Q,EAASjC,MAAMC,OAAOzS,IACpC0B,EAAU4C,EAASvD,EAAMmB,SAASE,SAAUpC,GAClD,MAAO,CACLkC,SAAUnB,EAAMmB,SAChBwS,YAAa3T,EAAMmB,SAASE,SAC5BqR,cAAe1S,EAAMmB,SAASE,SAC9B6Q,eAAgBlS,EAAMmB,SAASG,UAC/ByR,eAAgB/S,EAAMmB,SAASK,UAC/BwR,aAAchT,EAAMmB,SAASI,QAC7BqS,iBAAkB5T,EAAMmB,SAASZ,cAAcE,UAC/CE,aAIoC,CACtC1C,aACAU,cACAmU,WxB/TwB,SAAAe,GACxB,MAAO,CAAE1V,KAAM,cAAeC,QAASyV,IwB+TvClB,cxB3T2B,SAAAzU,GAC3B,MAAO,CAAEC,KAAM,iBAAkBC,QAASF,IwB2T1CqU,qBxBvTkC,SAACzT,EAAYZ,GAC/C,MAAO,CACLC,KAAM,0BACNC,QAAS,CAAEU,aAAYZ,ewBqTzBkU,0BxBhTuC,SAACnQ,EAAU/D,GAClD,MAAO,CACLC,KAAM,+BACNC,QAAS,CAAE6D,WAAU/D,ewB8SvBW,iBACAkT,YxB1SyB,SAAC7T,EAAWyC,GACrC,MAAO,CAAExC,KAAM,eAAgBC,QAAS,CAAEF,YAAWyC,awB0SrDpC,eACAF,YAVa8I,CAWZqK,I,oBC3VYsC,G,YA/Bb,WAAY7O,GAAQ,IAAD,8BACjB,4CAAMA,KAFRjF,MAAQ,CAAE+T,MAAO,GAGf,EAAKC,SAAWC,IAAMC,YAFL,E,iFAIE,IAAD,OAClBlP,KAAKgP,SAAS/S,QAAQgI,iBAAiB,QAAQ,kBAAM,EAAKkL,gB,iCAK1D,GAAInP,KAAKgP,SAAS/S,QAAS,CACzB,IAAM8S,EAAQjO,KAAKsO,KAAKpP,KAAKgP,SAAS/S,QAAQoT,aAAe,IAC7DrP,KAAKS,SAAS,CAAEsO,a,+BAGV,IAAD,SACmB/O,KAAKC,MAAMqD,MAA7BE,EADD,EACCA,IAAK8L,EADN,EACMA,SAEb,OACE,yBAAK7I,MAAO,CAAE8I,WAAY,QAAUvP,KAAKhF,MAAM+T,QAC7C,yBACE9C,IAAKjM,KAAKgP,SACVxL,IAAKA,EACLD,IAAK+L,EACLrN,QAAS,kBAAM,EAAKhC,MAAMuP,SAASF,W,GA1BrBL,IAAM9O,WCyOfsP,G,YAzNb,WAAYxP,GAAQ,IAAD,8BACjB,4CAAMA,KAZRjH,QACE,oHAUiB,EATnB0W,UAAY,IASO,EARnB1U,MAAQ,CACN2U,gBAAiB,GACjBC,UAAW,GACXC,eAAgB,KAChBC,WAAY,IAMZ,EAAKd,SAAWC,IAAMC,YAFL,E,iFAMblP,KAAKgP,SAAS/S,SAChB+D,KAAK+P,mB,2CAMH/P,KAAKgP,SAAS/S,UAAY+D,KAAKhF,MAAM8U,WAAWnJ,QAClD3G,KAAK+P,mB,uCAIS,IAAD,OACf/P,KAAKgP,SAAS/S,QAAQgI,iBAAiB,QAAQ,WAAO,IAAD,EACzB,EAAK+K,SAAS/S,QAAhCyK,EAD2C,EAC3CA,MAAOC,EADoC,EACpCA,OACTqJ,GACK,EAAKN,UAAY,EAAKA,WAC3BO,EAAWvJ,GAASsJ,EAAYrJ,GACtC,EAAKlG,SAAS,CAAEqP,WAAY,CAAEnJ,OAAQqJ,EAAWtJ,MAAOuJ,U,4EAIzCC,G,4FAGGpU,IAAhBkE,KAAKmQ,QACPnQ,KAAKmQ,S,kBAGiBrX,IAAMsX,IAAIpQ,KAAKhH,QAAU,UAAYkX,EAAS,CAClEG,YAAa,IAAIvX,IAAMwX,aAAY,SAAAC,GACjC,EAAKJ,OAASI,O,OAFZC,E,OAKAX,EAAiBW,EAAQvS,KAAKwS,QAAQrT,KAAI,SAAAkG,GAC9C,MAAO,CACLE,IAAKF,EAAMoN,gBACXpB,SAAUhM,EAAMqN,KAAKC,QACrB3W,GAAIqJ,EAAMrJ,OAGV+F,KAAKhF,MAAM2U,kBAAoBO,GACjClQ,KAAKS,SAAS,CAAEoP,mB,oMAQP,IAAD,SACgC7P,KAAKhF,MAAzC2U,EADI,EACJA,gBAAiBE,EADb,EACaA,eACzB,GAAIF,EAAiB,CACnB,GAAuB,OAAnBE,EACF,OAAO,kBAAC,GAAD,CAAQhL,QAAS,uBAAyB8K,IAC5C,GAA8B,IAA1BE,EAAepQ,OACxB,OACE,yBAAKM,UAAU,uBACb,yBAAKA,UAAU,UAAf,wBACwB4P,EADxB,KADF,kCAQF,IAAMkB,EAAYhB,EAAezS,KAAI,SAAAkG,GAAK,OACxC,kBAAC,GAAD,CACE3F,IAAK2F,EAAMrJ,GACXqJ,MAAOA,EACPkM,SAAU,SAAAlM,GACR,EAAK7C,SAAS,CAAEqP,WAAY,KAC5B,EAAK7P,MAAM2J,SAAS,CAClBE,OAAQ,CACNpM,MAAO,CACLoT,WAAW,EACXC,SAAUzN,GAEZ5G,KAAM,iBAMhB,OAAO,yBAAKqD,UAAU,cAAc8Q,GAGtC,OAAO,kE,+BAGD,IAAD,SAC8B7Q,KAAKC,MAAMvC,MAAxCoT,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUvN,EADtB,EACsBA,IADtB,EAEgCxD,KAAKhF,MAApC2U,EAFD,EAECA,gBAAiBC,EAFlB,EAEkBA,UAEzB,OAAIkB,EAEA,yBACE/Q,UAAU,wCACV0G,MAAOzG,KAAKhF,MAAM8U,YAElB,uBACE/P,UAAU,gCACViR,KAAK,eACL/O,QAAS,SAAA4H,GAAG,OAAIA,EAAI2E,mBAEpB,uBACEzO,UAAU,aACVkC,QAAS,kBACP,EAAKhC,MAAM2J,SAAS,CAClBE,OAAQ,CACNpM,MAAO,CACLoT,WAAW,GAEbpU,KAAM,eAMhB,yBAAK6G,IAAKwN,EAAUvN,IAAK,YAAcA,EAAKyI,IAAKjM,KAAKgP,YASxD,6BACE,yBAAKjP,UAAU,0BACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,2BAAOkR,QAAQ,YAAf,wBACA,2BACEhX,GAAG,WACHyD,MAAOkS,EACPhG,SAAU,SAAAsH,GACR,EAAKzQ,SAAS,CAAEmP,UAAWsB,EAAMpH,OAAOpM,SAE1CyT,QAAS,kBACP,EAAK1Q,SAAS,CAAE2Q,sBAAsB,KAExCC,OAAQ,kBACN,EAAK5Q,SAAS,CAAE2Q,sBAAsB,KAExCrH,UAAW,SAAAzM,GACK,UAAVA,EAAEK,MACJL,EAAEkR,iBAEF,EAAKvO,MAAM2J,SAAS,CAClBE,OAAQ,CACNpM,MAAO,CACLoT,WAAW,EACXC,SAAUnB,GAEZlT,KAAM,WAGV,EAAK+D,SAAS,CAAEmP,UAAW,SAIhC5P,KAAKhF,MAAMoW,qBACV,yBAAKrR,UAAU,qBAAf,4BAGE,OAGR,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,SACb,2BAAOkR,QAAQ,iBAAf,2BACA,kBAAC,KAAD,CACEvK,MAAM,QACN4K,aAAc,CAAE5K,MAAO,SACvBkC,QACE,2BACEzP,KAAK,OACLc,GAAG,gBACHyD,MAAOiS,EACP/F,SAAU,SAAAsH,GACR,EAAKK,aAAaL,EAAMpH,OAAOpM,OAE/B,EAAK+C,SAAS,CACZkP,gBAAiBuB,EAAMpH,OAAOpM,SAGlCqM,UAAW,SAAAzM,GACK,UAAVA,EAAEK,MACJL,EAAEkR,iBACF,EAAK+C,aAAa,EAAKvW,MAAM2U,mBAGjC6B,aAAa,QAGjBhJ,GAAG,SAEFxI,KAAKyR,kBAKd,yBAAK1R,UAAU,uBAAf,Y,GA7NeI,aCoEZuR,GAzEc,SAAAzR,GAE3B,IAAMlH,EAAS,CACbwD,QAAS0D,EAAM0R,aACfnV,UAAWyD,EAAM2R,iBAEbC,EAAS,CACbtV,QAAS0D,EAAM6R,aACftV,UAAWyD,EAAM8R,iBAEnB,OACE,yBAAKhS,UAAU,SACb,+BAAQE,EAAM9G,KAAd,KACA,kBAAC,GAAD,CACE2R,SAAO,EACPG,SAAU,SAAAvO,GACR,IAAMsV,EAAQvV,GAAMwD,EAAMA,EAAM9G,OAChCJ,EAAOkH,EAAM9G,MAAMuD,GACnBuD,EAAMgS,aAAa,CACjBnI,OAAQ,CACNpM,MAAM,GAAD,mBACAuC,EAAM4G,OAAO5G,EAAM9G,OADnB,CAEH,CAAEuE,MAAOsU,EAAO9R,MAAOxD,KAEzBA,KAAMuD,EAAM9G,SAIlByQ,SAAU,SAAAC,GACR5J,EAAMgS,aAAa,CACjBnI,OAAQ,CACNpM,MAAOmM,EACPnN,KAAMuD,EAAM9G,SAIlBuE,OAAQuC,EAAM4G,OAAO5G,EAAM9G,OAAS,IAAIiE,KAAI,SAAAwB,GAC1C,IAAIX,EAAOgC,EAAMA,EAAM9G,MAAM2D,MAAK,SAAAQ,GAAC,OAAIA,EAAErD,KAAO2E,EAAKlB,SAEjDwC,EAAQ,GAKZ,OAJIjC,IACFiC,EAAQjC,EAAKvB,MAGR,CACLgB,MAAOkB,EAAKlB,MACZwC,MAAOA,MAGX6K,SAAU9K,EAAMA,EAAM9G,OAAS,IAAIiE,KAAI,SAAAwB,GACrC,MAAO,CACLlB,MAAOkB,EAAK3E,GACZiG,MACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,sBAAsBnB,EAAKlC,MAC1C,yBAAKqD,UAAU,mBACb,uBACEkC,QAAS,SAAA4H,GACPA,EAAIyD,kBACJuE,EAAO5R,EAAM9G,MAAMyF,EAAK3E,KAE1B8F,UAAU,mCC3CxBmS,G,2MACJlX,MAAQ,CAAEmX,aAAa,EAAOvY,aAAc,I,mFAE1CoK,OAAOC,iBAAiB,eAAgBjE,KAAK8D,aAAavC,KAAKvB,S,mCAEpD1C,GACP0C,KAAKhF,MAAMmX,c,6CAIfnS,KAAKS,SAAS,CAAE0R,aAAa,IAC7BnO,OAAOE,oBAAoB,eAAgBlE,KAAK8D,aAAavC,KAAKvB,S,+BAE1D,IAAD,SAQHA,KAAKC,MAAMjG,SANb0C,EAFK,EAELA,KACAQ,EAHK,EAGLA,SACAuG,EAJK,EAILA,YACAH,EALK,EAKLA,MACA/G,EANK,EAMLA,QACAC,EAPK,EAOLA,UAEF,OACE,yBAAKyP,IAAK,SAAArN,GAAI,OAAK,EAAKwT,KAAOxT,IAC7B,kBAAC,IAAD,CACEyT,KAAMrS,KAAKhF,MAAMmX,YACjBtN,QAAS,+DAEX,kBAAC,KAAD,CACEyN,kBAAgB,EAChBC,oBAAkB,EAClBC,cAAe,CACb9V,KAAMA,EAAK+V,WAAW,oBAAsB,GAAK/V,EACjDQ,SAAUA,GAAY8C,KAAKC,MAAMyS,SAASlX,kBAAoB,KAC9DiI,YAAaA,GAAe,GAC5BlH,SAAUA,GAAW,IAAIa,KAAI,SAAAuV,GAC3B,IAAMjW,EAAO,EAAKuD,MAAM1D,QAAQO,MAC9B,SAAAF,GAAM,OAAIA,EAAO3C,KAAO0Y,KAG1B,MAAO,CAAEjV,MAAOiV,EAAUzS,MAAOxD,MAEnCF,WAAYA,GAAa,IAAIY,KAAI,SAAAwV,GAC/B,IAAMlW,EAAO,EAAKuD,MAAMzD,UAAUM,MAChC,SAAAN,GAAS,OAAIA,EAAUvC,KAAO2Y,KAGhC,MAAO,CAAElV,MAAOkV,EAAa1S,MAAOxD,MAEtC4G,MAAO,CACLwN,UAAoB,MAATxN,EACXyN,SAAUzN,GAAS,GACnBE,IAAK9G,EACLiT,gBAAiB,GACjBC,UAAW,KAGfiD,SAAU,SAAAhM,GACR,EAAKpG,SAAS,CAAE0R,aAAa,EAAMvY,aAAciN,EAAOnK,OACxD,IAAMoW,EAAS,GASf,MARoB,KAAhBjM,EAAOnK,OACToW,EAAOpW,KAAO,uBAEXmK,EAAO3J,SAED2J,EAAO3J,UAAY,IAC5B4V,EAAO5V,SAAW,+BAFlB4V,EAAO5V,SAAW,0BAIb4V,GAETC,SAAU,SAAAlM,GACR,EAAKpG,SAAS,CAAE0R,aAAa,IADX,IAGhBzV,EAMEmK,EANFnK,KACAQ,EAKE2J,EALF3J,SACAuG,EAIEoD,EAJFpD,YACAH,EAGEuD,EAHFvD,MACA/G,EAEEsK,EAFFtK,QACAC,EACEqK,EADFrK,UAEF,EAAKyD,MAAMlG,aACT,CACE2C,OACAQ,WACAuG,cACAlH,SAAUA,GAAW,IAAIa,KAAI,SAAAW,GAAC,OAAIA,EAAEL,SACpClB,WAAYA,GAAa,IAAIY,KAAI,SAAAE,GAAC,OAAIA,EAAEI,SACxC4F,MAAOA,EAAMwN,UAAYxN,EAAMyN,SAAW,MAE5C,EAAK9Q,MAAMjG,SAASC,IAGtB,EAAKgG,MAAM+S,UAGZ,YAOM,IANLnM,EAMI,EANJA,OACAiM,EAKI,EALJA,OACAG,EAII,EAJJA,QACAhB,EAGI,EAHJA,aACAiB,EAEI,EAFJA,WACAC,EACI,EADJA,aAEA,OACE,0BACEpT,UAAU,UACVgT,SAAUI,EACVC,WAAY,SAAAvJ,GACQ,KAAdA,EAAIwJ,OACNxJ,EAAI2E,mBAIR,yBAAKzO,UAAU,kBACb,wCACA,2BACEuT,UAA2B,KAAhBzM,EAAOnK,KAClBvD,KAAK,OACLuD,KAAK,OACLuN,YAAY,gBACZL,SAAUqI,EACVZ,OAAQ6B,EACRxV,MAAOmJ,EAAOnK,OAEfoW,EAAOpW,MAAQuW,EAAQvW,MACtB,yBAAKqD,UAAU,cAAc+S,EAAOpW,OAGxC,yBAAKqD,UAAU,kBACb,gDACA,2BACEuT,UAA2B,KAAhBzM,EAAOnK,MAAemK,EAAO3J,UAAY,EACpD/D,KAAK,SACLuD,KAAK,WACLuN,YAAY,sBACZL,SAAUqI,EACVZ,OAAQ6B,EACRxV,MAAOmJ,EAAO3J,WAEf4V,EAAO5V,UAAY+V,EAAQ/V,UAC1B,yBAAK6C,UAAU,cAAc+S,EAAO5V,WAGxC,kBAAC,GAAD,iBACM,EAAK+C,MADX,CAEE9G,KAAK,UACL8Y,aAAcA,EACdpL,OAAQA,KAEV,kBAAC,GAAD,iBACM,EAAK5G,MADX,CAEE9G,KAAK,YACL8Y,aAAcA,EACdpL,OAAQA,KAEV,yBAAK9G,UAAU,SACb,+CACA,8BACErD,KAAK,cACLkN,SAAUqI,EACVvU,MAAOmJ,EAAOpD,eAGlB,yBAAK1D,UAAU,SACb,yCACA,kBAAC,KAAD,CACEwT,GAAIC,GACJ5J,SAAUqI,EACVvV,KAAK,QACLqD,UAAU,iBAGd,4BACE5G,KAAK,SACL4G,UACE,cACC+S,EAAOpW,MAAQoW,EAAO5V,SAAW,WAAa,OAJnD,QASA,4BACE6C,UAAU,YACVkC,QAAS,SAAA4H,GACPA,EAAI2E,iBACJ,EAAKvO,MAAM+S,SAJf,UASA,4BACE7Z,KAAK,SACL4G,UAAU,gBACVkC,QAAS,WAEL+B,OAAOyK,QACL,0DAGF,EAAKhO,SAAS,CAAE0R,aAAa,IAC7B,EAAKlS,MAAMpG,eAAe,EAAKoG,MAAMjG,SAASC,IAC9C,EAAKgG,MAAM+S,UAXjB,4B,GA9LW7S,aA+NZgC,gBAPS,SAAAnH,GACtB,MAAO,CACL0X,SAAU1X,EAAMmB,SAASZ,cACzBgB,QAASvB,EAAMmB,SAASI,QACxBC,UAAWxB,EAAMmB,SAASK,aAGU,CACtCzC,eACA4X,a5BjN0B,SAAA8B,GAC1B,MAAO,CAAEta,KAAM,gBAAiBC,QAASqa,I4BiNzC3B,a5B7M0B,SAAA7X,GAC1B,MAAO,CAAEd,KAAM,gBAAiBC,QAASa,I4B6MzC2X,gB5BzM6B,SAAA8B,GAC7B,MAAO,CAAEva,KAAM,mBAAoBC,QAASsa,I4ByM5C3B,gB5BrM6B,SAAA9X,GAC7B,MAAO,CAAEd,KAAM,mBAAoBC,QAASa,I4BqM5CJ,kBANasI,CAOZ+P,ICjPGyB,G,2MACJ3Y,MAAQ,CAAEhB,SAAU,M,mFAElBgG,KAAK4T,YAAY5T,KAAKC,MAAMwM,MAAMC,OAAOzS,M,yCAExBgL,EAAW4H,GAC5B,IAAM5S,EAAK2D,SAASoC,KAAKC,MAAMwM,MAAMC,OAAOzS,IACxC4S,EAAU5S,KAAOA,GACnB+F,KAAK4T,YAAY3Z,K,kCAKTA,GACV,IAAMD,EAAWgG,KAAKC,MAAM3D,UAAUQ,MAAK,SAAAS,GAAE,OAAIA,EAAGtD,KAAO2D,SAAS3D,MAC/DD,GAGLgG,KAAKS,SAAS,CACZxG,KACAD,e,+BAGM,IAAD,OAEP,MAAmC,WAA/BgG,KAAKC,MAAMwM,MAAMC,OAAOzS,GAEnB,KAEJ+F,KAAKhF,MAAMhB,UAAa6H,MAAM7B,KAAKC,MAAMwM,MAAMC,OAAOzS,IA4CzD,kBAAC,GAAD,CACED,SAAUgG,KAAKhF,MAAMhB,SACrBgZ,KAAMhT,KAAKC,MAAM7D,QAAQyX,OAAOtS,KAAKvB,QA5CrC,6BACE,yBAAKD,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mDAAf,iCAIF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,4BACEA,UAAU,YACVkC,QAAS,WACP,EAAKhC,MAAM7D,QAAQyX,WAGrB,uBAAG9T,UAAU,qCANf,SAUF,yBAAKA,UAAU,uBACb,4BACEA,UAAU,YACVkC,QAAS,WACP,IAAMkE,EAAmB1J,GAAM,EAAKwD,MAAM3D,WAC1C,EAAK2D,MAAMtG,YAAY,IACvB,EAAKsG,MAAM7D,QAAQoI,KACjB,oBAAsB2B,KAI1B,uBAAGpG,UAAU,qBAVf,wB,GAnDcI,aAuFfgC,gBANS,SAAAnH,GACtB,MAAO,CACLsB,UAAWtB,EAAMmB,SAASG,aAIU,CAAEvC,eAAcJ,eAAzCwI,CACbwR,I,UC/Fa,SAASG,GAAW7T,GACjC,OACE,kBAAC,KAAD,CACE8T,OAAQ,SAAAlK,GACN,IAAMmK,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAEdjU,EAAMkU,aAAaH,EAAOzI,SAE5ByI,EAAOI,WAAWvK,EAAI,OAGvB,gBAAGwK,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,uCAAKvU,UAAU,aAAgBsU,KAC7B,0BAAWC,KACVrU,EAAMwD,gBCoBF8Q,OArCf,SAAyBtU,GACvB,IAAMuU,EAAkB,SAAA3K,GACtB5J,EAAMuU,gBAAgB3K,EAAIC,OAAOpM,MAAOmM,EAAIC,OAAOpN,OAErD,OACE,yBAAKqD,UAAU,WACb,wCACA,0BAAMA,UAAU,WACd,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,qDACA,yBAAKA,UAAU,YACb,2BACErD,KAAK,mBACLvD,KAAK,SACLuE,MAAOuC,EAAM1E,cAAcC,iBAC3BoO,SAAU,SAAAC,GAAG,OAAI2K,EAAgB3K,QAIvC,yBAAK9J,UAAU,SACb,8CACA,yBAAKA,UAAU,YACb,2BACErD,KAAK,YACLvD,KAAK,SACLuE,MAAOuC,EAAM1E,cAAcE,UAC3BmO,SAAU,SAAAC,GAAG,OAAI2K,EAAgB3K,YCPlC4K,OAnBf,SAAwBxU,GACtB,IAAMyU,EACJ,2BACAC,mBAAmBja,KAAKO,UAAUgF,EAAM9D,WAC1C,OACE,yBAAK4D,UAAU,cACb,uEACA,uBACEA,UAAU,YACViR,KAAM,SAAW0D,EACjBE,SAAS,oBACT/X,MAAM,kCAJR,c,6jBCRN,IAsCegY,GAtCa,SAAA5U,GAC1B,OACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,sBACb,2BACE5G,KAAK,WACL2b,QACE7U,EAAM8U,aACF9U,EAAM4G,OAAOzK,QAAQ6D,EAAMC,MAAMkO,eACjCnO,EAAM4G,OAAO5G,EAAMC,MAAMkO,eAE/BxE,SAAU,SAAAC,GACJ5J,EAAM8U,aACR9U,EAAMQ,SAAS,CACbuU,OAAO,MACF/U,EAAM4G,OADL,CAEJzK,QAAQ,MACH6D,EAAM4G,OAAOzK,QADX,eAEJ6D,EAAMC,MAAMkO,cAAgBvE,EAAIC,OAAOgL,cAK9C7U,EAAMQ,SAAS,CACbuU,OAAO,MACF/U,EAAM4G,OADL,eAEH5G,EAAMC,MAAMkO,cAAgBvE,EAAIC,OAAOgL,eAMlD,+BAAQ7U,EAAMC,U,ikBC5BhB+U,G,2MACJja,MAAQ,CACNga,OAAQ,CACN1Y,WAAW,EACXD,UAAU,EACVE,SAAS,EACTC,WAAW,EACXJ,QAAS,CACPC,UAAU,EACVf,QAAQ,EACR,iBAAiB,K,yEAIbuO,GACRA,EAAI2E,iBAEFxK,OAAOyK,QAAQ,4DAEfzO,KAAKC,MAAMiV,UAAUlV,KAAKhF,MAAMga,U,+BAG1B,IAAD,OACP,OACE,yBAAKjV,UAAU,cACb,4CACA,0BAAMA,UAAU,WACd,yBAAKA,UAAU,kBACb,kBAAC,GAAD,CACEU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,YACP2G,OAAQ7G,KAAKhF,MAAMga,SAErB,kBAAC,GAAD,CACEvU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,WACP2G,OAAQ7G,KAAKhF,MAAMga,SAErB,kBAAC,GAAD,CACEvU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,UACP2G,OAAQ7G,KAAKhF,MAAMga,SAErB,kBAAC,GAAD,CACEvU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,YACP2G,OAAQ7G,KAAKhF,MAAMga,UAGvB,yBAAKjV,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,sBACb,2BACE5G,KAAK,WACL2b,QACE9U,KAAKhF,MAAMga,OAAO5Y,QAAQC,UAC1B2D,KAAKhF,MAAMga,OAAO5Y,QAAQd,QAC1B0E,KAAKhF,MAAMga,OAAO5Y,QAAQ,iBAE5BwN,SAAU,SAAAC,GAAG,OACX,EAAKpJ,SAAS,CACZuU,OAAO,MACF,EAAKha,MAAMga,OADV,CAEJ5Y,QAAS,CACPC,SAAUwN,EAAIC,OAAOgL,QACrBxZ,OAAQuO,EAAIC,OAAOgL,QACnB,gBAAiBjL,EAAIC,OAAOgL,gBAMtC,4CAEF,yBAAK/U,UAAU,iBACb,kBAAC,GAAD,CACEgV,cAAY,EACZtU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,SACP2G,OAAQ7G,KAAKhF,MAAMga,SAErB,kBAAC,GAAD,CACED,cAAY,EACZtU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,WACP2G,OAAQ7G,KAAKhF,MAAMga,SAErB,kBAAC,GAAD,CACED,cAAY,EACZtU,SAAUT,KAAKS,SAASc,KAAKvB,MAC7BE,MAAO,gBACP2G,OAAQ7G,KAAKhF,MAAMga,aAM7B,4BACE7b,KAAK,SACL4G,UAAU,gBACVkC,QAASjC,KAAKkV,UAAU3T,KAAKvB,OAH/B,e,GAjGkBG,aA6GXgC,eAAQ,KAAM,CAAE+S,UlCaN,SAAAC,GACvB,MAAO,CAAEhc,KAAM,aAAcC,QAAS+b,KkCdzBhT,CAA6B8S,ICxGtCG,G,2MACJpa,MAAQ,CACNqa,kBAAkB,G,wEAEXxL,GACPA,EAAI2E,iBAEFxK,OAAOyK,QAAQ,6DAEf7T,aAAa0a,QACbtR,OAAO6B,SAAS0P,Y,kCAGRC,GAEV,IACE,IAAIC,EAAO/a,KAAKC,MAAM6a,GACdlZ,EAAiCmZ,EAAjCnZ,UAAWD,EAAsBoZ,EAAtBpZ,SAAUD,EAAYqZ,EAAZrZ,QACzBA,GACFwD,GAAqB6V,EAAKrZ,SAG1BsE,MAAMwK,QAAQ5O,IACdoE,MAAMwK,QAAQ7O,IACdD,GACAsE,MAAMwK,QAAQ9O,EAAQhB,eACe,kBAA9BgB,EAAQf,mBACfqF,MAAMwK,QAAQ9O,EAAQd,UAElB0E,KAAKhF,MAAMqa,iBACbrV,KAAKC,MAAMyV,YAAYD,GAEvBzV,KAAKC,MAAM0V,YAAYF,IAG3B,MAAOG,GACP5V,KAAKS,SAAS,CAAEoV,iBAAkB,8B,+BAI5B,IAAD,OACP,OACE,6BACE,kBAAC,GAAD,CACEta,cAAeyE,KAAKC,MAAM1E,cAC1BiZ,gBAAiBxU,KAAKC,MAAMuU,kBAE9B,yBAAKzU,UAAU,WACb,oCACA,kBAAC,GAAD,CAAgB5D,SAAU6D,KAAKC,MAAM9D,WACrC,yBAAK4D,UAAU,cACb,0DACA,0BAAMA,UAAU,WACd,kBAAC+T,GAAD,CACEK,aAAcnU,KAAK0V,YAAYnU,KAAKvB,MACpCyD,YAAY,kEAEd,6BAAMzD,KAAKhF,MAAM6a,kBACjB,yBAAK9V,UAAU,SACb,yBAAKA,UAAU,eACb,2BACE5G,KAAK,WACL2b,QAAS9U,KAAKhF,MAAMqa,iBACpBzL,SAAU,kBACR,EAAKnJ,SAAS,CACZ4U,kBAAmB,EAAKra,MAAMqa,sBAIpC,yDAKR,yBAAKtV,UAAU,eACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,oBACb,4BACE5G,KAAK,SACL4G,UAAU,oBACVkC,QAASjC,KAAK8V,SAASvU,KAAKvB,OAH9B,sB,GA7ESG,aAmGRgC,gBAPS,SAAAnH,GACtB,MAAO,CACLmB,SAAUnB,EAAMmB,SAChBZ,cAAeP,EAAMmB,SAASZ,iBAIM,CACtCma,YnCsByB,SAAAzX,GACzB,MAAO,CAAE9E,KAAM,gBAAiBC,QAAS6E,ImCtBzCuW,gBnCU6B,SAAC9W,EAAOC,GACrC,MAAO,CAAExE,KAAM,oBAAqBC,QAAS,CAAEuE,MAAKD,WmCVpDiY,YnCyByB,SAAA1X,GACzB,MAAO,CAAE9E,KAAM,gBAAiBC,QAAS6E,KmC7B5BkE,CAIZiT,I,UC/GY,YAAAnV,GACb,OACE,0BAAMF,UAAU,WACbE,EAAM8V,cACL,yBAAKhW,UAAU,SACb,2CACA,kBAAC,KAAD,CACEiW,aAAW,EACXjL,QAAS9K,EAAM/B,UAAUd,KAAI,SAAAwF,GAC3B,MAAO,CACL1C,MACE,yBAAKuG,MAAO,CAAEiE,MAAO,UACnB,uBAAG3K,UAAW6C,EAAKqT,WAAa,UAC/BrT,EAAKsT,WAGVxY,MAAOkF,EAAK3I,OAGhB2P,SAAU,SAAAC,GACI,OAARA,EAEF5J,EAAMkW,UAAU,YAEhBlW,EAAMmW,kBAAkB,WAAYvM,EAAInM,WAK9C,KACJ,yBAAKqC,UAAU,SACb,0CACA,kBAAC,KAAD,CACEiW,aAAW,EACXjL,SAAU9K,EAAM1D,SAAW,IAAIa,KAAI,SAAAR,GACjC,MAAO,CACLsD,MAAO,yBAAKuG,MAAO,CAAEiE,MAAO,UAAY9N,EAAOF,MAC/CgB,MAAOd,EAAO3C,OAGlB2P,SAAU,SAAAC,GACI,OAARA,EAEF5J,EAAMkW,UAAU,WAEhBlW,EAAMmW,kBAAkB,UAAWvM,EAAInM,WAK/C,yBAAKqC,UAAU,SACb,4CACA,kBAAC,KAAD,CACEiW,aAAW,EACXjL,QAAS9K,EAAMzD,UAAUY,KAAI,SAAAZ,GAC3B,MAAO,CACL0D,MAAO,yBAAKuG,MAAO,CAAEiE,MAAO,UAAYlO,EAAUE,MAClDgB,MAAOlB,EAAUvC,OAGrB2P,SAAU,SAAAC,GACI,OAARA,EAEF5J,EAAMkW,UAAU,aAEhBlW,EAAMmW,kBAAkB,YAAavM,EAAInM,WAKjD,yBAAKqC,UAAU,SACb,yCAAeE,EAAMoW,WAAa,0CAAwB,KAA1D,KACA,2BACEld,KAAK,OACL4Q,UAAW,SAAAF,GAAG,OACI,KAAhBA,EAAIG,QACA/J,EAAMmW,kBAAkB,OAAQvM,EAAIC,OAAOpM,OAC3C,W,ikBCvEV4Y,G,2MACJtb,MAAQ,CACNsB,UAAW,KAEXia,eAAgB,CAAEC,OAAQ,GAC1BC,cAAc,G,EAkFhBC,SAAW,SAAA1c,GACT,OAAI,EAAKiG,MAAMoW,WAEX,uBACEtW,UAAU,YACVkC,QAAS,WACP,IAAMkE,EAAmB1J,GAAM,EAAKwD,MAAM3D,WAC1C,EAAK2D,MAAMtG,YAAY,IACvB,EAAKsG,MAAMlG,aACT,CACE2C,KAAM1C,EAAS0C,KACf+G,YAAazJ,EAASyJ,YACtBlH,QAASvC,EAASuC,QAClBC,UAAWxC,EAASwC,WAEtB2J,GAEF,EAAKlG,MAAM7D,QAAQoI,KAAK,oBAAsB2B,MAMlD,uBACEpG,UAAU,YACVkC,QAAS,WACP,EAAKhC,MAAM7D,QAAQoI,KAAK,oBAAsBxK,EAASC,Q,mFAzG/D+F,KAAK2W,e,2CAGD3W,KAAKhF,MAAMyb,eACbzW,KAAK2W,aACL3W,KAAKS,SAAS,CAAEgW,cAAc,O,0EAGjB/B,G,4EACf1U,KAAKS,SAAS,CAAEnE,UAAW,OACnBia,EAAmBvW,KAAKhF,MAAxBub,gBACJvW,KAAKC,MAAMoW,W,wBACR3B,IACHA,EACE,wCACAkC,OAAO/V,KAAK0V,GACTnZ,KAAI,SAAAO,GAAG,OAAIA,EAAM,IAAM4Y,EAAe5Y,MACtCkZ,KAAK,M,SAGSC,IAAM1G,IAAIsE,G,OAAzBnJ,E,OACNvL,KAAKS,SAAS,CACZnE,UAAWiP,EAAOtN,KAAKwS,QACvB5N,KAAM0I,EAAOtN,KAAK4E,KAClBkU,KAAMxL,EAAOtN,KAAK+Y,W,wBAGpBhX,KAAKS,SAAS,CACZnE,UAAW0D,KAAKC,MAAM3D,UAAUK,QAAO,SAAA3C,GACrC,IAAMid,EACwB,MAA5BV,EAAe/Z,WACfxC,EAASwC,UAAU0a,SAASX,EAAe/Z,WACvC2a,EACsB,MAA1BZ,EAAeha,SACfvC,EAASuC,QAAQ2a,SAASX,EAAeha,SACrC6a,EACmB,MAAvBb,EAAe7Z,MACf1C,EAAS0C,KAAKwa,SAASX,EAAe7Z,MACxC,OAAOua,GAAoBE,GAAkBC,O,mJAK/B,IAAD,OACnB,OAAIpX,KAAKC,MAAMoW,WAEX,yBAAKtW,UAAU,sBACb,yBAAKA,UAAU,wBACb,4BACEA,UACE,2BAA6BC,KAAKhF,MAAM+b,KAAO,GAAK,aAEtD9U,QAAS,kBACP,EAAKjH,MAAM6H,KAAO,EAAK8T,WAAW,EAAK3b,MAAM+b,MAAQ,OALzD,gBASE,uBAAGhX,UAAU,sBAGjB,yBAAKA,UAAU,UACb,4BACEA,UACE,2BAA6BC,KAAKhF,MAAM6H,KAAO,GAAK,aAEtDZ,QAAS,kBACP,EAAKjH,MAAM6H,KAAO,EAAK8T,WAAW,EAAK3b,MAAM6H,MAAQ,OAGvD,uBAAG9C,UAAU,qBARf,eAeC,O,sCAmCM,IAAD,OACd,OAA6B,OAAzBC,KAAKhF,MAAMsB,UACN,kBAAC,GAAD,MACkC,IAAhC0D,KAAKhF,MAAMsB,UAAUmD,OAE5B,yBAAKM,UAAU,uBACb,yBAAKA,UAAU,UAAf,oBACA,sEAIGC,KAAKhF,MAAMsB,UAAUc,KAAI,SAAAG,GAAE,OAChC,yBAAKI,IAAKJ,EAAGtD,GAAI8F,UAAU,kCACzB,yBAAKA,UAAU,oBAAoBxC,EAAGb,MACtC,yBAAKqD,UAAU,UAAU,EAAK2W,SAASnZ,U,+BAKrC,IAAD,OACD8Z,EAAgB,CACpBnZ,UAAW8B,KAAKC,MAAM/B,UACtB3B,QAASyD,KAAKC,MAAM1D,QACpBC,UAAWwD,KAAKC,MAAMzD,UACtB4Z,kBAAmB,SAACzY,EAAKD,GACvB,EAAK+C,SAAS,CACZgW,cAAc,EACdF,eAAe,MAAM,EAAKvb,MAAMub,eAAlB,eAAmC5Y,EAAMD,OAG3DyY,UAAW,SAAAxY,UACF,EAAK3C,MAAMub,eAAe5Y,GACjC,EAAK8C,SAAS,CAAEgW,cAAc,KAEhCV,cAAe/V,KAAKC,MAAM8V,eAE5B,OACE,6BACE,yBAAKhW,UAAU,mCACb,kBAACuX,GAAD,iBACMD,EADN,CAEEhB,WAAYrW,KAAKC,MAAMoW,eAG3B,yBAAKtW,UAAU,kBACb,wCACA,yBAAKA,UAAU,cACZC,KAAKuX,qBACLvX,KAAKwX,gBACLxX,KAAKuX,4B,GAxKOpX,aAuLVgC,gBARS,SAAAnH,GACtB,MAAO,CACLkD,UAAWlD,EAAMgD,KAAKE,UACtB3B,QAASvB,EAAMgD,KAAKzB,QACpBC,UAAWxB,EAAMgD,KAAKxB,UACtBF,UAAWtB,EAAMmB,SAASG,aAGU,CACtCvC,eACAJ,eAFawI,CAGZmU,ICpLYA,G,iLATX,OACE,6BACE,6DACA,kBAACmB,GAAD,CAAgB1B,eAAa,EAACM,YAAU,EAACja,QAAS4D,KAAKC,MAAM7D,e,GAL5C+D,aCWVuX,G,iLATX,OACE,6BACE,oDACA,kBAACD,GAAD,CAAgBrb,QAAS4D,KAAKC,MAAM7D,e,GALf+D,aCavBwX,G,4LAGgC,IAA9B3X,KAAKC,MAAM1D,QAAQkD,QACrBO,KAAKC,MAAM2X,oB,+BAIb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,UAAWpS,KACpC,yBAAK3F,UAAU,WACb,kBAAC,IAAD,CAAO8X,KAAK,sBAAsBC,UAAWhP,KAC7C,kBAAC,IAAD,CAAO+O,KAAK,qBAAqBC,UAAWhT,GAAiBiT,OAAK,IAClE,kBAAC,IAAD,CAAOF,KAAK,yBAAyBC,UAAWtL,KAChD,kBAAC,IAAD,CAAOqL,KAAK,0BAA0BC,UAAWnE,KACjD,kBAAC,IAAD,CAAOkE,KAAK,6BAA6BC,UAAWJ,KACpD,kBAAC,IAAD,CAAOG,KAAK,sBAAsBC,UAAW1C,KAC7C,kBAAC,IAAD,CAAOyC,KAAK,kBAAkBC,UAAWxB,KACzC,kBAAC,IAAD,CAAOuB,KAAK,cAAcC,UAAW5N,GAAM6N,OAAK,U,GAnBxC5X,aA0BHgC,gBACb,SAAAnH,GACE,MAAO,CACLuB,QAASvB,EAAMgD,KAAKzB,QACpBvC,SAAUgB,EAAMmB,SAASG,UAAU,MAGvC,CAAEsb,gBxC+F2B,yDAAM,WAAMI,GAAN,qCAAAzY,EAAA,+EAGMuX,IAAMmB,IAAI,CAC/CnB,IAAM1G,IAAI,8BACV0G,IAAM1G,IAAI,+BACV0G,IAAM1G,IAAI,+BANqB,mCAGhC/T,EAHgC,KAGtBC,EAHsB,KAGXC,EAHW,wEASMua,IAAMmB,IAAI,CAC/CnB,IAAM1G,IAAI,qCACV0G,IAAM1G,IAAI,sCACV0G,IAAM1G,IAAI,sCAZqB,oCAShC/T,EATgC,KAStBC,EATsB,KASXC,EATW,oBAenCyb,EAAS,CACP7e,KAAM,8BACNC,QAAS,CACPiD,SAAUA,EAAS4B,KACnB3B,UAAWA,EAAU2B,KACrB1B,QAASA,EAAQ0B,QApBc,UAuBS6Y,IAAMmB,IAAI,CACpDja,EAAKoS,IAAI,kBACTpS,EAAKoS,IAAI,gBACTpS,EAAKoS,IAAI,qBA1BwB,oCAuB5BjS,EAvB4B,KAuBlBvB,EAvBkB,KAuBVJ,EAvBU,KA6BnCwb,EAAS,CACP7e,KAAM,8BACNC,QAAS,CACP+E,SAAUA,EAASF,KAAKwS,QACxB7T,OAAQA,EAAOqB,KAAKwS,QACpBjU,UAAWA,EAAUyB,KAAKwS,WAlCK,0DAAN,wDwCtGhBtO,CAQbwV,IC5CFO,IAASC,OACP,kBAAC,IAAD,CAAUC,MnCkDL,WACL,IAAIvY,EAAiBrF,IACjBqF,GAEFD,IADAC,EAAiBA,EAAe7E,OACImB,SAASC,SAE/C,IAAMgc,EAAQC,YAAYC,EAAUzY,EAAgB0Y,YAAgBC,MAapE,OAZAJ,EAAMK,WAAU,WACd1d,EAAU,CACRC,MAAOod,EAAMM,gBAGjBN,EAAMK,UACJE,KAAS,WACP5d,EAAU,CACRC,MAAOod,EAAMM,eAEd,MAEEN,EmCrEUQ,IACf,kBAAC,GAAD,OAEFxP,SAASC,cAAc,W","file":"static/js/main.247e60f1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\nimport Axios from \"axios\";\r\n\r\n/**Current Reducer actions */\r\n//Setze ID von aktuellen Workout (in currentReducer)\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Setzt den Index der gerade durchgeführten Übung im gerade durchgeführten Workout\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeAlreadyPassed => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeAlreadyPassed\r\n  };\r\n};\r\n\r\n//Setzte die Pause in Sekunden; time = null -> Keine Pause\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\n/**userData reducer actions */\r\n\r\n/**Muscle */\r\n//Erstelle eine neue Muskulatur mit Namen <muscleName>\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\n//Lösche eine Muskulatur mit ID <id>\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n/**Equipment */\r\n//Erstelle eine neues Equipment mit Namen <equipmentName>\r\nexport const createEquipment = equipmentName => {\r\n  return { type: \"CREATE_EQUIPMENT\", payload: equipmentName };\r\n};\r\n\r\n//Lösche ein Equipment mit ID <id>\r\nexport const deleteEquipment = id => {\r\n  return { type: \"DELETE_EQUIPMENT\", payload: id };\r\n};\r\n/**Workout */\r\n//Füge ein Workout mit dem Namen <workoutName> hinzu\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\n//Entferne ein Workout mit der ID <workoutId>\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Füge eine Übung zu einem Workout hinzu (Nur Übungs-ID wird gespeichert)\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\n//Entferne eine Übung an der Stelle <position> im Workout mit der ID <workoutId> aus diesem Workout\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\n//Setze einzelne Felder in einem Workout (z. B. workout={exercises:[1,2,3]})\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\n/**Exercise */\r\n//Füge eine Übung mit dem Namen <exerciseName> zur userdata hinzu\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\n//Entferne eine Übung mit ID <exerciseId> aus der userdata\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise(exakt)\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n/** History */\r\n//Füge den Titel eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = title => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: title };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  console.log(timeToAdd);\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Körpergewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n/**Bearbeitung aller Daten */\r\n//Setze den Standardwert von <key> auf <value>\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\n//Lösche alle in <fieldsToDelete> angegebenen Felder\r\n//z. B. {exercises:true, muscles:true} löscht Übungen und Muskelgruppen\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\n//Setze userData auf data (überschreibt andere Daten)\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\n//Füge data zu userData hinzu (wird angehängt)\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\n/** Load defaults */\r\n\r\n//Lade Standarddaten aus json-Dateien und von wger.de\r\nexport const loadDefaultData = () => async dispatch => {\r\n  let workouts, exercises, muscles;\r\n  try {\r\n    [workouts, exercises, muscles] = await Axios.all([\r\n      Axios.get(\"/defaultData/workouts.json\"),\r\n      Axios.get(\"/defaultData/exercises.json\"),\r\n      Axios.get(\"/defaultData/muscles.json\")\r\n    ]);\r\n  } catch {\r\n    [workouts, exercises, muscles] = await Axios.all([\r\n      Axios.get(\"/be-fit/defaultData/workouts.json\"),\r\n      Axios.get(\"/be-fit/defaultData/exercises.json\"),\r\n      Axios.get(\"/be-fit/defaultData/muscles.json\")\r\n    ]);\r\n  }\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_JSON\",\r\n    payload: {\r\n      workouts: workouts.data,\r\n      exercises: exercises.data,\r\n      muscles: muscles.data\r\n    }\r\n  });\r\n  const [language, muscle, equipment] = await Axios.all([\r\n    wger.get(\"/language.json\"),\r\n    wger.get(\"/muscle.json\"),\r\n    wger.get(\"/equipment.json\")\r\n  ]);\r\n\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_WGER\",\r\n    payload: {\r\n      language: language.data.results,\r\n      muscle: muscle.data.results,\r\n      equipment: equipment.data.results\r\n    }\r\n  });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    //;\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch (err) {}\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0, //in seconds\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: [],\r\n    exercises: [],\r\n    muscles: [],\r\n    equipment: [],\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles, equipment;\r\n  switch (action.type) {\r\n    /**Muscle */\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    /**Equipment */\r\n    case \"CREATE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: [\r\n          ...userData.equipment,\r\n          { id: getId(userData.equipment), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: userData.muscles.filter(\r\n          equipment => equipment.id !== action.payload\r\n        )\r\n      };\r\n    /**Workout */\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, { id: action.payload.exerciseId }]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          workout,\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId)\r\n        ]\r\n      };\r\n    /**Exercise */\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          {\r\n            id,\r\n            name: action.payload || \"Unnamed exercise \" + id,\r\n            duration: userData.defaultValues.exerciseDuration\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise.id !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          { ...action.payload.exercise, id: action.payload.id },\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id)\r\n        ]\r\n      };\r\n    /** History */\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    /**Bearbeitung aller Daten */\r\n    case \"SET_DEFAULT_VALUE\":\r\n      console.log(action.payload.value);\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles || action.payload.equipment) {\r\n        if (action.payload.muscles) {\r\n          //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n          //Behalte dabei die \"Standardmuskeln\" aus der Wger Datenbank\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              muscles: exercise.muscles.filter(muscle => muscle <= 15)\r\n            };\r\n          });\r\n        }\r\n        if (action.payload.equipment) {\r\n          //Gleiches für Equipment\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              equipment: exercise.muscles.filter(equipment => equipment <= 10)\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      //Behalte immer die \"Standardmuskeln\" aus der Wger Datenbank\r\n      muscles = action.payload.muscles\r\n        ? userData.muscles.filter(muscle => muscle.id <= 15)\r\n        : userData.muscles;\r\n      //Behalte immer das \"Standardequipment\" aus der Wger Datenbank\r\n      equipment = action.payload.equipment\r\n        ? userData.equipment.filter(equipment => equipment.id <= 10)\r\n        : userData.equipment;\r\n      //History des Trainings; muss einzeln geleert werden\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        equipment,\r\n        defaultValues\r\n      };\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history, muscles, equipment } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles.filter(m => m.id <= 15)],\r\n        equipment: [\r\n          ...userData.equipment,\r\n          ...equipment.filter(e => e.id <= 10)\r\n        ],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_JSON\":\r\n      return {\r\n        ...userData,\r\n        workouts: action.payload.workouts,\r\n        exercises: action.payload.exercises,\r\n        muscles: action.payload.muscles\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...action.payload.muscle],\r\n        equipment: [...userData.equipment, ...action.payload.equipment]\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: null,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined,\r\n  test: 20\r\n};\r\n","export default (\r\n  data = {\r\n    languages: [],\r\n    muscles: [],\r\n    equipment: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...data,\r\n        languages: action.payload.language,\r\n        equipment: action.payload.equipment,\r\n        muscles: action.payload.muscle\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  //Daten, die für die Wger-Suche (zum Importieren von Übungen) verwendet werden\r\n  wger: wgerReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport throttle from \"lodash.throttle\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport function announceExercise(index, workout, exerciseList, speech) {\r\n  let exercise = findById(exerciseList, workout.exercises[index].id);\r\n  speech.speak({\r\n    text:\r\n      (workout.exercises[index].duration || exercise.duration) +\r\n      \" seconds \" +\r\n      exercise.name,\r\n    queue: false\r\n  });\r\n}\r\n//Gibt gemischtes Array <array> zurück\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\n//Finde erstes Objekt aus <array> mit id <id>\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Teste, ob <date1> und <date2> am gleichen Tag liegen\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\n//Teste, ob <date> heute ist\r\nexport function isToday(date) {\r\n  return isSameDay(date, new Date());\r\n}\r\n\r\n//Gebe ein Array zurück, in dem es keine doppelten Werte gibt\r\nexport function unique(array) {\r\n  return [...new Set(array)];\r\n}\r\n\r\n//TODO\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in echte Date-Objekte verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    //Zeige Verlust oder, falls kein Verlust, null\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    //Statistik zur Anzeige und zum bearbeiten des Körpergewichts\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.5).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.5).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","/**\r\n * Workout wurde beendet; Zeige Statistiken und verschiedene Links an\r\n */\r\nimport React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../Overview/WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({\r\n            text: \"\" + time,\r\n            queue: false\r\n          });\r\n        }\r\n      }\r\n      //Eine Sekunde ist vergangen\r\n      this.props.addTime(1 / 60);\r\n      this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.props.exercise.description\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime, setPause } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0, pauseEnded: false, running: true };\r\n  async componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload);\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload);\r\n    this.props.setPause(this.state.time);\r\n  }\r\n  beforeunload = () => {\r\n    //Soll während reload nicht weiterlaufen\r\n    this.setState({ running: false });\r\n    this.props.setPause(this.state.lastTime);\r\n  };\r\n  renderTime = time => {\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.props.addTime(1 / 60);\r\n\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.setPause(null);\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            startAt={0}\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.state.running ? this.props.isRunning : false}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1\r\n                onClick={() => {\r\n                  this.setState({ pauseEnded: true });\r\n                  this.props.endPause();\r\n                }}\r\n              >\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  state => {\r\n    return { pause: state.current.pause };\r\n  },\r\n  { addTime, setPause }\r\n)(PauseScreen);\r\n","/**\r\n * Zeige entweder die aktuelle Übung (Exercise) oder die Pausenanzeige (PauseScreen) an\r\n */\r\nimport React from \"react\";\r\nimport Exercise from \"./Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.exercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui centered grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"stop icon\" onClick={props.stopWorkout}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <div className=\"loading-bar\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui text loader\">{props.message || \"Loading...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { findById, announceExercise } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\nimport Loader from \"../Loader\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isRunning: true,\r\n      pause: false\r\n    };\r\n  }\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n      console.log(this.props.exercise.duration);\r\n      this.speak(\r\n        this.props.exercise.duration -\r\n          (this.props.workoutStoppedAt || 0) +\r\n          \" seconds \" +\r\n          this.props.exercise.name\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n      if (\r\n        this.props.workoutExercises &&\r\n        this.props.exercise &&\r\n        !this.state.ready &&\r\n        !this.props.pause\r\n      ) {\r\n        this.speak(\r\n          this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text, queue: false });\r\n    }\r\n  }\r\n\r\n  finishWorkout() {\r\n    //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n    //fertig machen für nächstes Training(Index auf 0)\r\n    this.props.pushWorkoutHistory(this.props.currentWorkout.title);\r\n    this.props.setIndex(0);\r\n    this.setState({ ready: true });\r\n    this.speak(\"Well done. workout completed!\");\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    if (this.props.pause != null) {\r\n      this.props.setPause(null);\r\n      announceExercise(\r\n        this.props.indexInWorkout,\r\n        this.props.currentWorkout,\r\n        this.props.exerciseList,\r\n        this.state.speech\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        this.finishWorkout();\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //Starte Pause, sage nächste Übung an\r\n          if (this.props.pauseTime) {\r\n            const nextExerciseIndex = this.props.currentWorkout.exercises[\r\n              this.props.indexInWorkout + 1\r\n            ].id;\r\n            const nextExercise = findById(\r\n              this.props.exerciseList,\r\n              nextExerciseIndex\r\n            );\r\n            this.speak(\r\n              this.props.pauseTime +\r\n                \" seconds pause. prepare for \" +\r\n                nextExercise.name\r\n            );\r\n          } else {\r\n            //Pause wurde nicht angegeben oder ist 0, nächste Übung startet dann sofort\r\n            announceExercise(\r\n              this.props.indexInWorkout + 1,\r\n              this.props.currentWorkout,\r\n              this.props.exerciseList,\r\n              this.state.speech\r\n            );\r\n          }\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({ isRunning: true });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <div>\r\n          <FinishScreen\r\n            goToHome={() => this.props.history.push(\"/be-fit/\")}\r\n            goToOverview={() => this.props.history.push(\"/be-fit/overview\")}\r\n            restart={() => {\r\n              this.setState({ ready: false });\r\n              this.props.setIndex(0);\r\n              announceExercise(\r\n                0,\r\n                this.props.currentWorkout,\r\n                this.props.exerciseList,\r\n                this.state.speech\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu (WorkoutCreator)\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <Loader />;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          stopWorkout={this.finishWorkout.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n\r\n  const currentIndex = state.current.index;\r\n  //Erhalte aktuelle Übung, ggf. mit anderer Zeit\r\n  const currentExercise = currentWorkout\r\n    ? findById(\r\n        state.userData.exercises,\r\n        currentWorkout.exercises[currentIndex].id\r\n      )\r\n    : null;\r\n  let exercise = { ...currentExercise };\r\n\r\n  if (currentWorkout.exercises[currentIndex].duration) {\r\n    //Eigene Zeit wurde angegeben\r\n    exercise.duration = parseInt(\r\n      currentWorkout.exercises[currentIndex].duration\r\n    );\r\n  }\r\n  let nextExercise;\r\n  if (currentWorkout.exercises.length > currentIndex + 1) {\r\n    nextExercise = currentWorkout\r\n      ? {\r\n          ...findById(\r\n            state.userData.exercises,\r\n            currentWorkout.exercises[currentIndex + 1].id\r\n          )\r\n        }\r\n      : null;\r\n    if (currentWorkout.exercises[currentIndex + 1].duration) {\r\n      //Eigene Zeit wurde angegeben\r\n      nextExercise.duration = parseInt(\r\n        currentWorkout.exercises[currentIndex + 1].duration\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    exercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime,\r\n    exerciseList: state.userData.exercises,\r\n    nextExercise,\r\n    workoutStoppedAt: state.current.workoutStoppedAt\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","/**\r\n * Oberes Menu\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <span className=\"logo\" />\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <div className=\"scrollable-menu\">\r\n                {[\r\n                  <Dropdown.Item\r\n                    key={-2}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/be-fit/exercise/search\")\r\n                    }\r\n                  >\r\n                    <i className=\"search icon\"></i>Search\r\n                  </Dropdown.Item>,\r\n                  <Dropdown.Item\r\n                    key={-1}\r\n                    onClick={() => {\r\n                      const idForNewExercise = getId(this.props.exercises);\r\n                      this.props.addExercise(\"\");\r\n                      this.props.history.push(\r\n                        \"/be-fit/exercise/\" + idForNewExercise\r\n                      );\r\n                    }}\r\n                  >\r\n                    <i className=\"plus icon\"></i>Add exercise\r\n                  </Dropdown.Item>,\r\n                  <div className=\"ui divider\" key={-3} />,\r\n                  this.props.exercises.map(exercise => (\r\n                    <Dropdown.Item\r\n                      key={exercise.id}\r\n                      active={activeItem === \"/be-fit/exercise/\" + exercise.id}\r\n                      onClick={() =>\r\n                        this.props.history.push(\r\n                          \"/be-fit/exercise/\" + exercise.id\r\n                        )\r\n                      }\r\n                    >\r\n                      {exercise.name}\r\n                    </Dropdown.Item>\r\n                  ))\r\n                ]}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit/wger\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <div className=\"scrollable-menu\">\r\n                {[\r\n                  this.props.workouts.map(workout => (\r\n                    <Dropdown.Item\r\n                      key={workout.id}\r\n                      active={activeItem === \"/be-fit/workout/\" + workout.id}\r\n                      onClick={() =>\r\n                        this.props.history.push(\"/be-fit/workout/\" + workout.id)\r\n                      }\r\n                    >\r\n                      {workout.title}\r\n                    </Dropdown.Item>\r\n                  )),\r\n                  <Dropdown.Item\r\n                    key={-1}\r\n                    onClick={() => {\r\n                      this.props.setWorkout(null);\r\n                      this.props.history.push(\"/be-fit/workout/-1\");\r\n                    }}\r\n                  >\r\n                    <i className=\"plus icon\"></i>Add workout\r\n                  </Dropdown.Item>\r\n                ]}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#body-weight\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#body-weight\")\r\n                }\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/be-fit/overview#statistics\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/be-fit/overview#statistics\")\r\n                }\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/be-fit/settings\"}\r\n            onClick={() => this.props.history.push(\"/be-fit/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay, unique } from \"../../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n    this.setState({ index: this.uniqueDaysWithTraining.length - 1 });\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={this.state.index || 0}\r\n          values={this.getValues()}\r\n          indexClick={index => {\r\n            console.log(index);\r\n            this.setState({ index });\r\n          }}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //TODO: Ältester Eintrag\r\n    console.log(\"get values\");\r\n    console.log(this.state.index);\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    console.log(this.lastTrainingDates);\r\n    return this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      //Zeige ausgewählten oder heutigen Tag an\r\n      let index = this.state.index;\r\n      if (index == null) {\r\n        index = this.uniqueDaysWithTraining.length - 1;\r\n      }\r\n      console.log(\"INDEX: \" + index);\r\n      //Finde Traings-Titel an diesem Tag\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      //Reduziere diese auf einzigartige Trainings\r\n      filteredTrainings = unique(trainingsOnSelectedDay);\r\n      //Zähle, wie oft diese vorkommen\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addWeight } from \"../../actions\";\r\n\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"../Popup\";\r\n\r\nclass Overview extends Component {\r\n  state = { weightValue: 0, lastAnchorTag: null };\r\n  componentDidMount() {\r\n    this.setState({ weightValue: this.props.lastWeight });\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    //Bewege Website zur jeweils in URL als #anchor am Ende angegebenen Stelle\r\n    const selected = this.props.history.location.hash;\r\n    if (selected !== this.state.lastAnchorTag) {\r\n      this.setState({ lastAnchorTag: selected });\r\n      if (selected && selected.length > 0) {\r\n        const elem = document.querySelector(selected);\r\n        elem && elem.scrollIntoView();\r\n      }\r\n    }\r\n  }\r\n  getWeightHistory() {\r\n    //Formatiere Aufzeichnungen des Körpergewichts\r\n    return this.props.weightHistory.map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        //Zeige zusätzlich das Jahr an.\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline\r\n            latestTrainings={this.props.lastWorkouts.map(training => {\r\n              return training.date;\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory()\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button className=\"circular ui icon button\">\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={this.state.weightValue}\r\n                    onChange={evt =>\r\n                      this.setState({ weightValue: evt.target.value })\r\n                    }\r\n                    onKeyDown={evt => {\r\n                      if (evt.keyCode === 13) {\r\n                        this.props.addWeight(this.state.weightValue);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => this.props.addWeight(this.state.weightValue)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { findById } from \"../helpers\";\r\nimport WorkoutStatistics from \"./Overview/WorkoutStatistics\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return <Redirect to=\"/be-fit/workout/-1\" />;\r\n    }\r\n    return (\r\n      <div className=\"ui center aligned basic vertical segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/be-fit/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div className=\"ui buttons\">\r\n          <button\r\n            className=\"ui button\"\r\n            onClick={() => {\r\n              this.props.history.push(\r\n                \"/be-fit/workout/\" + this.props.currentWorkout.id\r\n              );\r\n            }}\r\n          >\r\n            <i className=\"redo icon\" />\r\n            Restart\r\n          </button>\r\n          <div className=\"or\"></div>\r\n          <button\r\n            className=\"ui positive button\"\r\n            onClick={() => this.props.history.push(\"/be-fit/workout\")}\r\n          >\r\n            <i className=\"play icon\" />\r\n            Continue\r\n          </button>\r\n          Hello World\r\n        </div>\r\n        {this.props.currentWorkout.title}\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"eight wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i className=\"fas fa-play\"></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  state.current.test = 100;\r\n  const currentWorkout = findById(\r\n    state.userData.workouts,\r\n    state.current.workout\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state,\r\n    exercise: state.userData.exercises[0]\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else if (selected) {\r\n                this.props.onChange(selected.value);\r\n              } else {\r\n                //Wert wurde mit Klick auf X gelöscht\r\n                this.props.onChange(null);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown as SemanticDropdown } from \"semantic-ui-react\";\r\n\r\nconst Dropdown = props => {\r\n  return (\r\n    <SemanticDropdown text={props.header}>\r\n      <SemanticDropdown.Menu>\r\n        {props.items.map(item => (\r\n          <SemanticDropdown.Item key={item.id}>\r\n            {item.name}\r\n          </SemanticDropdown.Item>\r\n        ))}\r\n      </SemanticDropdown.Menu>\r\n    </SemanticDropdown>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt,\r\n  setIndex\r\n} from \"../../actions\";\r\nimport { getId, unique, findById } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\nimport Loader from \"../Loader\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    if (this.props.workout == null) {\r\n      this.props.history.push(\"/be-fit/workout/-1\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (this.props.workout == null && this.props.match.params.id !== \"-1\") {\r\n      this.props.history.push(\"/be-fit/workout/-1\");\r\n    }\r\n  }\r\n\r\n  editExerciseDurationInWorkout(indexInWorkout, duration) {\r\n    let editedExercises = this.props.workout.exercises.map((ex, index) => {\r\n      if (index !== indexInWorkout) {\r\n        return ex;\r\n      } else {\r\n        return { id: ex.id, duration };\r\n      }\r\n    });\r\n    this.props.editWorkout(this.props.workout.id, {\r\n      exercises: editedExercises\r\n    });\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={newIdOrder => {\r\n            const newOrder = newIdOrder.map(id =>\r\n              this.props.workout.exercises.find(ex => ex.id === id)\r\n            );\r\n            this.props.editWorkout(this.props.workout.id, {\r\n              exercises: newOrder\r\n            });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.props.workout.exercises\r\n            .map((ex, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = findById(this.props.usersExercises, ex.id);\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"eight wide column\">{exercise.name}</div>\r\n                        <div className=\"four wide column\">\r\n                          <div className=\"ui right labeled mini input\">\r\n                            <input\r\n                              type=\"number\"\r\n                              value={\r\n                                ex.duration == null\r\n                                  ? exercise.duration\r\n                                  : ex.duration\r\n                              }\r\n                              onChange={evt =>\r\n                                this.editExerciseDurationInWorkout(\r\n                                  index,\r\n                                  parseInt(evt.target.value)\r\n                                )\r\n                              }\r\n                            ></input>\r\n                            <div className=\"ui basic label\">seconds</div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.props.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: ex.id\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderExerciseSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderExerciseSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        this.props.removeExercise(exercise.id);\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            this.props.addExerciseToWorkout(selected, this.props.workout.id);\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.props.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/be-fit/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  renderWorkoutSelector() {\r\n    const selectedWorkout = this.props.workout || {\r\n      title: \"SELECT WORKOUT OR TYPE TO ADD ONE\"\r\n    };\r\n    return (\r\n      <Selector\r\n        options={this.props.usersWorkouts.map(workout => {\r\n          return {\r\n            value: workout.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{workout.title}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      this.props.removeWorkout(workout.id);\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n        onChange={selected => {\r\n          if (!this.state.preventSelect) {\r\n            this.props.history.push(\"/be-fit/workout/\" + selected);\r\n          }\r\n        }}\r\n        value={{\r\n          value: selectedWorkout.title,\r\n          label: selectedWorkout.title\r\n        }}\r\n        onCreate={created => {\r\n          this.props.addWorkout(created);\r\n          this.props.history.push(\r\n            \"/workout/\" + getId(this.props.usersWorkouts)\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  neededEquipment(type, header) {\r\n    //Zeige belastete Muskulatur oder benötigtes Equipment an\r\n    //Type: \"equipment\" or muscles\r\n    const list = {\r\n      equipment: this.props.usersEquipment,\r\n      muscles: this.props.usersMuscles\r\n    };\r\n    const ids = this.props.workout.exercises.map(ex => {\r\n      const exercise = findById(this.props.usersExercises, ex.id);\r\n\r\n      return exercise[type];\r\n    });\r\n\r\n    const uniqueIds = unique([].concat.apply([], ids));\r\n    if (uniqueIds.length === 0) {\r\n      return <div>No {header.toLowerCase()}</div>;\r\n    }\r\n    return (\r\n      <Dropdown\r\n        header={header}\r\n        items={uniqueIds.map(id => findById(list[type], id))}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (this.props.match.params.id === \"-1\") {\r\n      return this.renderWorkoutSelector();\r\n    }\r\n    if (!this.props.workout) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.props.workout.title}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            {this.renderWorkoutSelector()}\r\n          </div>\r\n          {this.props.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.props.workout.id !== -1 ? (\r\n            <div className=\"workout-information\">\r\n              <div className=\"ui grid\">\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"equipment\", \"Needed Equipment\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"muscles\", \"Strained muscles\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                  <div className=\"ui right labeled input\">\r\n                    <div className=\"ui label\">Pause time:</div>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={this.props.workout.pauseTime || null}\r\n                      onChange={evt => {\r\n                        this.setState({\r\n                          workout: {\r\n                            ...this.props.workout,\r\n                            pauseTime: evt.target.value\r\n                          }\r\n                        });\r\n                        this.props.editWorkout(this.props.workout.id, {\r\n                          ...this.props.workout,\r\n                          pauseTime: evt.target.value\r\n                        });\r\n                      }}\r\n                    />\r\n                    <div className=\"ui basic label\">sec</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            {this.props.workout.id !== -1 ? (\r\n              <div>\r\n                <button\r\n                  className={\r\n                    \"ui submit button\" +\r\n                    (this.props.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n                  }\r\n                  onClick={() => {\r\n                    this.props.setIndex(0);\r\n                    this.props.setWorkout(this.props.workout.id);\r\n                    this.props.history.push(\"/be-fit/workout\");\r\n                  }}\r\n                >\r\n                  Start\r\n                </button>\r\n                <button\r\n                  className=\"ui red button\"\r\n                  onClick={evt => {\r\n                    evt.preventDefault();\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are your sure that you want to delete all this workout?\"\r\n                      )\r\n                    ) {\r\n                      this.props.removeWorkout(this.props.workout.id);\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = parseInt(ownProps.match.params.id);\r\n  const workout = findById(state.userData.workouts, id);\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    usersEquipment: state.userData.equipment,\r\n    usersMuscles: state.userData.muscles,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime,\r\n    workout\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt,\r\n  setIndex\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport Loader from \"../../Loader\";\r\n\r\nclass ImageWrapper extends Component {\r\n  baseURL =\r\n    \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9\";\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe\r\n    // eingegeben wird, cancele die alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(this.baseURL + \"&query=\" + keyword, {\r\n        cancelToken: new axios.CancelToken(c => {\r\n          this.cancel = c;\r\n        })\r\n      });\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <Loader message={\"Getting results for \" + unsplashKeyword} />;\r\n      } else if (unsplashImages.length === 0) {\r\n        return (\r\n          <div className=\"ui negative message\">\r\n            <div className=\"header\">\r\n              No results found for {unsplashKeyword}!\r\n            </div>\r\n            Please try another searchterm.\r\n          </div>\r\n        );\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onFocus={() =>\r\n                      this.setState({ imageUrlFieldFocused: true })\r\n                    }\r\n                    onBlur={() =>\r\n                      this.setState({ imageUrlFieldFocused: false })\r\n                    }\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  />\r\n                  {this.state.imageUrlFieldFocused ? (\r\n                    <div className=\"ui pointing label\">\r\n                      Press enter to set image\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","import React from \"react\";\r\nimport { getId } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nconst ExerciseFormSelector = props => {\r\n  //props.type either \"muscles\" or \"equipment\"\r\n  const create = {\r\n    muscles: props.createMuscle,\r\n    equipment: props.createEquipment\r\n  };\r\n  const remove = {\r\n    muscles: props.deleteMuscle,\r\n    equipment: props.deleteEquipment\r\n  };\r\n  return (\r\n    <div className=\"field\">\r\n      <label>{props.type}:</label>\r\n      <Selector\r\n        isMulti\r\n        onCreate={name => {\r\n          const newId = getId(props[props.type]);\r\n          create[props.type](name);\r\n          props.handleChange({\r\n            target: {\r\n              value: [\r\n                ...props.values[props.type],\r\n                { value: newId, label: name }\r\n              ],\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        onChange={evt => {\r\n          props.handleChange({\r\n            target: {\r\n              value: evt,\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        value={(props.values[props.type] || []).map(elem => {\r\n          let data = props[props.type].find(e => e.id === elem.value);\r\n          //Falls Muskulatur oder Equipment noch nicht geladen hat, setze jeweilige Namen auf leeren String\r\n          let label = \"\";\r\n          if (data) {\r\n            label = data.name;\r\n          }\r\n\r\n          return {\r\n            value: elem.value,\r\n            label: label\r\n          };\r\n        })}\r\n        options={(props[props.type] || []).map(elem => {\r\n          return {\r\n            value: elem.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{elem.name}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      remove[props.type](elem.id);\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseFormSelector;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"./ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n} from \"../../actions\";\r\nimport { Prompt } from \"react-router\";\r\nimport ExerciseFormSelector from \"./ExerciseFormSelector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const {\r\n      name,\r\n      duration,\r\n      description,\r\n      image,\r\n      muscles,\r\n      equipment\r\n    } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration || null,\r\n            description: description || \"\",\r\n            muscles: (muscles || []).map(muscleId => {\r\n              const name = this.props.muscles.find(\r\n                muscle => muscle.id === muscleId\r\n              );\r\n\r\n              return { value: muscleId, label: name };\r\n            }),\r\n            equipment: (equipment || []).map(equipmentId => {\r\n              const name = this.props.equipment.find(\r\n                equipment => equipment.id === equipmentId\r\n              );\r\n\r\n              return { value: equipmentId, label: name };\r\n            }),\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const {\r\n              name,\r\n              duration,\r\n              description,\r\n              image,\r\n              muscles,\r\n              equipment\r\n            } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles: (muscles || []).map(m => m.value),\r\n                equipment: (equipment || []).map(e => e.value),\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    autoFocus={values.name === \"\"}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    autoFocus={values.name !== \"\" && values.duration <= 5}\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"muscles\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"equipment\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={evt => {\r\n                    evt.preventDefault();\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Abbort\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\r\n                        \"Are your sure that you want to delete this exercise?\"\r\n                      )\r\n                    ) {\r\n                      this.setState({ formChanged: false });\r\n                      this.props.removeExercise(this.props.exercise.id);\r\n                      this.props.back();\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles,\r\n    equipment: state.userData.equipment\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { getId } from \"../../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (this.props.match.params.id === \"search\") {\r\n      ///exercise/search\r\n      return null;\r\n    }\r\n    if (!this.state.exercise && !isNaN(this.props.match.params.id)) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\r\n                      \"/be-fit/exercise/\" + idForNewExercise\r\n                    );\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nfunction DefaultSettings(props) {\r\n  const setDefaultValue = evt => {\r\n    props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  return (\r\n    <div className=\"section\">\r\n      <h1>Defaults</h1>\r\n      <form className=\"ui form\">\r\n        <div className=\"two fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration:</label>\r\n            <div className=\"ui input\">\r\n              <input\r\n                name=\"exerciseDuration\"\r\n                type=\"number\"\r\n                value={props.defaultValues.exerciseDuration}\r\n                onChange={evt => setDefaultValue(evt)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <div className=\"ui input\">\r\n              <input\r\n                name=\"pauseTime\"\r\n                type=\"number\"\r\n                value={props.defaultValues.pauseTime}\r\n                onChange={evt => setDefaultValue(evt)}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DefaultSettings;\r\n","import React from \"react\";\r\n\r\nfunction DataDownloader(props) {\r\n  const url =\r\n    \"text/json;charset=utf-8,\" +\r\n    encodeURIComponent(JSON.stringify(props.userData));\r\n  return (\r\n    <div className=\"subsection\">\r\n      <h2>Download all your fitness-data as JSON:</h2>\r\n      <a\r\n        className=\"ui button\"\r\n        href={\"data:'\" + url}\r\n        download=\"fitness-data.json\"\r\n        title=\"Download all of your user-data\"\r\n      >\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataDownloader;\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"ui toggle checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={\r\n            props.historyField\r\n              ? props.values.history[props.label.toLowerCase()]\r\n              : props.values[props.label.toLowerCase()]\r\n          }\r\n          onChange={evt => {\r\n            if (props.historyField) {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  history: {\r\n                    ...props.values.history,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  [props.label.toLowerCase()]: evt.target.checked\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\nimport { deleteAll } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DataDeletor extends Component {\r\n  state = {\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      equipment: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"subsection\">\r\n        <h2>Delete data:</h2>\r\n        <form className=\"ui form\">\r\n          <div className=\"grouped fields\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Equipment\"}\r\n              values={this.state.delete}\r\n            />\r\n          </div>\r\n          <div className=\"framed\">\r\n            <div className=\"grouped fields\">\r\n              <div className=\"ui toggle checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={\r\n                    this.state.delete.history.workouts &&\r\n                    this.state.delete.history.weight &&\r\n                    this.state.delete.history[\"training time\"]\r\n                  }\r\n                  onChange={evt =>\r\n                    this.setState({\r\n                      delete: {\r\n                        ...this.state.delete,\r\n                        history: {\r\n                          workouts: evt.target.checked,\r\n                          weight: evt.target.checked,\r\n                          \"training time\": evt.target.checked\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                ></input>\r\n                <label>History:</label>\r\n              </div>\r\n              <div className=\"grouped field\">\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Weight\"}\r\n                  values={this.state.delete}\r\n                />\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Workouts\"}\r\n                  values={this.state.delete}\r\n                />\r\n                <DeleteSelectorField\r\n                  historyField\r\n                  setState={this.setState.bind(this)}\r\n                  label={\"Training Time\"}\r\n                  values={this.state.delete}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          className=\"ui red button\"\r\n          onClick={this.deleteAll.bind(this)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { deleteAll })(DataDeletor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserData, setDefaultValue, addUserData } from \"../../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../../helpers\";\r\nimport DefaultSettings from \"./DefaultSettings\";\r\nimport DataDownloader from \"./DataDownloader\";\r\nimport DataDeletor from \"./DataDeletor\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false\r\n  };\r\n  resetAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.state.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DefaultSettings\r\n          defaultValues={this.props.defaultValues}\r\n          setDefaultValue={this.props.setDefaultValue}\r\n        />\r\n        <div className=\"section\">\r\n          <h1>Data</h1>\r\n          <DataDownloader userData={this.props.userData} />\r\n          <div className=\"subsection\">\r\n            <h2>Load saved data from JSON:</h2>\r\n            <form className=\"ui form\">\r\n              <FileUpload\r\n                recievedFile={this.setUserData.bind(this)}\r\n                description=\"Drag or click here to upload JSON file and load it's content!\"\r\n              />\r\n              <div>{this.state.fileLoadingError}</div>\r\n              <div className=\"field\">\r\n                <div className=\"ui checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={this.state.overwriteChecked}\r\n                    onChange={() =>\r\n                      this.setState({\r\n                        overwriteChecked: !this.state.overwriteChecked\r\n                      })\r\n                    }\r\n                  ></input>\r\n                  <label>Overwrite old data</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"red-section\">\r\n            <DataDeletor />\r\n            <div className=\"subsection reset\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"ui big red button\"\r\n                onClick={this.resetAll.bind(this)}\r\n              >\r\n                Full Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      {props.showLanguages ? (\r\n        <div className=\"field\">\r\n          <label>Language</label>\r\n          <Select\r\n            isClearable\r\n            options={props.languages.map(lang => {\r\n              return {\r\n                label: (\r\n                  <div style={{ color: \"black\" }}>\r\n                    <i className={lang.short_name + \" flag\"}></i>\r\n                    {lang.full_name}\r\n                  </div>\r\n                ),\r\n                value: lang.id\r\n              };\r\n            })}\r\n            onChange={evt => {\r\n              if (evt === null) {\r\n                //Sprachauswahl gelöscht\r\n                props.deleteKey(\"language\");\r\n              } else {\r\n                props.setSearchSettings(\"language\", evt.value);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{muscle.name}</div>,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{equipment.name}</div>,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword{props.wgerSearch ? <span> (exact)</span> : null}:</label>\r\n        <input\r\n          type=\"text\"\r\n          onKeyDown={evt =>\r\n            evt.keyCode === 13\r\n              ? props.setSearchSettings(\"name\", evt.target.value)\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport SearchSettings from \"./SearchSettings\";\r\nimport Axios from \"axios\";\r\nimport Loader from \"../Loader\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    //status:2 -> Nur \"verifizierte\" Übungen\r\n    searchSettings: { status: 2 },\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    const { searchSettings } = this.state;\r\n    if (this.props.wgerSearch) {\r\n      if (!url) {\r\n        url =\r\n          \"https://wger.de/api/v2/exercise.json?\" +\r\n          Object.keys(searchSettings)\r\n            .map(key => key + \"=\" + searchSettings[key])\r\n            .join(\"&\");\r\n      }\r\n\r\n      const result = await Axios.get(url);\r\n      this.setState({\r\n        exercises: result.data.results,\r\n        next: result.data.next,\r\n        prev: result.data.previous\r\n      });\r\n    } else {\r\n      this.setState({\r\n        exercises: this.props.exercises.filter(exercise => {\r\n          const isRightEquipment =\r\n            searchSettings.equipment == null ||\r\n            exercise.equipment.includes(searchSettings.equipment);\r\n          const isRightMuscles =\r\n            searchSettings.muscles == null ||\r\n            exercise.muscles.includes(searchSettings.muscles);\r\n          const keywordMatches =\r\n            searchSettings.name == null ||\r\n            exercise.name.includes(searchSettings.name);\r\n          return isRightEquipment && isRightMuscles && keywordMatches;\r\n        })\r\n      });\r\n    }\r\n  }\r\n  renderArrowButtons() {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"right aligned column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.prev) : null\r\n              }\r\n            >\r\n              Previous page\r\n              <i className=\"arrow left icon\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.next) : null\r\n              }\r\n            >\r\n              <i className=\"arrow right icon\"></i>\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  editIcon = exercise => {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <i\r\n          className=\"plus icon\"\r\n          onClick={() => {\r\n            const idForNewExercise = getId(this.props.exercises);\r\n            this.props.addExercise(\"\");\r\n            this.props.editExercise(\r\n              {\r\n                name: exercise.name,\r\n                description: exercise.description,\r\n                muscles: exercise.muscles,\r\n                equipment: exercise.equipment\r\n              },\r\n              idForNewExercise\r\n            );\r\n            this.props.history.push(\"/be-fit/exercise/\" + idForNewExercise);\r\n          }}\r\n        ></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i\r\n          className=\"edit icon\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/be-fit/exercise/\" + exercise.id);\r\n          }}\r\n        ></i>\r\n      );\r\n    }\r\n  };\r\n  renderResults() {\r\n    if (this.state.exercises === null) {\r\n      return <Loader />;\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div className=\"ui negative message\">\r\n          <div className=\"header\">No results found</div>\r\n          <p>Please try with other search settings!</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.exercises.map(ex => (\r\n        <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n          <div className=\"five wide column\">{ex.name}</div>\r\n          <div className=\"column\">{this.editIcon(ex)}</div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true,\r\n          searchSettings: { ...this.state.searchSettings, [key]: value }\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        delete this.state.searchSettings[key];\r\n        this.setState({ shouldReload: true });\r\n      },\r\n      showLanguages: this.props.showLanguages\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"ui grey inverted raised segment\">\r\n          <SearchSettings\r\n            {...settingsProps}\r\n            wgerSearch={this.props.wgerSearch}\r\n          />\r\n        </div>\r\n        <div className=\"search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.renderResults()}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  addExercise\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass WgerSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Import exercises from wger.de</h1>\r\n        <ExerciseSearch showLanguages wgerSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WgerSearch;\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass InternalSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Search for exercises</h1>\r\n        <ExerciseSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InternalSearch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport \"../style.css\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview/Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator/WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview/ExercisePreview\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport WgerSearch from \"./ExerciseSearch/WgerSearch\";\r\nimport InternalSearch from \"./ExerciseSearch/InternalSearch\";\r\nimport { loadDefaultData } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    //Lade, falls nötig, die Standarddaten aus JSON-Dateien und wger-Datenbank\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.loadDefaultData();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/(be-fit)?\" component={Menu} />\r\n        <div className=\"content\">\r\n          <Route path=\"(/be-fit)?/overview\" component={Overview} />\r\n          <Route path=\"(/be-fit)?/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"(/be-fit)?/workout/:id\" component={WorkoutCreator} />\r\n          <Route path=\"(/be-fit)?/exercise/:id\" component={ExercisePreview} />\r\n          <Route path=\"(/be-fit)?/exercise/search\" component={InternalSearch} />\r\n          <Route path=\"(/be-fit)?/settings\" component={Settings} />\r\n          <Route path=\"(/be-fit)?/wger\" component={WgerSearch} />\r\n          <Route path=\"(/be-fit)?/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      muscles: state.wger.muscles,\r\n      exercise: state.userData.exercises[0]\r\n    };\r\n  },\r\n  { loadDefaultData }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}