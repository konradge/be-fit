{"version":3,"sources":["apis/wger.js","actions/index.js","localstorage.js","reducers/userDataReducer.js","reducers/currentReducer.js","reducers/wgerReducer.js","reducers/index.js","helpers.js","components/Statistic.jsx","components/WorkoutStatistics.jsx","components/ExerciseWrapper/FinishScreen.jsx","components/Exercise.jsx","components/ExerciseWrapper/PauseScreen.jsx","components/ExerciseWrapper/ExerciseScreen.jsx","components/Loader.jsx","components/ExerciseWrapper/ExerciseWrapper.jsx","components/Menu.jsx","components/Timeline.jsx","components/ChartComponent.jsx","components/Popup.jsx","components/Overview.jsx","components/Main.jsx","components/Selector.jsx","components/DragAndDropList.jsx","components/Dropdown.jsx","components/WorkoutCreator.jsx","components/ImageSearch/ImageCard.jsx","components/ImageSearch/ImageField.jsx","components/ExercisePreview/ExerciseFormSelector.jsx","components/ExercisePreview/ExerciseForm.jsx","components/ExercisePreview/ExercisePreview.jsx","components/FileUpload.jsx","components/DeleteSelectorField.jsx","components/Settings.jsx","components/ExerciseSearch/SearchSettings.jsx","components/ExerciseSearch/ExerciseSearch.jsx","components/ExerciseSearch/WgerSearch.jsx","components/ExerciseSearch/InternalSearch.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","setWorkout","workoutId","type","payload","setStoppedAt","timeAlreadyPassed","addExercise","exerciseName","removeExercise","exerciseId","editExercise","exercise","id","addTime","timeToAdd","addWeight","newWeight","loadState","serializedState","JSON","parse","localStorage","getItem","err","saveState","state","stringify","setItem","defaultHistory","lastWorkouts","totalTrainingTime","weight","defaultValues","exerciseDuration","pauseTime","def","workout","index","workoutStoppedAt","pause","undefined","combineReducers","current","action","userData","history","workouts","exercises","muscles","equipment","shouldLoadDefaultData","getId","name","filter","muscle","title","find","w","splice","position","duration","updatedWorkouts","map","deleted","e","ex","date","Date","key","parseInt","value","startId","prop","wger","data","languages","language","speech","findById","array","elem","isSameDay","date1","date2","getDate","getMonth","getYear","getWorkout","workoutList","list","sortedIds","item","sort","a","b","length","unique","Set","prepareDateInHistory","persistedState","Statistic","className","this","props","label","Component","WorkoutStatistics","lastWeight","weightChanged","statOrder","calcStats","setState","Array","from","statistics","keys","Math","random","userHistory","differentExercises","differentWorkouts","calcWorkoutsPerWeek","floor","calcAverageWorkoutTime","renderWeightStatistics","bind","today","getFullYear","isToday","renderWeightLoss","startDate","timeMillis","timeWeeks","toFixed","time","isNaN","loss","max","apply","onClick","parseFloat","connect","FinishScreen","goToHome","goToOverview","restart","Exercise","lastTime","Speech","init","lang","speak","text","next","durationSeconds","colors","isPlaying","running","startAt","renderTime","size","edit","image","src","alt","description","PauseScreen","queue","endPause","isRunning","nextExercise","ExerciseScreen","workoutTitle","exerciseStoppedTime","push","previous","pauseTimer","runTimer","Loader","message","ExerciseWrapper","workoutExercises","startExercise","prevProps","indexInWorkout","setPause","ready","pushWorkoutHistory","currentWorkout","setIndex","to","currentIndex","Menu","active","activeItem","location","pathname","secondary","stackable","Item","icon","idForNewExercise","Timeline","lastTrainingDates","uniqueDaysWithTraining","getValues","style","width","height","margin","todayNoTraining","values","indexClick","getLabel","dateFormat","styles","foreground","outline","isOpenBeginning","arr","filteredTrainings","trainingsOnSelectedDay","t","count","reduce","acc","val","buildTimeline","ChartComponent","labels","disableAnimations","backgroundColor","borderColor","Popup","open","canOpen","content","eventsEnabled","on","onClose","setOpen","onOpen","trigger","defaultProps","Overview","weightValue","lastAnchorTag","moveToAnchorTag","selected","hash","document","querySelector","scrollIntoView","weightHistory","latestTrainings","training","getWeightHistory","step","onChange","evt","target","onKeyDown","keyCode","placeholder","Main","startPopupContent","Selector","customStyles","option","provided","fontSize","fontWeight","color","customStyle","control","singleValue","isMulti","options","onCreateOption","onCreate","isArray","noOptionsMessage","reorder","startIndex","endIndex","result","removed","DragAndDropList","onDragEnd","destination","items","source","i","droppableId","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Dropdown","header","WorkoutCreator","match","params","loadWorkout","_","prevState","ids","editWorkout","usersExercises","removeExerciseFromWorkout","renderSelector","onMouseOver","preventSelect","onMouseLeave","stopPropagation","addExerciseToWorkout","border","usersEquipment","usersMuscles","uniqueIds","concat","toLowerCase","usersWorkouts","removeWorkout","created","addWorkout","renderExerciseList","neededEquipment","defaultPauseTime","allWorkouts","workoutName","ImageCard","spans","imageRef","React","createRef","addEventListener","setSpans","ceil","clientHeight","imageURL","gridRowEnd","setImage","ImageWrapper","maxHeight","unsplashKeyword","customUrl","unsplashImages","imageStyle","calcImageStyle","newHeight","newWidth","keyword","cancel","get","cancelToken","CancelToken","c","request","results","alt_description","urls","regular","imageList","showImage","imageUrl","href","preventDefault","htmlFor","event","onFocus","imageUrlFieldFocused","onBlur","contentStyle","searchImages","autoComplete","imageSearch","ExerciseFormSelector","createMuscle","createEquipment","remove","deleteMuscle","deleteEquipment","newId","handleChange","ExerciseForm","formChanged","window","beforeunload","returnValue","removeEventListener","form","when","validateOnChange","enableReinitialize","initialValues","startsWith","defaults","muscleId","equipmentId","console","log","validate","errors","onSubmit","m","back","touched","handleBlur","handleSubmit","onKeyPress","which","autoFocus","as","ImageField","muscleName","equipmentName","ExercisePreview","getExercise","goBack","FileUpload","onDrop","reader","FileReader","onload","recievedFile","readAsText","getRootProps","getInputProps","DeleteSelectorField","checked","historyField","delete","Settings","overwriteChecked","setDefaultValue","confirm","deleteAll","encodeURIComponent","file","json","setUserData","addUserData","error","fileLoadingError","saveData","download","fieldsToDelete","showLanguages","isClearable","short_name","full_name","deleteKey","setSearchSettings","wgerSearch","WgerSearch","searchSettings","status","shouldReload","editIcon","searchData","url","Object","join","Axios","prev","isRightEquipment","includes","isRightMuscles","keywordMatches","settingsProps","SearchSettings","renderArrowButtons","renderResults","ExerciseSearch","InternalSearch","App","loadDefaultData","path","component","exact","onLeave","alert","dispatch","all","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","subscribe","getState","throttle","prepareStore"],"mappings":"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","file":"static/js/main.ec880a68.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://wger.de/api/v2/\" });\r\n","import wger from \"../apis/wger\";\r\nimport Axios from \"axios\";\r\n\r\n/**Current Reducer actions */\r\n//Setze ID von aktuellen Workout (in currentReducer)\r\nexport const setWorkout = workoutId => {\r\n  return {\r\n    type: \"SET_WORKOUT\",\r\n    payload: workoutId\r\n  };\r\n};\r\n\r\n//Setzt den Index der gerade durchgeführten Übung im gerade durchgeführten Workout\r\nexport const setIndex = index => {\r\n  return {\r\n    type: \"SET_INDEX\",\r\n    payload: index\r\n  };\r\n};\r\n\r\n//Um nach einem Bearbeiten o.Ä. an der gleichen Stelle im Workout weiterzumachen, speichere die aktuelle Stelle\r\nexport const setStoppedAt = timeAlreadyPassed => {\r\n  return {\r\n    type: \"SET_STOPPED_AT\",\r\n    payload: timeAlreadyPassed\r\n  };\r\n};\r\n\r\n//Setzte die Pause in Sekunden; time = null -> Keine Pause\r\nexport const setPause = time => {\r\n  return { type: \"SET_PAUSE\", payload: time };\r\n};\r\n\r\n/**userData reducer actions */\r\n\r\n/**Muscle */\r\n//Erstelle eine neue Muskulatur mit Namen <muscleName>\r\nexport const createMuscle = muscleName => {\r\n  return { type: \"CREATE_MUSCLE\", payload: muscleName };\r\n};\r\n\r\n//Lösche eine Muskulatur mit ID <id>\r\nexport const deleteMuscle = id => {\r\n  return { type: \"DELETE_MUSCLE\", payload: id };\r\n};\r\n/**Equipment */\r\n//Erstelle eine neues Equipment mit Namen <equipmentName>\r\nexport const createEquipment = equipmentName => {\r\n  return { type: \"CREATE_EQUIPMENT\", payload: equipmentName };\r\n};\r\n\r\n//Lösche ein Equipment mit ID <id>\r\nexport const deleteEquipment = id => {\r\n  return { type: \"DELETE_EQUIPMENT\", payload: id };\r\n};\r\n/**Workout */\r\n//Füge ein Workout mit dem Namen <workoutName> hinzu\r\nexport const addWorkout = workoutName => {\r\n  return { type: \"ADD_WORKOUT\", payload: workoutName };\r\n};\r\n\r\n//Entferne ein Workout mit der ID <workoutId>\r\nexport const removeWorkout = workoutId => {\r\n  return { type: \"REMOVE_WORKOUT\", payload: workoutId };\r\n};\r\n\r\n//Füge eine Übung zu einem Workout hinzu (Nur Übungs-ID wird gespeichert)\r\nexport const addExerciseToWorkout = (exerciseId, workoutId) => {\r\n  return {\r\n    type: \"ADD_EXERCISE_TO_WORKOUT\",\r\n    payload: { exerciseId, workoutId }\r\n  };\r\n};\r\n\r\n//Entferne eine Übung an der Stelle <position> im Workout mit der ID <workoutId> aus diesem Workout\r\nexport const removeExerciseFromWorkout = (position, workoutId) => {\r\n  return {\r\n    type: \"REMOVE_EXERCISE_FROM_WORKOUT\",\r\n    payload: { position, workoutId }\r\n  };\r\n};\r\n\r\n//Setze einzelne Felder in einem Workout (z. B. workout={exercises:[1,2,3]})\r\nexport const editWorkout = (workoutId, workout) => {\r\n  return { type: \"EDIT_WORKOUT\", payload: { workoutId, workout } };\r\n};\r\n\r\n/**Exercise */\r\n//Füge eine Übung mit dem Namen <exerciseName> zur userdata hinzu\r\nexport const addExercise = exerciseName => {\r\n  return { type: \"ADD_EXERCISE\", payload: exerciseName };\r\n};\r\n\r\n//Entferne eine Übung mit ID <exerciseId> aus der userdata\r\nexport const removeExercise = exerciseId => {\r\n  return { type: \"REMOVE_EXERCISE\", payload: exerciseId };\r\n};\r\n\r\n//Setze Übung mit ID id auf exercise(exakt)\r\nexport const editExercise = (exercise, id) => {\r\n  return { type: \"EDIT_EXERCISE\", payload: { exercise, id } };\r\n};\r\n\r\n/** History */\r\n//Füge den Titel eines beendeten Workouts zur History hinzu\r\nexport const pushWorkoutHistory = title => {\r\n  return { type: \"PUSH_WORKOUT_HISTORY\", payload: title };\r\n};\r\n\r\n//Füge Zeit zur totalTrainingTime hinzu\r\nexport const addTime = timeToAdd => {\r\n  return { type: \"ADD_TIME\", payload: timeToAdd };\r\n};\r\n\r\n//Füge ein neues Körpergewicht zur History der Gewichte hinzu\r\nexport const addWeight = newWeight => {\r\n  return { type: \"ADD_WEIGHT\", payload: newWeight };\r\n};\r\n/**Bearbeitung aller Daten */\r\n//Setze den Standardwert von <key> auf <value>\r\nexport const setDefaultValue = (value, key) => {\r\n  return { type: \"SET_DEFAULT_VALUE\", payload: { key, value } };\r\n};\r\n\r\n//Lösche alle in <fieldsToDelete> angegebenen Felder\r\n//z. B. {exercises:true, muscles:true} löscht Übungen und Muskelgruppen\r\nexport const deleteAll = fieldsToDelete => {\r\n  return { type: \"DELETE_ALL\", payload: fieldsToDelete };\r\n};\r\n\r\n//Setze userData auf data (überschreibt andere Daten)\r\nexport const setUserData = data => {\r\n  return { type: \"SET_USER_DATA\", payload: data };\r\n};\r\n\r\n//Füge data zu userData hinzu (wird angehängt)\r\nexport const addUserData = data => {\r\n  return { type: \"ADD_USER_DATA\", payload: data };\r\n};\r\n\r\n/** Load defaults */\r\n\r\n//Lade Standarddaten aus json-Dateien und von wger.de\r\nexport const loadDefaultData = () => async dispatch => {\r\n  const [workouts, exercises, muscles] = await Axios.all([\r\n    Axios.get(\"/defaultData/workouts.json\"),\r\n    Axios.get(\"/defaultData/exercises.json\"),\r\n    Axios.get(\"/defaultData/muscles.json\")\r\n  ]);\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_JSON\",\r\n    payload: {\r\n      workouts: workouts.data,\r\n      exercises: exercises.data,\r\n      muscles: muscles.data\r\n    }\r\n  });\r\n  const [language, muscle, equipment] = await Axios.all([\r\n    wger.get(\"/language.json\"),\r\n    wger.get(\"/muscle.json\"),\r\n    wger.get(\"/equipment.json\")\r\n  ]);\r\n\r\n  dispatch({\r\n    type: \"LOAD_DEFAULT_DATA_FROM_WGER\",\r\n    payload: {\r\n      language: language.data.results,\r\n      muscle: muscle.data.results,\r\n      equipment: equipment.data.results\r\n    }\r\n  });\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", JSON.stringify(serializedState));\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import { getId } from \"../helpers\";\r\n\r\nconst defaultHistory = {\r\n  lastWorkouts: [],\r\n  totalTrainingTime: 0,\r\n  weight: []\r\n};\r\nconst defaultValues = { exerciseDuration: 10, pauseTime: 10 };\r\n\r\nexport default (\r\n  userData = {\r\n    workouts: [],\r\n    exercises: [],\r\n    muscles: [],\r\n    equipment: [],\r\n    shouldLoadDefaultData: true,\r\n    history: defaultHistory,\r\n    defaultValues\r\n  },\r\n  action\r\n) => {\r\n  //Muss hier initialisiert werden, damit Variablenname mehrfach verwendet werden kann\r\n  let workout, history, workouts, exercises, muscles;\r\n  switch (action.type) {\r\n    /**Muscle */\r\n    case \"CREATE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: [\r\n          ...userData.muscles,\r\n          { id: getId(userData.muscles), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_MUSCLE\":\r\n      return {\r\n        ...userData,\r\n        muscles: userData.muscles.filter(muscle => muscle.id !== action.payload)\r\n      };\r\n    /**Equipment */\r\n    case \"CREATE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: [\r\n          ...userData.equipment,\r\n          { id: getId(userData.equipment), name: action.payload }\r\n        ]\r\n      };\r\n    case \"DELETE_EQUIPMENT\":\r\n      return {\r\n        ...userData,\r\n        equipment: userData.muscles.filter(\r\n          equipment => equipment.id !== action.payload\r\n        )\r\n      };\r\n    /**Workout */\r\n    case \"ADD_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts,\r\n          {\r\n            id: getId(userData.workouts),\r\n            title: action.payload,\r\n            exercises: [],\r\n            pauseTime: userData.defaultValues.pauseTime\r\n          }\r\n        ]\r\n      };\r\n    case \"REMOVE_WORKOUT\":\r\n      return {\r\n        ...userData,\r\n        workouts: userData.workouts.filter(\r\n          workout => workout.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_EXERCISE_TO_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      if (!workout) {\r\n        return userData;\r\n      }\r\n      workout = {\r\n        ...workout,\r\n        exercises: [...workout.exercises, action.payload.exerciseId]\r\n      };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE_FROM_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout.exercises.splice(action.payload.position, 1);\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    case \"EDIT_WORKOUT\":\r\n      workout = userData.workouts.find(w => w.id === action.payload.workoutId);\r\n      workout = { ...workout, ...action.payload.workout };\r\n      return {\r\n        ...userData,\r\n        workouts: [\r\n          ...userData.workouts.filter(w => w.id !== action.payload.workoutId),\r\n          workout\r\n        ]\r\n      };\r\n    /**Exercise */\r\n    case \"ADD_EXERCISE\":\r\n      const id = getId(userData.exercises);\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises,\r\n          { id, name: action.payload || \"Unnamed exercise \" + id, duration: 0 }\r\n        ]\r\n      };\r\n    case \"REMOVE_EXERCISE\":\r\n      const updatedWorkouts = userData.workouts.map(workout => {\r\n        return {\r\n          ...workout,\r\n          deleted: true,\r\n          exercises: workout.exercises.filter(\r\n            exercise => exercise !== action.payload\r\n          )\r\n        };\r\n      });\r\n      return {\r\n        ...userData,\r\n        exercises: userData.exercises.filter(e => e.id !== action.payload),\r\n        workouts: updatedWorkouts\r\n      };\r\n    case \"EDIT_EXERCISE\":\r\n      //Die Übung mit der ID action.payload.id wird entfernt und die bearbeitete dann wieder hinzugefügt\r\n      return {\r\n        ...userData,\r\n        exercises: [\r\n          ...userData.exercises.filter(ex => ex.id !== action.payload.id),\r\n          { ...action.payload.exercise, id: action.payload.id }\r\n        ]\r\n      };\r\n    /** History */\r\n    case \"PUSH_WORKOUT_HISTORY\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            { date: new Date(), title: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    case \"ADD_TIME\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          totalTrainingTime: userData.history.totalTrainingTime + action.payload\r\n        }\r\n      };\r\n    case \"ADD_WEIGHT\":\r\n      return {\r\n        ...userData,\r\n        history: {\r\n          ...userData.history,\r\n          weight: [\r\n            ...userData.history.weight,\r\n            { date: new Date(), weight: action.payload }\r\n          ]\r\n        }\r\n      };\r\n    /**Bearbeitung aller Daten */\r\n    case \"SET_DEFAULT_VALUE\":\r\n      try {\r\n        defaultValues[action.payload.key] = parseInt(action.payload.value);\r\n      } catch {\r\n        defaultValues[action.payload.key] = action.payload.value;\r\n      }\r\n      return {\r\n        ...userData,\r\n        defaultValues\r\n      };\r\n    case \"DELETE_ALL\":\r\n      //Lösche die in action.payload angegebenen Felder aus userData\r\n      if (action.payload.workouts) {\r\n        workouts = [];\r\n      } else if (action.payload.exercises) {\r\n        //Wenn Übungen gelöscht werden: Lösche sie auch aus den Workouts\r\n        workouts = userData.workouts.map(workout => {\r\n          return {\r\n            ...workout,\r\n            exercises: []\r\n          };\r\n        });\r\n      } else {\r\n        workouts = userData.workouts;\r\n      }\r\n      if (action.payload.exercises) {\r\n        exercises = [];\r\n      } else if (action.payload.muscles || action.payload.equipment) {\r\n        if (action.payload.muscles) {\r\n          //Falls Muskeln gelöscht werden: Lösche diese auch in den Übungen\r\n          //Behalte dabei die \"Standardmuskeln\" aus der Wger Datenbank\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              muscles: exercise.muscles.filter(muscle => muscle <= 15)\r\n            };\r\n          });\r\n        }\r\n        if (action.payload.equipment) {\r\n          //Gleiches für Equipment\r\n          exercises = userData.exercises.map(exercise => {\r\n            return {\r\n              ...exercise,\r\n              equipment: exercise.muscles.filter(equipment => equipment <= 10)\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        exercises = userData.exercises;\r\n      }\r\n\r\n      //Behalte immer die \"Standardmuskeln\" aus der Wger Datenbank\r\n      muscles = action.payload.muscles\r\n        ? userData.muscles.filter(muscle => muscle.id <= 15)\r\n        : userData.muscles;\r\n      //Behalte immer das \"Standardequipment\" aus der Wger Datenbank\r\n      let equipment = action.payload.equipment\r\n        ? userData.equipment.filter(equipment => equipment.id <= 10)\r\n        : userData.equipment;\r\n      //History des Trainings\r\n      history = userData.history;\r\n      if (action.payload.history.weight) {\r\n        history.weight = [];\r\n      }\r\n      if (action.payload.history[\"training time\"]) {\r\n        history.totalTrainingTime = 0;\r\n      }\r\n      if (action.payload.history.workouts) {\r\n        history.lastWorkouts = [];\r\n      }\r\n      return {\r\n        history,\r\n        exercises,\r\n        workouts,\r\n        muscles,\r\n        equipment,\r\n        defaultValues\r\n      };\r\n    case \"SET_USER_DATA\":\r\n      //Setze Daten aus action.payload als UserData\r\n      return action.payload;\r\n    case \"ADD_USER_DATA\":\r\n      //Füge jeweilige Daten aus action.payload zu UserData hinzu\r\n      ({ exercises, workouts, history } = action.payload);\r\n      //Übungen laden (IDs weiter vergeben)\r\n      let startId = getId(userData.exercises);\r\n      for (let prop in exercises) {\r\n        exercises[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Workouts laden (IDs weiter vergeben)\r\n      startId = getId(userData.workouts);\r\n      for (let prop in workouts) {\r\n        workouts[prop].id = startId;\r\n        startId++;\r\n      }\r\n      //Muskeln laden (IDs weiter vergeben)\r\n      startId = getId(userData.muscles);\r\n      for (let prop in muscles) {\r\n        muscles[prop].id = startId;\r\n        startId++;\r\n      }\r\n      return {\r\n        ...userData,\r\n        exercises: [...userData.exercises, ...exercises],\r\n        workouts: [...userData.workouts, ...workouts],\r\n        muscles: [...userData.muscles, ...muscles],\r\n        //Werte an history anhängen\r\n        history: {\r\n          lastWorkouts: [\r\n            ...userData.history.lastWorkouts,\r\n            ...history.lastWorkouts\r\n          ],\r\n          totalTrainingTime:\r\n            userData.history.totalTrainingTime + history.totalTrainingTime,\r\n          weight: [...userData.history.weight, ...history.weight]\r\n        }\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_JSON\":\r\n      return {\r\n        ...userData,\r\n        workouts: action.payload.workouts,\r\n        exercises: action.payload.exercises,\r\n        muscles: action.payload.muscles\r\n      };\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...userData,\r\n        muscles: [...userData.muscles, ...action.payload.muscle],\r\n        equipment: [...userData.equipment, ...action.payload.equipment]\r\n      };\r\n    default:\r\n      return userData;\r\n  }\r\n};\r\n","export default (current = def, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXERCISE\":\r\n      return { ...current, exercise: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_WORKOUT\":\r\n      return { ...current, workout: action.payload, workoutStoppedAt: 0 };\r\n    case \"SET_INDEX\":\r\n      return {\r\n        ...current,\r\n        index: action.payload,\r\n        workoutStoppedAt: 0\r\n      };\r\n    case \"SET_STOPPED_AT\":\r\n      return { ...current, workoutStoppedAt: action.payload };\r\n    case \"SET_PAUSE\":\r\n      return { ...current, pause: action.payload };\r\n    default:\r\n      return current;\r\n  }\r\n};\r\n\r\nconst def = {\r\n  exercise: null,\r\n  workout: 1,\r\n  index: 0,\r\n  workoutStoppedAt: 0, //Zeit, an der die aktuelle Übung gerade ist (Falls Seite gewechselt wird)\r\n  pause: undefined\r\n};\r\n","export default (\r\n  data = {\r\n    languages: [],\r\n    muscles: [],\r\n    equipment: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOAD_DEFAULT_DATA_FROM_WGER\":\r\n      return {\r\n        ...data,\r\n        languages: action.payload.language,\r\n        equipment: action.payload.equipment,\r\n        muscles: action.payload.muscle\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userDataReducer from \"./userDataReducer\";\r\nimport currentReducer from \"./currentReducer\";\r\nimport wgerReducer from \"./wgerReducer\";\r\n\r\nexport default combineReducers({\r\n  //Alles was aktuell ausgewählt ist\r\n  current: currentReducer,\r\n  //Nutzerdaten\r\n  userData: userDataReducer,\r\n  wger: wgerReducer,\r\n  speech: (speech = null, action) => {\r\n    if (action.type === \"SET_SPEECH\") {\r\n      return action.payload;\r\n    }\r\n    return speech;\r\n  }\r\n});\r\n","import { createStore } from \"redux\";\r\nimport throttle from \"lodash.throttle\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { saveState, loadState } from \"./localstorage\";\r\nimport reducers from \"./reducers\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport function formatTime(seconds) {\r\n  let hours = Math.floor(seconds / (60 * 60));\r\n  let mins = Math.floor((seconds % (60 * 60)) / 60);\r\n  let secs = Math.floor(seconds % 60);\r\n  return (\r\n    (hours === 0 ? \"\" : hours + \":\") +\r\n    (mins < 10 ? \"0\" + mins : mins) +\r\n    \":\" +\r\n    (secs < 10 ? \"0\" + secs : secs)\r\n  );\r\n}\r\n\r\n//For copy call shuffle([...array])\r\nexport function shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\nexport function findById(array, id) {\r\n  return array.find(elem => elem.id === id);\r\n}\r\n\r\n//Calculates an array, which has max length of maxLength\r\nexport function sliceArray(arr, maxLength) {\r\n  return arr.slice(\r\n    Math.sign(arr.length - maxLength) === -1 ? 0 : arr.length - maxLength\r\n  );\r\n}\r\n\r\nexport function isSameDay(date1, date2) {\r\n  return (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getYear() === date2.getYear()\r\n  );\r\n}\r\n\r\nexport function getWorkout(id, workoutList) {\r\n  return workoutList.find(workout => workout.id === id);\r\n}\r\n\r\n//Gib die nächste freie ID aus einer Liste zurück\r\nexport function getId(list) {\r\n  const sortedIds = list.map(item => item.id).sort((a, b) => a - b);\r\n  if (sortedIds.length === 0) {\r\n    return 0;\r\n  }\r\n  return sortedIds[sortedIds.length - 1] + 1;\r\n}\r\n\r\nexport function isToday(date) {\r\n  const today = new Date();\r\n  return (\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n  );\r\n}\r\n\r\nexport function unique(array) {\r\n  return [...new Set(array)];\r\n}\r\n\r\nexport function prepareStore() {\r\n  let persistedState = loadState();\r\n  if (persistedState) {\r\n    persistedState = persistedState.state;\r\n    prepareDateInHistory(persistedState.userData.history);\r\n  }\r\n  const store = createStore(reducers, persistedState, applyMiddleware(thunk));\r\n  store.subscribe(() => {\r\n    saveState({\r\n      state: store.getState()\r\n    });\r\n  });\r\n  store.subscribe(\r\n    throttle(() => {\r\n      saveState({\r\n        state: store.getState()\r\n      });\r\n    }, 1000)\r\n  );\r\n  return store;\r\n}\r\n\r\n//Da das Datum im localstorage nicht als Date-Objekt gespeichert werden, müssen\r\n//die Daten hier wieder in Daten verwandelt werden.\r\nexport function prepareDateInHistory(persistedState) {\r\n  let { lastWorkouts, weight } = persistedState;\r\n  for (let key in lastWorkouts) {\r\n    lastWorkouts[key].date = new Date(lastWorkouts[key].date);\r\n  }\r\n  for (let key in weight) {\r\n    weight[key].date = new Date(weight[key].date);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui statistic\">\r\n        <div className=\"value\">{this.props.value}</div>\r\n        <div className=\"label\">{this.props.label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistic;\r\n","/*\r\n  Zeige verschiedene Statistiken des bisherigen Trainings an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addWeight } from \"../actions\";\r\nimport Statistic from \"./Statistic\";\r\nimport { shuffle, isToday } from \"../helpers\";\r\n\r\nclass WorkoutStatistics extends Component {\r\n  state = {\r\n    lastWeight: this.props.lastWeight,\r\n    weightChanged: false,\r\n    statOrder: []\r\n  };\r\n  componentDidMount() {\r\n    //Damit sich die Statistiken nicht bei jeder Veränderung neu mischen,\r\n    //wird dies nur einmalig hier gemacht\r\n    this.calcStats();\r\n    this.setState({\r\n      statOrder: shuffle(Array.from(Array(this.statistics.length).keys()))\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    this.calcStats();\r\n  }\r\n  calcStats() {\r\n    //Berechne die Liste der Statistiken, die dann in einer zufälligen Reihenfolge gerendert wird\r\n    const { userHistory, differentExercises, differentWorkouts } = this.props;\r\n    const { lastWorkouts } = userHistory;\r\n    this.statistics = [\r\n      <Statistic value={this.calcWorkoutsPerWeek()} label=\"workouts/week\" />,\r\n      <Statistic\r\n        value={Math.floor(userHistory.totalTrainingTime)}\r\n        label=\"training minutes\"\r\n      />,\r\n      <Statistic value={lastWorkouts.length} label=\"workouts done\" />,\r\n      <Statistic\r\n        value={this.calcAverageWorkoutTime()}\r\n        label=\"Ø minutes workout time\"\r\n      />,\r\n      this.renderWeightStatistics.bind(this),\r\n      <Statistic value={differentWorkouts} label=\"different workouts\" />,\r\n      <Statistic value={differentExercises} label=\"different exercises\" />,\r\n      <Statistic\r\n        value={lastWorkouts.filter(workout => isToday(workout.date)).length}\r\n        label=\"today's workouts\"\r\n      />,\r\n      this.renderWeightLoss.bind(this)\r\n    ];\r\n  }\r\n  calcWorkoutsPerWeek() {\r\n    const { lastWorkouts } = this.props.userHistory;\r\n    if (lastWorkouts.length === 0) {\r\n      //Es wurden noch keine Workouts durchgeführt\r\n      return 0;\r\n    }\r\n    const startDate = lastWorkouts[0].date;\r\n    const timeMillis = new Date() - startDate;\r\n    const timeWeeks = Math.floor(timeMillis / 1000 / 60 / 60 / 24 / 7) + 1;\r\n    const average = lastWorkouts.length / timeWeeks;\r\n    return average.toFixed(2);\r\n  }\r\n  calcAverageWorkoutTime() {\r\n    const time = (\r\n      this.props.userHistory.totalTrainingTime /\r\n      this.props.userHistory.lastWorkouts.length\r\n    ).toFixed(2);\r\n\r\n    if (isNaN(time)) {\r\n      //Falls noch keine Workouts durchgeführt wurden\r\n      return 0;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n  renderWeightLoss() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    const loss = (\r\n      Math.max.apply(\r\n        null,\r\n        this.props.userHistory.weight.map(w => w.weight)\r\n      ) - lastWeight\r\n    ).toFixed(1);\r\n    return <Statistic value={(loss >= 0 && loss) || 0} label=\"weight loss\" />;\r\n  }\r\n  renderWeightStatistics() {\r\n    let { lastWeight } = this.state;\r\n    if (!this.state.weightChanged) {\r\n      lastWeight = this.props.lastWeight;\r\n    }\r\n    return (\r\n      <Statistic\r\n        value={lastWeight}\r\n        label={\r\n          <div>\r\n            <i\r\n              className=\"arrow alternate circle down icon\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight - 0.1).toFixed(1))\r\n                });\r\n              }}\r\n            ></i>\r\n            kg weight\r\n            <i\r\n              className=\"arrow alternate circle up icon\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  weightChanged: true,\r\n                  lastWeight: parseFloat((lastWeight + 0.1).toFixed(1))\r\n                })\r\n              }\r\n            ></i>\r\n            <br />\r\n            {this.state.weightChanged ? (\r\n              <div className=\"ui icon buttons\">\r\n                <div\r\n                  className=\"ui grey button\"\r\n                  onClick={() => {\r\n                    this.setState({ weightChanged: false });\r\n                    this.props.addWeight(lastWeight);\r\n                  }}\r\n                >\r\n                  <i className=\"save icon\"></i>\r\n                </div>\r\n                <div\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      weightChanged: false,\r\n                      lastWeight: this.props.lastWeight\r\n                    });\r\n                  }}\r\n                >\r\n                  <i className=\"x icon\"></i>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui three column grid stat-grid\">\r\n          {this.state.statOrder.map(index => {\r\n            //Gehe durch die Reihenfolge der Statistik-Elemente und rendere sie in einer 3*X Tabelle\r\n            if (typeof this.statistics[index] === \"function\") {\r\n              //Da die Gewichtsstatistik nach Veränderung durch die Pfeile auf den State zugreifen muss,\r\n              //muss dies durch die Funktion renderWeightStatistic() geschehen.\r\n              return (\r\n                <div className=\"column\" key={index}>\r\n                  {this.statistics[index]()}\r\n                </div>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"column\" key={index}>\r\n                {this.statistics[index]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight.length > 0) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    userHistory: state.userData.history,\r\n    lastWeight,\r\n    differentExercises: state.userData.exercises.length,\r\n    differentWorkouts: state.userData.workouts.length\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addWeight\r\n})(WorkoutStatistics);\r\n","import React from \"react\";\r\n\r\nimport WorkoutStatistics from \"../WorkoutStatistics\";\r\n\r\nexport default function FinishScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading\">WELL DONE!</div>\r\n        <div className=\"subheading\">You have completed your training!</div>\r\n      </div>\r\n      <div className=\"finish-content\">\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"column finish-stats\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"column relative-position finish-links\">\r\n            <div className=\"vertical-center\">\r\n              <div onClick={props.goToHome}>\r\n                <div>\r\n                  <i className=\"home icon\"></i>Home\r\n                </div>\r\n              </div>\r\n              <div onClick={props.goToOverview}>\r\n                <div>\r\n                  <i className=\"chart line icon\"></i>Overview\r\n                </div>\r\n              </div>\r\n              <div onClick={props.restart}>\r\n                <div>\r\n                  <i className=\"redo icon\"></i>Restart\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default FinishScreen;\r\n","/*\r\n  Zeige die Verbleibende Zeit einer Übung zusammen mit einigen Informationen an\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport { addTime, setStoppedAt } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Exercise extends Component {\r\n  state = { key: 0, lastTime: 0, speech: null };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime(time) {\r\n    //Funktion wird 60 Mal in der Sekunde aufgerufen\r\n    //Füge jedes mal 1/60 Sekunde zur Trainingszeit hinzu\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n\r\n    //Update die Übungszeit im redux-store\r\n    this.props.setStoppedAt(this.props.exercise.duration - time);\r\n\r\n    if (time === 0) {\r\n      //Zwinge den Timer, die Zeit neuzustarten\r\n      this.setState({ key: this.state.key + 1 });\r\n      //Starte die nächste Übung\r\n      this.props.next();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>{this.props.exercise.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            key={\"\" + this.props.exercise.id + this.state.key}\r\n            durationSeconds={this.props.exercise.duration}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.running}\r\n            startAt={this.props.startAt}\r\n            renderTime={this.renderTime.bind(this)}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"exercise-description\">\r\n          <h1 className=\"ui block header\">\r\n            {this.props.exercise.name}\r\n            <span>\r\n              <i className=\"edit icon\" onClick={() => this.props.edit()}></i>\r\n            </span>\r\n          </h1>\r\n          <div className=\"ui segments\">\r\n            {this.props.exercise.image ? (\r\n              <div className=\"ui segment\">\r\n                <img\r\n                  className=\"exercise-description-image\"\r\n                  src={this.props.exercise.image}\r\n                  alt={\"Image of \" + this.props.exercise.name}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {this.props.exercise.description ? (\r\n              <div className=\"ui segment exercise-description-text\">\r\n                {this.props.exercise.description}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTime, setStoppedAt })(Exercise);\r\n","import React, { Component } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Speech from \"speak-tts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTime } from \"../../actions\";\r\n\r\nclass PauseScreen extends Component {\r\n  state = { speech: null, lastTime: 0 };\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n  }\r\n  renderTime = time => {\r\n    this.props.addTime(1 / 60 / 60);\r\n    if (this.state.lastTime !== time) {\r\n      if (this.state.speech) {\r\n        if (time > 0 && time < 4) {\r\n          this.state.speech.speak({ text: \"\" + time, queue: false });\r\n        }\r\n      }\r\n      this.setState({ lastTime: time });\r\n    }\r\n    if (time <= 0) {\r\n      this.props.endPause();\r\n    }\r\n    return (\r\n      <div className=\"timer-description\">\r\n        <div className=\"time\">{time}s</div>\r\n        <h1>Pause...</h1>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"timer-div\">\r\n          <CountdownCircleTimer\r\n            className=\"timer\"\r\n            durationSeconds={this.props.time}\r\n            renderTime={this.renderTime}\r\n            colors={[[\"#f00\", 0.33], [\"#ff0\", 0.33], [\"#0f0\"]]}\r\n            isPlaying={this.props.isRunning}\r\n            size={500}\r\n          />\r\n        </div>\r\n        <div className=\"pause-description relative-position\">\r\n          <div className=\"vertical-center\">\r\n            <div className=\"next-exercise\">\r\n              Next exercise:\r\n              <h1 onClick={this.props.endPause}>\r\n                <i className=\"ui angle double right icon\"></i>\r\n                {this.props.nextExercise}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { addTime })(PauseScreen);\r\n","import React from \"react\";\r\nimport Exercise from \"../Exercise\";\r\nimport PauseScreen from \"./PauseScreen\";\r\n\r\nexport default function ExerciseScreen(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        <div className=\"heading bottom\">{props.workoutTitle}</div>\r\n      </div>\r\n      {props.pause ? (\r\n        <PauseScreen\r\n          time={props.pause}\r\n          isRunning={props.isRunning}\r\n          endPause={props.next}\r\n          nextExercise={props.nextExercise.name}\r\n        />\r\n      ) : (\r\n        <Exercise\r\n          exercise={props.exercise}\r\n          running={props.isRunning}\r\n          startAt={props.exerciseStoppedTime}\r\n          next={props.next}\r\n          edit={() => props.history.push(\"/exercise/\" + props.exercise.id)}\r\n        />\r\n      )}\r\n      <div className=\"exercise-menu\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"three wide column\">\r\n            <i className=\"step backward icon\" onClick={props.previous}></i>\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            {props.isRunning ? (\r\n              <i className=\"pause icon\" onClick={props.pauseTimer}></i>\r\n            ) : (\r\n              <i className=\"play icon\" onClick={props.runTimer}></i>\r\n            )}\r\n          </div>\r\n          <div className=\"three wide column\">\r\n            <i className=\"step forward icon\" onClick={props.next}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Loader = props => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <div className=\"loading-bar\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui text loader\">{props.message || \"Loading...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Speech from \"speak-tts\";\r\n\r\nimport {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n} from \"../../actions\";\r\nimport { getWorkout, findById } from \"../../helpers\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport ExerciseScreen from \"./ExerciseScreen\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass ExerciseWrapper extends Component {\r\n  state = {\r\n    isRunning: true,\r\n    pause: false\r\n  };\r\n\r\n  /** Lifecycle Methods **/\r\n  async componentDidMount() {\r\n    const speech = new Speech();\r\n    await speech.init({ lang: \"en-GB\" });\r\n\r\n    this.setState({ speech });\r\n    if (this.props.workoutExercises && this.props.exercise) {\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.indexInWorkout !== prevProps.indexInWorkout) {\r\n      if (this.props.exercise.id === prevProps.exercise.id) {\r\n        //this.props.setStoppedAt(0);\r\n      }\r\n      this.startExercise();\r\n    }\r\n  }\r\n\r\n  startExercise() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  speak(text) {\r\n    if (this.state.speech) {\r\n      this.state.speech.speak({ text: text });\r\n    }\r\n  }\r\n\r\n  /** Methoden zur Auswahl der Übungen **/\r\n\r\n  //Starte die nächste Übung aus aktuellem Workout (this.props.workout)\r\n  next() {\r\n    if (this.props.pause !== null) {\r\n      this.props.setPause(null);\r\n      this.speak(\r\n        this.props.exercise.duration + \" seconds \" + this.props.exercise.name\r\n      );\r\n      return;\r\n    }\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout + 1 >= this.props.workoutExercises.length) {\r\n        //Das aktuelle Workout ist beendet->Wird zur History hinzugefügt,\r\n        //fertig machen für nächstes Training(Index auf 0, clearInterval)\r\n        this.props.pushWorkoutHistory(this.props.currentWorkout.title);\r\n        this.props.setIndex(0);\r\n        this.setState({ ready: true });\r\n        this.speak(\"Well done. workout completed!\");\r\n      } else {\r\n        if (!this.props.pause) {\r\n          //tts(\"pause starts now\");\r\n          this.speak(this.props.pauseTime + \" seconds pause\");\r\n          this.props.setIndex(this.props.indexInWorkout + 1);\r\n          this.props.setPause(this.props.pauseTime);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    if (this.props.exercise && !this.state.ready) {\r\n      if (this.props.indexInWorkout - 1 >= 0) {\r\n        this.props.setIndex(this.props.indexInWorkout - 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Pausiere den Countdown\r\n  pauseTimer() {\r\n    this.setState({ isRunning: false });\r\n  }\r\n\r\n  //Führe den Countdown fort\r\n  runTimer() {\r\n    this.setState({\r\n      isRunning: true\r\n    });\r\n  }\r\n\r\n  /** Render **/\r\n  render() {\r\n    if (this.state.ready) {\r\n      //Alle Übungen des aktuellen Workouts wurden beendet\r\n      return (\r\n        <FinishScreen\r\n          goToHome={() => this.props.history.push(\"/\")}\r\n          goToOverview={() => this.props.history.push(\"/overview\")}\r\n          restart={() => {\r\n            this.setState({ ready: false });\r\n            this.props.setIndex(0);\r\n          }}\r\n        />\r\n      );\r\n    } else if (\r\n      !this.props.workoutExercises ||\r\n      this.props.workoutExercises.length === 0\r\n    ) {\r\n      //Es wurde noch kein Workout ausgewählt=>Auswahlmenu\r\n      return <Redirect to=\"/workout/-1\" />;\r\n    } else if (!this.props.exercise) {\r\n      return <Loader />;\r\n    } else {\r\n      //Die aktuelle Übung wird angezeigt\r\n      return (\r\n        <ExerciseScreen\r\n          {...this.props}\r\n          pause={this.props.pause}\r\n          nextExercise={this.props.exercise}\r\n          isRunning={this.state.isRunning}\r\n          next={this.next.bind(this)}\r\n          previous={this.previous.bind(this)}\r\n          pauseTimer={this.pauseTimer.bind(this)}\r\n          runTimer={this.runTimer.bind(this)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = getWorkout(\r\n    state.current.workout,\r\n    state.userData.workouts\r\n  );\r\n  const currentIndex = state.current.index;\r\n  const currentExercise = currentWorkout\r\n    ? findById(state.userData.exercises, currentWorkout.exercises[currentIndex])\r\n    : null;\r\n  return {\r\n    exercise: currentExercise,\r\n    workoutExercises: currentWorkout ? currentWorkout.exercises : null,\r\n    workoutTitle: currentWorkout ? currentWorkout.title : null,\r\n    indexInWorkout: currentIndex,\r\n    currentWorkout,\r\n    exerciseStoppedTime: state.current.workoutStoppedAt,\r\n    pause: state.current.pause,\r\n    pauseTime: currentWorkout\r\n      ? currentWorkout.pauseTime\r\n      : state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  pushWorkoutHistory,\r\n  addTime,\r\n  setIndex,\r\n  setStoppedAt,\r\n  setPause\r\n})(ExerciseWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Menu as SemanticMenu } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setWorkout, addExercise } from \"../actions\";\r\nimport { getId } from \"../helpers\";\r\nclass Menu extends Component {\r\n  state = { active: 0 };\r\n  render() {\r\n    const activeItem = this.props.location.pathname;\r\n\r\n    return (\r\n      <div className=\"top-fixed top-menu\">\r\n        <SemanticMenu secondary stackable>\r\n          <SemanticMenu.Item>\r\n            <i className=\"big heartbeat icon\"></i>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/\"}\r\n            onClick={() => this.props.history.push(\"/\")}\r\n          >\r\n            <div>\r\n              <i className=\"home icon\"></i>Home\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"fas fa-dumbbell\"></i>Exercises\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                <Dropdown.Item\r\n                  key={-2}\r\n                  onClick={() => this.props.history.push(\"/exercise/search\")}\r\n                >\r\n                  <i className=\"search icon\"></i>Search\r\n                </Dropdown.Item>,\r\n                this.props.exercises.map(exercise => (\r\n                  <Dropdown.Item\r\n                    key={exercise.id}\r\n                    active={activeItem === \"/exercise/\" + exercise.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/exercise/\" + exercise.id)\r\n                    }\r\n                  >\r\n                    {exercise.name}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add exercise\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"clipboard list icon\"></i>Workouts\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              {[\r\n                this.props.workouts.map(workout => (\r\n                  <Dropdown.Item\r\n                    key={workout.id}\r\n                    active={activeItem === \"/workout/\" + workout.id}\r\n                    onClick={() =>\r\n                      this.props.history.push(\"/workout/\" + workout.id)\r\n                    }\r\n                  >\r\n                    {workout.title}\r\n                  </Dropdown.Item>\r\n                )),\r\n                <Dropdown.Item\r\n                  key={-1}\r\n                  onClick={() => {\r\n                    this.props.setWorkout(null);\r\n                    this.props.history.push(\"/workout/-1\");\r\n                  }}\r\n                >\r\n                  <i className=\"plus icon\"></i>Add workout\r\n                </Dropdown.Item>\r\n              ]}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown\r\n            item\r\n            icon={\r\n              <div>\r\n                <i className=\"chart pie icon\"></i>Overview\r\n                <i className=\"caret down icon\"></i>\r\n              </div>\r\n            }\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#last-trainings\"}\r\n                onClick={() =>\r\n                  this.props.history.push(\"/overview#last-trainings\")\r\n                }\r\n              >\r\n                Last Trainings\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#body-weight\"}\r\n                onClick={() => this.props.history.push(\"/overview#body-weight\")}\r\n              >\r\n                Body Weight\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                active={activeItem === \"/overview#statistics\"}\r\n                onClick={() => this.props.history.push(\"/overview#statistics\")}\r\n              >\r\n                Statistics\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/wger\"}\r\n            onClick={() => this.props.history.push(\"/wger\")}\r\n          >\r\n            <div>\r\n              <i className=\"fas fa-file-import\"></i>Import exercises\r\n            </div>\r\n          </SemanticMenu.Item>\r\n          <SemanticMenu.Item\r\n            active={activeItem === \"/settings\"}\r\n            onClick={() => this.props.history.push(\"/settings\")}\r\n          >\r\n            <div>\r\n              <i className=\"cogs icon\"></i>Settings\r\n            </div>\r\n          </SemanticMenu.Item>\r\n        </SemanticMenu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises,\r\n    workouts: state.userData.workouts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWorkout, addExercise })(Menu);\r\n","import React, { Component } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport dateFormat from \"dateformat\";\r\nimport { isSameDay, unique } from \"../helpers\";\r\nimport { connect } from \"react-redux\";\r\nclass Timeline extends Component {\r\n  today = new Date();\r\n  lastTrainingDates = this.props.lastWorkouts.map(workout => workout.date);\r\n  //Das Element (also Datum), dass auf der Timeline ausgewählt wurde\r\n  state = { index: null };\r\n  //Daten, an denen mind. ein Training durchgeführt wurde\r\n  uniqueDaysWithTraining = [];\r\n  componentDidMount() {\r\n    this.uniqueDaysWithTraining = this.getValues();\r\n  }\r\n  buildTimeline() {\r\n    //Die eigentliche Timeline\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100px\", margin: \"0 auto\" }}>\r\n        <HorizontalTimeline\r\n          index={\r\n            this.state.index ||\r\n            this.uniqueDaysWithTraining.length -\r\n              (this.state.todayNoTraining ? 2 : 1)\r\n          }\r\n          values={this.uniqueDaysWithTraining}\r\n          indexClick={index => this.setState({ index })}\r\n          getLabel={date => {\r\n            if (date.getYear() === this.today.getYear()) {\r\n              return dateFormat(date, \"dd.mm.\");\r\n            } else {\r\n              return dateFormat(date, \"dd.mm.yy\");\r\n            }\r\n          }}\r\n          styles={{ foreground: \"darkgreen\", outline: \"rgb(0,0,139)\" }}\r\n          isOpenBeginning={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  getValues() {\r\n    //Reduziere Trainingsdaten (this.lastTrainingDates) so, dass jedes Datum nur noch einmal vorhanden ist\r\n    if (this.lastTrainingDates.length === 0) {\r\n      //Falls noch kein Training durchgeführt wurde, gib nur das heutige Datum zurück\r\n      //(Dann wird \"Noch kein Training heute\" angezeigt)\r\n      return [new Date()];\r\n    }\r\n    //Filtere letzte Trainings so, dass jedes Datum nur noch einmal vorhanden ist\r\n    return this.lastTrainingDates.filter((elem, index, arr) => {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      return !isSameDay(arr[index - 1], elem);\r\n    });\r\n  }\r\n  render() {\r\n    let filteredTrainings = [];\r\n    if (this.uniqueDaysWithTraining.length > 0) {\r\n      let index = this.state.index || this.uniqueDaysWithTraining.length - 1;\r\n      let trainingsOnSelectedDay = this.props.lastWorkouts\r\n        .filter(t => isSameDay(t.date, this.uniqueDaysWithTraining[index]))\r\n        .map(t => t.title);\r\n      filteredTrainings = unique(trainingsOnSelectedDay);\r\n      filteredTrainings = filteredTrainings.map(name => {\r\n        return {\r\n          name,\r\n          count: trainingsOnSelectedDay.reduce((acc, val) => {\r\n            return acc + (val === name ? 1 : 0);\r\n          }, 0)\r\n        };\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        {this.buildTimeline()}\r\n        <div className=\"ui list\">\r\n          {filteredTrainings.length === 0\r\n            ? \"--No trainings today--\"\r\n            : filteredTrainings.map(t => (\r\n                <div key={t.name}>\r\n                  {t.count} X {t.name}\r\n                </div>\r\n              ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts\r\n  };\r\n})(Timeline);\r\n","/*\r\n  Zeige die in data.values übergenenen Daten in einem Graphen an\r\n*/\r\nimport React from \"react\";\r\nimport { Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nexport default function ChartComponent(props) {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        style={{ width: \"500px\" }}\r\n        labels={props.data.values.map(val => val.label)}\r\n        type=\"line\"\r\n        disableAnimations\r\n      >\r\n        <Dataset\r\n          title={props.data.title}\r\n          values={props.data.values.map(val => parseInt(val.value))}\r\n          backgroundColor={props.backgroundColor}\r\n          borderColor={props.borderColor}\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Popup as SemanticPopup } from \"semantic-ui-react\";\r\n\r\nclass Popup extends Component {\r\n  state = { open: false };\r\n  setOpen(open) {\r\n    if (this.props.canOpen) {\r\n      this.setState({ open });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <SemanticPopup\r\n        content={this.props.content}\r\n        eventsEnabled={true}\r\n        on=\"click\"\r\n        onClose={() => {\r\n          this.setOpen(false);\r\n        }}\r\n        onOpen={() => {\r\n          this.setOpen(true);\r\n        }}\r\n        open={this.state.open}\r\n        trigger={this.props.trigger}\r\n      />\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    canOpen: true\r\n  };\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addWeight } from \"../actions\";\r\n\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport Timeline from \"./Timeline\";\r\nimport ChartComponent from \"./ChartComponent\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nimport Popup from \"./Popup\";\r\n\r\nclass Overview extends Component {\r\n  state = { weightValue: 0, lastAnchorTag: null };\r\n  componentDidMount() {\r\n    this.setState({ weightValue: this.props.lastWeight });\r\n  }\r\n  componentDidUpdate() {\r\n    this.moveToAnchorTag();\r\n  }\r\n  moveToAnchorTag() {\r\n    //Bewege Website zur jeweils in URL als #anchor am Ende angegebenen Stelle\r\n    const selected = this.props.history.location.hash;\r\n    if (selected !== this.state.lastAnchorTag) {\r\n      this.setState({ lastAnchorTag: selected });\r\n      if (selected && selected.length > 0) {\r\n        const elem = document.querySelector(selected);\r\n        elem && elem.scrollIntoView();\r\n      }\r\n    }\r\n  }\r\n  getWeightHistory() {\r\n    //Formatiere Aufzeichnungen des Körpergewichts\r\n    return this.props.weightHistory.map(weight => {\r\n      if (weight.date.getYear() === new Date().getYear()) {\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.\"),\r\n          value: weight.weight\r\n        };\r\n      } else {\r\n        //Zeige zusätzlich das Jahr an.\r\n        return {\r\n          label: dateFormat(weight.date, \"dd.mm.yy\"),\r\n          value: weight.weight\r\n        };\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"overview-section\" id=\"last-trainings\">\r\n          <h1>Last Trainings</h1>\r\n          <Timeline\r\n            latestTrainings={this.props.lastWorkouts.map(training => {\r\n              return training.date;\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"body-weight\">\r\n          <h1>Body Weight</h1>\r\n          <ChartComponent\r\n            data={{\r\n              title: \"weight\",\r\n              values: this.getWeightHistory()\r\n            }}\r\n            backgroundColor=\"#0ce\"\r\n            borderColor=\"#0df\"\r\n          />\r\n          <Popup\r\n            trigger={\r\n              <button className=\"circular ui icon button add-weight\">\r\n                <i className=\"icon plus\"></i>\r\n              </button>\r\n            }\r\n            content={\r\n              <div>\r\n                <div className=\"ui right labeled input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={this.state.weightValue}\r\n                    onChange={evt =>\r\n                      this.setState({ weightValue: evt.target.value })\r\n                    }\r\n                    onKeyDown={evt => {\r\n                      if (evt.keyCode === 13) {\r\n                        this.props.addWeight(this.state.weightValue);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter weight\"\r\n                  ></input>\r\n                  <div className=\"ui basic label\">kg</div>\r\n                </div>\r\n                <button\r\n                  onClick={() => this.props.addWeight(this.state.weightValue)}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"overview-section\" id=\"statistics\">\r\n          <h1>Statistics</h1>\r\n          <WorkoutStatistics />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let lastWeight = 75;\r\n  if (state.userData.history.weight[state.userData.history.weight.length - 1]) {\r\n    lastWeight =\r\n      state.userData.history.weight[state.userData.history.weight.length - 1]\r\n        .weight;\r\n  }\r\n  return {\r\n    lastWorkouts: state.userData.history.lastWorkouts,\r\n    weightHistory: state.userData.history.weight,\r\n    lastWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addWeight })(Overview);\r\n","/*\r\n  Hauptseite mit Übersicht über bisheriges Training und der Möglichkeit, ein Training zu starten\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popup from \"./Popup\";\r\nimport { getWorkout } from \"../helpers\";\r\nimport WorkoutStatistics from \"./WorkoutStatistics\";\r\nclass Main extends Component {\r\n  //Falls bereits früher ein Workout gestartet wurde, kann es hier direkt ausgewählt werden\r\n  startPopupContent() {\r\n    if (!this.props.currentWorkout) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"start-popup ui center aligned basic segment\">\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout/-1\")}\r\n        >\r\n          <i className=\"mouse pointer icon\"></i> Select Workout\r\n        </div>\r\n        <div className=\"ui horizontal divider\">Or</div>\r\n        <div\r\n          className=\"ui button\"\r\n          onClick={() => this.props.history.push(\"/workout\")}\r\n        >\r\n          <i className=\"play icon\"></i> Continue{\" \"}\r\n          {this.props.currentWorkout.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <div className=\"heading\">Welcome back!</div>\r\n        </div>\r\n        <div className=\"ui grid main\">\r\n          <div className=\"eight wide column\">\r\n            <WorkoutStatistics />\r\n          </div>\r\n          <div className=\"play-icon four wide column\">\r\n            <Popup\r\n              trigger={\r\n                <div className=\"start-workout\">\r\n                  <i\r\n                    className=\"fas fa-play\"\r\n                    onClick={() => {\r\n                      if (this.props.currentWorkout) {\r\n                        this.props.history.push(\"/workout\");\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                  <div>Start your workout NOW!</div>\r\n                </div>\r\n              }\r\n              content={this.startPopupContent()}\r\n              canOpen={!!this.props.currentWorkout}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const currentWorkout = getWorkout(\r\n    state.current.workout,\r\n    state.userData.workouts\r\n  );\r\n  return {\r\n    currentWorkout,\r\n    state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nclass Selector extends Component {\r\n  customStyles = {\r\n    option: provided => ({\r\n      ...provided,\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\",\r\n      ...this.props.customStyle.provided\r\n    }),\r\n    control: provided => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...provided,\r\n      ...this.props.customStyle.control\r\n    }),\r\n    singleValue: () => ({\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n      ...this.props.customStyle.singleValue\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreatableSelect\r\n          isMulti={this.props.isMulti}\r\n          styles={this.customStyles}\r\n          options={this.props.options}\r\n          onCreateOption={this.props.onCreate}\r\n          onChange={selected => {\r\n            if (this.props.onChange) {\r\n              if (Array.isArray(selected)) {\r\n                this.props.onChange(selected);\r\n              } else if (selected) {\r\n                this.props.onChange(selected.value);\r\n              } else {\r\n                //Wert wurde mit Klick auf X gelöscht\r\n                this.props.onChange(null);\r\n              }\r\n            }\r\n          }}\r\n          value={this.props.value}\r\n          noOptionsMessage={() =>\r\n            \"No options available. Type and Enter to create new!\"\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static defaultProps = {\r\n    customStyle: {}\r\n  };\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n  Liste, in der Elemente per Drag and Drop in der Reihenfolge verändert werden können\r\n*/\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n//Ordne nach Drag-and-Drop Array neu an\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport default function DragAndDropList(props) {\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        // Wurde außerhalb der Liste losgelassen\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        //Ordne die Elemente in der neuen Ordnung an\r\n        const items = reorder(\r\n          props.items,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n\r\n        //Gebe Elternelement neue Ordnung durch\r\n        props.onDragEnd(items.map(i => i.id));\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"droppable\">\r\n        {provided => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {props.items.map((item, index) => (\r\n              <Draggable\r\n                key={\"\" + item.id + index}\r\n                draggableId={\"\" + item.id + index}\r\n                index={index}\r\n              >\r\n                {provided => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown as SemanticDropdown } from \"semantic-ui-react\";\r\n\r\nexport const Dropdown = props => {\r\n  return (\r\n    <SemanticDropdown text={props.header}>\r\n      <SemanticDropdown.Menu>\r\n        {props.items.map(item => (\r\n          <SemanticDropdown.Item key={item.id}>\r\n            {item.name}\r\n          </SemanticDropdown.Item>\r\n        ))}\r\n      </SemanticDropdown.Menu>\r\n    </SemanticDropdown>\r\n  );\r\n};\r\n","/*\r\n  Bearbeitung und Erstellung der Workouts und der jeweiligen Übungen\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addExercise,\r\n  addExerciseToWorkout,\r\n  addWorkout,\r\n  removeExercise,\r\n  removeExerciseFromWorkout,\r\n  removeWorkout,\r\n  setWorkout,\r\n  editWorkout,\r\n  setStoppedAt\r\n} from \"../actions\";\r\nimport { getId, getWorkout, unique, findById } from \"../helpers\";\r\nimport \"../style.css\";\r\nimport Selector from \"./Selector\";\r\nimport DragAndDropList from \"./DragAndDropList\";\r\nimport { Loader } from \"./Loader\";\r\nimport { Dropdown } from \"./Dropdown\";\r\n\r\nclass WorkoutCreator extends Component {\r\n  state = {\r\n    selected: null,\r\n    workout: { id: -1, title: null, exercises: [] },\r\n    id: parseInt(this.props.match.params.id),\r\n    title: null\r\n  };\r\n  componentDidMount() {\r\n    //Finde das in der URL als ID angegebene Workout, falls ID -1 ist, muss ein Workout ausgewählt werden.\r\n    this.loadWorkout();\r\n  }\r\n\r\n  loadWorkout() {\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = this.getWorkout(id);\r\n    if (id === -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout === null) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else {\r\n      this.setState({ workout, id: workout.id, title: workout.title });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    //Wie componentDidMount(), inkl. Verhinderung einer endlosschleife durch setState()\r\n    const id = parseInt(this.props.match.params.id);\r\n    const workout = this.getWorkout(id);\r\n    if (id === -1 && prevState.workout.id !== -1) {\r\n      this.setState({\r\n        workout: { id: -1, title: null, exercises: [] },\r\n        title: \"---Select Workout, Type name to add workout---\"\r\n      });\r\n    } else if (workout === null && id !== -1) {\r\n      this.props.history.push(\"/workout/-1\");\r\n    } else if (id !== -1) {\r\n      if (workout.exercises !== prevState.workout.exercises) {\r\n        this.setState({ workout, id: workout.id, title: workout.title });\r\n      }\r\n    }\r\n  }\r\n\r\n  //Zeige dem Nutzer ein Auswahlmenu mit allen gespeicherten Übungen\r\n  //Bei Auswahl wird die ausgewählte Übung zu dem aktuellen Workout und der Liste aller Übungen hinzugefügt\r\n  renderExerciseList() {\r\n    return (\r\n      <div className=\"field\">\r\n        <DragAndDropList\r\n          onDragEnd={ids => {\r\n            this.props.editWorkout(this.state.workout.id, { exercises: ids });\r\n            this.loadWorkout();\r\n          }}\r\n          items={this.state.workout.exercises\r\n            .map((exerciseId, index) => {\r\n              //Wandle die (als ID) gespeicherte Übung in die richtige Übung um\r\n              const exercise = findById(this.props.usersExercises, exerciseId);\r\n              if (exercise) {\r\n                //Zeige diese Übung in einer Tabelle an(Übungsname, Bearbeitungsoption, Löschoption)\r\n                return {\r\n                  content: (\r\n                    <div\r\n                      className=\"ui secondary inverted raised segment\"\r\n                      key={\"\" + exercise.id + index}\r\n                    >\r\n                      <div className=\"ui grid\">\r\n                        <div className=\"twelve wide column exercise-name\">\r\n                          {exercise.name}\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large edit icon\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\r\n                                \"/exercise/\" + exercise.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                        <div className=\"one wide column\">\r\n                          <i\r\n                            className=\"large trash alternate icon\"\r\n                            onClick={() =>\r\n                              this.props.removeExerciseFromWorkout(\r\n                                index,\r\n                                this.state.workout.id\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  id: exerciseId\r\n                };\r\n              } else {\r\n                return { content: <div></div>, id: -1 };\r\n              }\r\n            })\r\n            .filter(elem => elem !== undefined)}\r\n        />\r\n        {this.renderSelector()}\r\n      </div>\r\n    );\r\n  }\r\n  renderSelector() {\r\n    return (\r\n      <div className=\"ui secondary inverted raised segment\">\r\n        <Selector\r\n          options={this.props.usersExercises.map(exercise => {\r\n            return {\r\n              value: exercise.id,\r\n              label: (\r\n                <div className=\"ui grid\">\r\n                  <div className=\"twelve wide column\">{exercise.name}</div>\r\n                  <div className=\"one wide column\">\r\n                    <i\r\n                      className=\"trash alternate icon\"\r\n                      onMouseOver={() => {\r\n                        this.setState({ preventSelect: true });\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        this.setState({ preventSelect: false });\r\n                      }}\r\n                      onClick={evt => {\r\n                        evt.stopPropagation();\r\n                        this.props.removeExercise(exercise.id);\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              )\r\n            };\r\n          })}\r\n          onChange={selected => {\r\n            //Falls Papierkorb geklickt wurde, wähle Übung nicht aus\r\n            if (!this.state.preventSelect) {\r\n              this.props.addExerciseToWorkout(selected, this.state.workout.id);\r\n            }\r\n          }}\r\n          onCreate={selected => {\r\n            //Füge die Übung zu allen Übungen und zum aktuellen Workout hinzu\r\n            const idForNewExercise = getId(this.props.usersExercises);\r\n            this.props.addExercise(selected);\r\n            this.props.addExerciseToWorkout(\r\n              idForNewExercise,\r\n              this.state.workout.id\r\n            );\r\n            //Leite weiter zur Bearbeitung der neuen Übung\r\n            this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n          }}\r\n          customStyle={{\r\n            control: {\r\n              backgroundColor: \"#6F7274\",\r\n              border: \"#aaa solid 1px\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  neededEquipment(type, header) {\r\n    //Type: \"equipment\" or muscles\r\n    const list = {\r\n      equipment: this.props.usersEquipment,\r\n      muscles: this.props.usersMuscles\r\n    };\r\n    const ids = this.state.workout.exercises.map(exerciseId => {\r\n      const exercise = findById(this.props.usersExercises, exerciseId);\r\n\r\n      return exercise[type];\r\n    });\r\n\r\n    const uniqueIds = unique([].concat.apply([], ids));\r\n    if (uniqueIds.length === 0) {\r\n      return <div>No {header.toLowerCase()}</div>;\r\n    }\r\n    return (\r\n      <Dropdown\r\n        header={header}\r\n        items={uniqueIds.map(id => findById(list[type], id))}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    //In componentDidMount() wird nach der ID in der URL das passende Workout ausgeählt,\r\n    //bis dahin soll das Workout nicht angezeigt werden.\r\n    if (!this.state.workout) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{this.state.workout.title || \"Please select workout\"}</h1>\r\n        <form className=\"ui form\">\r\n          <div className=\"field\">\r\n            {/*Alle bereits gespeicherten Workouts werden im ersten Auswahlmenu aufgelistet\r\n              Bei Auswahl wird der Nutzer auf /workout/id weitergeleitet\r\n            */}\r\n            <Selector\r\n              options={this.props.usersWorkouts.map(workout => {\r\n                return {\r\n                  value: workout.id,\r\n                  label: (\r\n                    <div className=\"ui grid\">\r\n                      <div className=\"twelve wide column\">{workout.title}</div>\r\n                      <div className=\"one wide column\">\r\n                        <i\r\n                          onClick={() => this.props.removeWorkout(workout.id)}\r\n                          onMouseOver={() => {\r\n                            this.setState({ preventSelect: true });\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            this.setState({ preventSelect: false });\r\n                          }}\r\n                          className=\"trash alternate icon\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                };\r\n              })}\r\n              onChange={selected => {\r\n                if (!this.state.preventSelect) {\r\n                  this.props.history.push(\"/workout/\" + selected);\r\n                }\r\n              }}\r\n              value={{ value: this.state.title, label: this.state.title }}\r\n              onCreate={created => {\r\n                this.props.addWorkout(created);\r\n                this.props.history.push(\r\n                  \"/workout/\" + getId(this.props.usersWorkouts)\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          {this.state.workout.title !== null ? this.renderExerciseList() : null}\r\n          {this.state.workout.id !== -1 ? (\r\n            <div className=\"workout-information\">\r\n              <div className=\"ui grid\">\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"equipment\", \"Needed Equipment\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                  <div className=\"ui segment\">\r\n                    {this.neededEquipment(\"muscles\", \"Strained muscles\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                  <div className=\"ui right labeled input\">\r\n                    <div className=\"ui label\">Pause time:</div>\r\n                    <input\r\n                      value={\r\n                        this.state.workout.pauseTime ||\r\n                        this.props.defaultPauseTime\r\n                      }\r\n                      onChange={evt => {\r\n                        this.setState({\r\n                          workout: {\r\n                            ...this.state.workout,\r\n                            pauseTime: evt.target.value\r\n                          }\r\n                        });\r\n                        this.props.editWorkout(this.state.workout.id, {\r\n                          ...this.state.workout,\r\n                          pauseTime: evt.target.value\r\n                        });\r\n                      }}\r\n                    />\r\n                    <div className=\"ui basic label\">sec</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <button\r\n              className={\r\n                \"ui submit button\" +\r\n                (this.state.workout.exercises.length > 0 ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() => {\r\n                this.props.setWorkout(this.state.workout.id);\r\n                this.props.history.push(\"/workout\");\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //Finde das Workout mit ID id aus der Liste aller Workouts\r\n  getWorkout(id) {\r\n    const workout = getWorkout(id, this.props.allWorkouts);\r\n    if (workout) {\r\n      return workout;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    allWorkouts: state.userData.workouts,\r\n    usersWorkouts: state.userData.workouts,\r\n    usersExercises: state.userData.exercises,\r\n    usersEquipment: state.userData.equipment,\r\n    usersMuscles: state.userData.muscles,\r\n    defaultPauseTime: state.userData.defaultValues.pauseTime\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setWorkout,\r\n  addExercise,\r\n  addWorkout,\r\n  removeWorkout,\r\n  addExerciseToWorkout,\r\n  removeExerciseFromWorkout,\r\n  removeExercise,\r\n  editWorkout,\r\n  setStoppedAt\r\n})(WorkoutCreator);\r\n","//Zeigt die Bilder in der passenden Größe an\r\n\r\nimport React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  state = { spans: 0 };\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", () => this.setSpans());\r\n  }\r\n\r\n  // Berechne die Anzahl an Reihen, die das Bild benötigt\r\n  setSpans() {\r\n    if (this.imageRef.current) {\r\n      const spans = Math.ceil(this.imageRef.current.clientHeight / 10);\r\n      this.setState({ spans });\r\n    }\r\n  }\r\n  render() {\r\n    const { alt, imageURL } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: \"span \" + this.state.spans }}>\r\n        <img\r\n          ref={this.imageRef}\r\n          alt={alt}\r\n          src={imageURL}\r\n          onClick={() => this.props.setImage(imageURL)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","//Ermöglicht verschiedene Optionen, nach Bildern zu suchen (Unsplash/URL)\r\n\r\nimport React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass ImageWrapper extends Component {\r\n  maxHeight = 400;\r\n  state = {\r\n    unsplashKeyword: \"\",\r\n    customUrl: \"\",\r\n    unsplashImages: null,\r\n    imageStyle: {}\r\n  };\r\n  cancel;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    //Falls ein Bild existiert, berechne dessen Style\r\n    if (this.imageRef.current) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //Falls noch kein Style berechnet wurde, berechne ihn neu\r\n    if (this.imageRef.current && !this.state.imageStyle.height) {\r\n      this.calcImageStyle();\r\n    }\r\n  }\r\n\r\n  calcImageStyle() {\r\n    this.imageRef.current.addEventListener(\"load\", () => {\r\n      const { width, height } = this.imageRef.current;\r\n      const newHeight =\r\n        height > this.maxHeight ? this.maxHeight : this.maxHeight;\r\n      const newWidth = width * (newHeight / height);\r\n      this.setState({ imageStyle: { height: newHeight, width: newWidth } });\r\n    });\r\n  }\r\n\r\n  async searchImages(keyword) {\r\n    //Suche nach eingegebenem Wort auf Unsplash. Sobald ein neuer Buchstabe eingegeben wird, cancele die\r\n    //alte Anfrage und sende eine neue\r\n    if (this.cancel !== undefined) {\r\n      this.cancel();\r\n    }\r\n    try {\r\n      const request = await axios.get(\r\n        \"https://api.unsplash.com/search/photos?client_id=08a0aaca34c345e60dc6b0906c21421d7d71e0851bf5aec143584f75a506ddd9&query=\" +\r\n          keyword,\r\n        {\r\n          cancelToken: new axios.CancelToken(c => {\r\n            this.cancel = c;\r\n          })\r\n        }\r\n      );\r\n      const unsplashImages = request.data.results.map(image => {\r\n        return {\r\n          alt: image.alt_description,\r\n          imageURL: image.urls.regular,\r\n          id: image.id\r\n        };\r\n      });\r\n      if (this.state.unsplashKeyword === keyword) {\r\n        this.setState({ unsplashImages });\r\n      }\r\n    } catch {\r\n      //Canceled\r\n    }\r\n  }\r\n\r\n  //Anzeige der Suche nach den Wörtern des input-Feldes in UnsplashSearch\r\n  imageSearch() {\r\n    const { unsplashKeyword, unsplashImages } = this.state;\r\n    if (unsplashKeyword) {\r\n      if (unsplashImages === null) {\r\n        return <Loader message={\"Getting results for \" + unsplashKeyword} />;\r\n      } else if (unsplashImages.length === 0) {\r\n        return (\r\n          <div className=\"ui negative message\">\r\n            <div className=\"header\">\r\n              No results found for {unsplashKeyword}!\r\n            </div>\r\n            Please try another searchterm.\r\n          </div>\r\n        );\r\n      } else {\r\n        const imageList = unsplashImages.map(image => (\r\n          <ImageCard\r\n            key={image.id}\r\n            image={image}\r\n            setImage={image => {\r\n              this.setState({ imageStyle: {} });\r\n              this.props.onChange({\r\n                target: {\r\n                  value: {\r\n                    showImage: true,\r\n                    imageUrl: image\r\n                  },\r\n                  name: \"image\"\r\n                }\r\n              });\r\n            }}\r\n          />\r\n        ));\r\n        return <div className=\"image-list\">{imageList}</div>;\r\n      }\r\n    } else {\r\n      return <div>Type keyword to search image...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    const { showImage, imageUrl, alt } = this.props.value;\r\n    const { unsplashKeyword, customUrl } = this.state;\r\n    //Falls bereits ein Bild gespeichert wurde, zeige dieses an. Bei klick auf Papierkorb wird das Bild wieder gelöscht\r\n    if (showImage) {\r\n      return (\r\n        <div\r\n          className=\"ui fluid rounded image exercise-image\"\r\n          style={this.state.imageStyle}\r\n        >\r\n          <a\r\n            className=\"ui right corner red big label\"\r\n            href=\"delete-image\"\r\n            onClick={evt => evt.preventDefault()}\r\n          >\r\n            <i\r\n              className=\"trash icon\"\r\n              onClick={() =>\r\n                this.props.onChange({\r\n                  target: {\r\n                    value: {\r\n                      showImage: false\r\n                    },\r\n                    name: \"image\"\r\n                  }\r\n                })\r\n              }\r\n            ></i>\r\n          </a>\r\n          <img src={imageUrl} alt={\"Image of \" + alt} ref={this.imageRef} />\r\n        </div>\r\n      );\r\n    } else {\r\n      //Es werden zwei Möglichkeiten, ein Bild hinzuzufügen, angeboten:\r\n      //1. Gebe die URL eines Bildes an (Bestätigung durch ENTER)\r\n      //2. Suche auf unsplash.com nach einem Bild.\r\n      //  Sobald das Inputfeld angeklickt wird, können Ergebnisse in einem Popup (siehe Popup.jsx) gesehen werden\r\n      return (\r\n        <div>\r\n          <div className=\"ui placeholder segment\">\r\n            <div className=\"ui two column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"urlInput\">Provide image's URL:</label>\r\n                  <input\r\n                    id=\"urlInput\"\r\n                    value={customUrl}\r\n                    onChange={event => {\r\n                      this.setState({ customUrl: event.target.value });\r\n                    }}\r\n                    onFocus={() =>\r\n                      this.setState({ imageUrlFieldFocused: true })\r\n                    }\r\n                    onBlur={() =>\r\n                      this.setState({ imageUrlFieldFocused: false })\r\n                    }\r\n                    onKeyDown={e => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n\r\n                        this.props.onChange({\r\n                          target: {\r\n                            value: {\r\n                              showImage: true,\r\n                              imageUrl: customUrl\r\n                            },\r\n                            name: \"image\"\r\n                          }\r\n                        });\r\n                        this.setState({ customUrl: \"\" });\r\n                      }\r\n                    }}\r\n                  />\r\n                  {this.state.imageUrlFieldFocused ? (\r\n                    <div className=\"ui pointing label\">\r\n                      Press enter to set image\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"middle aligned column\">\r\n                <div className=\"field\">\r\n                  <label htmlFor=\"unsplashInput\">Search in unsplash.com:</label>\r\n                  <Popup\r\n                    width=\"500px\"\r\n                    contentStyle={{ width: \"430px\" }}\r\n                    trigger={\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"unsplashInput\"\r\n                        value={unsplashKeyword}\r\n                        onChange={event => {\r\n                          this.searchImages(event.target.value);\r\n\r\n                          this.setState({\r\n                            unsplashKeyword: event.target.value\r\n                          });\r\n                        }}\r\n                        onKeyDown={e => {\r\n                          if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            this.searchImages(this.state.unsplashKeyword);\r\n                          }\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    }\r\n                    on=\"focus\"\r\n                  >\r\n                    {this.imageSearch()}\r\n                  </Popup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ui vertical divider\">Or</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageWrapper;\r\n","import React from \"react\";\r\nimport { getId } from \"../../helpers\";\r\nimport Selector from \"../Selector\";\r\nconst ExerciseFormSelector = props => {\r\n  //props.type either \"muscles\" or \"equipment\"\r\n  const create = {\r\n    muscles: props.createMuscle,\r\n    equipment: props.createEquipment\r\n  };\r\n  const remove = {\r\n    muscles: props.deleteMuscle,\r\n    equipment: props.deleteEquipment\r\n  };\r\n  return (\r\n    <div className=\"field\">\r\n      <label>{props.type}:</label>\r\n      <Selector\r\n        isMulti\r\n        onCreate={name => {\r\n          const newId = getId(props[props.type]);\r\n          create[props.type](name);\r\n          props.handleChange({\r\n            target: {\r\n              value: [\r\n                ...props.values[props.type],\r\n                { value: newId, label: name }\r\n              ],\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        onChange={evt => {\r\n          props.handleChange({\r\n            target: {\r\n              value: evt,\r\n              name: props.type\r\n            }\r\n          });\r\n        }}\r\n        value={(props.values[props.type] || []).map(elem => {\r\n          let data = props[props.type].find(e => e.id === elem.value);\r\n          //Falls Muskulatur oder Equipment noch nicht geladen hat, setze jeweilige Namen auf leeren String\r\n          let label = \"\";\r\n          if (data) {\r\n            label = data.name;\r\n          }\r\n\r\n          return {\r\n            value: elem.value,\r\n            label: label\r\n          };\r\n        })}\r\n        options={(props[props.type] || []).map(elem => {\r\n          return {\r\n            value: elem.id,\r\n            label: (\r\n              <div className=\"ui grid\">\r\n                <div className=\"twelve wide column\">{elem.name}</div>\r\n                <div className=\"one wide column\">\r\n                  <i\r\n                    onClick={evt => {\r\n                      evt.stopPropagation();\r\n                      remove[props.type](elem.id);\r\n                    }}\r\n                    className=\"trash alternate icon\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            )\r\n          };\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseFormSelector;\r\n","/*\r\n  Formular, um Daten für einzelne Übungen zu setzen/Bearbeiten\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\nimport ImageField from \"../ImageSearch/ImageField\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n} from \"../../actions\";\r\nimport { Prompt } from \"react-router\";\r\nimport ExerciseFormSelector from \"./ExerciseFormSelector\";\r\n\r\n//In einem Formular werden Name, Dauer, Beschreibung, Muskelpartien und Bild der Übung angezeigt\r\n//Mit dem Button am Ende wird die Übung mit den neuen Werten dann global gespeichert\r\nclass ExerciseForm extends Component {\r\n  state = { formChanged: false, exerciseName: \"\" };\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  beforeunload(e) {\r\n    if (this.state.formChanged) {\r\n      e.preventDefault();\r\n      e.returnValue = false;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ formChanged: false });\r\n    window.removeEventListener(\"beforeunload\", this.beforeunload.bind(this));\r\n  }\r\n  render() {\r\n    const {\r\n      name,\r\n      duration,\r\n      description,\r\n      image,\r\n      muscles,\r\n      equipment\r\n    } = this.props.exercise;\r\n    return (\r\n      <div ref={elem => (this.form = elem)}>\r\n        <Prompt\r\n          when={this.state.formChanged}\r\n          message={\"There are unsaved changes! Are you sure you want to leave?\"}\r\n        />\r\n        <Formik\r\n          validateOnChange\r\n          enableReinitialize\r\n          initialValues={{\r\n            name: name.startsWith(\"Unnamed exercise\") ? \"\" : name,\r\n            duration: duration || this.props.defaults.exerciseDuration,\r\n            description: description || \"\",\r\n            muscles: (muscles || []).map(muscleId => {\r\n              const name = this.props.muscles.find(\r\n                muscle => muscle.id === muscleId\r\n              );\r\n\r\n              return { value: muscleId, label: name };\r\n            }),\r\n            equipment: (equipment || []).map(equipmentId => {\r\n              const name = this.props.equipment.find(\r\n                equipment => equipment.id === equipmentId\r\n              );\r\n\r\n              return { value: equipmentId, label: name };\r\n            }),\r\n            image: {\r\n              showImage: image != null,\r\n              imageUrl: image || \"\",\r\n              alt: name,\r\n              unsplashKeyword: \"\",\r\n              customUrl: \"\"\r\n            }\r\n          }}\r\n          onChange={evt => console.log(evt)}\r\n          validate={values => {\r\n            this.setState({ formChanged: true, exerciseName: values.name });\r\n            const errors = {};\r\n            if (values.name === \"\") {\r\n              errors.name = \"field name required\";\r\n            }\r\n            if (!values.duration) {\r\n              errors.duration = \"field duration required\";\r\n            } else if (values.duration <= 5) {\r\n              errors.duration = \"duration must be at least 6\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={values => {\r\n            this.setState({ formChanged: false });\r\n            const {\r\n              name,\r\n              duration,\r\n              description,\r\n              image,\r\n              muscles,\r\n              equipment\r\n            } = values;\r\n            this.props.editExercise(\r\n              {\r\n                name,\r\n                duration,\r\n                description,\r\n                muscles: muscles.map(m => m.value),\r\n                equipment: equipment.map(e => e.value),\r\n                image: image.showImage ? image.imageUrl : null\r\n              },\r\n              this.props.exercise.id\r\n            );\r\n\r\n            this.props.back();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"ui form\"\r\n                onSubmit={handleSubmit}\r\n                onKeyPress={evt => {\r\n                  if (evt.which === 13) {\r\n                    evt.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"required field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    autoFocus={values.name === \"\"}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Exercise Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  ></input>\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"form-error\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"required field\">\r\n                  <label>Duration (s):</label>\r\n                  <input\r\n                    autoFocus={values.name !== \"\" && values.duration <= 5}\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    placeholder=\"Duration in seconds\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.duration}\r\n                  ></input>\r\n                  {errors.duration && touched.duration && (\r\n                    <div className=\"form-error\">{errors.duration}</div>\r\n                  )}\r\n                </div>\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"muscles\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <ExerciseFormSelector\r\n                  {...this.props}\r\n                  type=\"equipment\"\r\n                  handleChange={handleChange}\r\n                  values={values}\r\n                />\r\n                <div className=\"field\">\r\n                  <label>Description:</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    value={values.description}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Image:</label>\r\n                  <Field\r\n                    as={ImageField}\r\n                    onChange={handleChange}\r\n                    name=\"image\"\r\n                    className=\"image-field\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={\r\n                    \"ui button \" +\r\n                    (errors.name || errors.duration ? \"disabled\" : null)\r\n                  }\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"ui red button\"\r\n                  onClick={() => {\r\n                    this.props.removeExercise(this.props.exercise.id);\r\n                    this.props.back();\r\n                  }}\r\n                >\r\n                  Delete Exercise\r\n                </button>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaults: state.userData.defaultValues,\r\n    muscles: state.userData.muscles,\r\n    equipment: state.userData.equipment\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  createMuscle,\r\n  deleteMuscle,\r\n  createEquipment,\r\n  deleteEquipment,\r\n  removeExercise\r\n})(ExerciseForm);\r\n","/*\r\n  Formular zum Bearbeiten der einzelnen Übungen\r\n  TODO: Leere Übungen nicht erlauben\r\n*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { getId } from \"../../helpers\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\nclass ExercisePreview extends Component {\r\n  state = { exercise: null };\r\n  componentDidMount() {\r\n    this.getExercise(this.props.match.params.id);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const id = parseInt(this.props.match.params.id);\r\n    if (prevState.id !== id) {\r\n      this.getExercise(id);\r\n    }\r\n  }\r\n\r\n  //Hole Übung mit der ID aus der URL und speichere die ID, gebe sonst undefined zurück\r\n  getExercise(id) {\r\n    const exercise = this.props.exercises.find(ex => ex.id === parseInt(id));\r\n    if (!exercise) {\r\n      return undefined;\r\n    }\r\n    this.setState({\r\n      id,\r\n      exercise\r\n    });\r\n  }\r\n  render() {\r\n    //Falls in der URL eine nicht-existente ID eingegeben wurde, wird dies als Fehler angezeigt\r\n    if (this.props.match.params.id === \"search\") {\r\n      ///exercise/search\r\n      return null;\r\n    }\r\n    if (!this.state.exercise && !isNaN(this.props.match.params.id)) {\r\n      return (\r\n        <div>\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"ui eight wide centered column red massive label\">\r\n                Could not find any exercise!\r\n              </div>\r\n            </div>\r\n            <div className=\"centered row\">\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    this.props.history.goBack();\r\n                  }}\r\n                >\r\n                  <i className=\"arrow alternate circle left icon\"></i>\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => {\r\n                    const idForNewExercise = getId(this.props.exercises);\r\n                    this.props.addExercise(\"\");\r\n                    this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n                  }}\r\n                >\r\n                  <i className=\"plus circle icon\"></i>\r\n                  Add Exercise\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    //Zeige die Daten der Übung mit Bearbeitungsoption an\r\n\r\n    return (\r\n      <ExerciseForm\r\n        exercise={this.state.exercise}\r\n        back={this.props.history.goBack.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editExercise, addExercise })(\r\n  ExercisePreview\r\n);\r\n","import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function FileUpload(props) {\r\n  return (\r\n    <Dropzone\r\n      onDrop={evt => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          // reader.result ist Dateiinhalt\r\n          props.recievedFile(reader.result);\r\n        };\r\n        reader.readAsText(evt[0]);\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div className=\"file-drop\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {props.description}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst DeleteSelectorField = props => {\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"ui checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={\r\n            props.historyField\r\n              ? props.values.history[props.label.toLowerCase()]\r\n              : props.values[props.label.toLowerCase()]\r\n          }\r\n          onChange={evt => {\r\n            if (props.historyField) {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  history: {\r\n                    ...props.values.history,\r\n                    [props.label.toLowerCase()]: evt.target.checked\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              props.setState({\r\n                delete: {\r\n                  ...props.values,\r\n                  [props.label.toLowerCase()]: evt.target.checked\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteSelectorField;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n} from \"../actions\";\r\n\r\nimport FileUpload from \"./FileUpload\";\r\nimport { prepareDateInHistory } from \"../helpers\";\r\nimport DeleteSelectorField from \"./DeleteSelectorField\";\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    overwriteChecked: false,\r\n    delete: {\r\n      exercises: true,\r\n      workouts: true,\r\n      muscles: true,\r\n      equipment: true,\r\n      history: {\r\n        workouts: true,\r\n        weight: true,\r\n        \"training time\": true\r\n      }\r\n    }\r\n  };\r\n  deleteAll(evt) {\r\n    evt.preventDefault();\r\n    if (\r\n      window.confirm(\"Are your sure that you want to delete all of your data?\")\r\n    ) {\r\n      this.props.deleteAll(this.state.delete);\r\n    }\r\n  }\r\n  saveData() {\r\n    return (\r\n      \"text/json;charset=utf-8,\" +\r\n      encodeURIComponent(JSON.stringify(this.props.userData))\r\n    );\r\n  }\r\n  setUserData(file) {\r\n    //Test, ob Datei valide ist\r\n    try {\r\n      let json = JSON.parse(file);\r\n      const { exercises, workouts, history } = json;\r\n      if (history) {\r\n        prepareDateInHistory(json.history);\r\n      }\r\n      if (\r\n        Array.isArray(exercises) &&\r\n        Array.isArray(workouts) &&\r\n        history &&\r\n        Array.isArray(history.lastWorkouts) &&\r\n        typeof history.totalTrainingTime === \"number\" &&\r\n        Array.isArray(history.weight)\r\n      ) {\r\n        if (this.props.overwriteChecked) {\r\n          this.props.setUserData(json);\r\n        } else {\r\n          this.props.addUserData(json);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ fileLoadingError: \"No valid file provided\" });\r\n    }\r\n  }\r\n\r\n  setDefaultValue = evt => {\r\n    this.props.setDefaultValue(evt.target.value, evt.target.name);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"ui form\">\r\n        <div className=\"ui dividing header\">Defaults</div>\r\n        <div className=\"fields\">\r\n          <div className=\"field\">\r\n            <label>Exercise duration</label>\r\n            <input\r\n              name=\"exerciseDuration\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.exerciseDuration}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Pause time:</label>\r\n            <input\r\n              name=\"pauseTime\"\r\n              type=\"number\"\r\n              value={this.props.defaultValues.pauseTime}\r\n              onChange={evt => {\r\n                if (evt.target.value !== \"\") {\r\n                  this.setDefaultValue(evt);\r\n                }\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Description:</label>\r\n            <input></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui dividing header\">Data</div>\r\n        <div className=\"field\">\r\n          <label>Download all your fitness-data as JSON:</label>\r\n          <a\r\n            className=\"ui button\"\r\n            href={\"data:'\" + this.saveData()}\r\n            download=\"fitness-data.json\"\r\n            title=\"Download all of your user-data\"\r\n          >\r\n            Download\r\n          </a>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Load saved data from JSON:</label>\r\n          <FileUpload\r\n            recievedFile={this.setUserData.bind(this)}\r\n            description=\"Drag or click here to upload JSON file and load it's content!\"\r\n          />\r\n          <div>{this.state.fileLoadingError}</div>\r\n          <div className=\"field\">\r\n            <div className=\"ui checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.overwriteChecked}\r\n                onChange={() =>\r\n                  this.setState({\r\n                    overwriteChecked: !this.state.overwriteChecked\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>Overwrite old data</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Delete data:</label>\r\n          <div className=\"grouped field\">\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Exercises\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Workouts\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Muscles\"}\r\n              values={this.state.delete}\r\n            />\r\n            <DeleteSelectorField\r\n              setState={this.setState.bind(this)}\r\n              label={\"Equipment\"}\r\n              values={this.state.delete}\r\n            />\r\n            <div className=\"grouped field\">\r\n              <label>History:</label>\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Weight\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Workouts\"}\r\n                values={this.state.delete}\r\n              />\r\n              <DeleteSelectorField\r\n                historyField\r\n                setState={this.setState.bind(this)}\r\n                label={\"Training Time\"}\r\n                values={this.state.delete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"ui red button\"\r\n            onClick={this.deleteAll.bind(this)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.userData,\r\n    defaultValues: state.userData.defaultValues\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAll,\r\n  setUserData,\r\n  setDefaultValue,\r\n  addUserData\r\n})(Settings);\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nexport default props => {\r\n  return (\r\n    <form className=\"ui form\">\r\n      {props.showLanguages ? (\r\n        <div className=\"field\">\r\n          <label>Language</label>\r\n          <Select\r\n            isClearable\r\n            options={props.languages.map(lang => {\r\n              return {\r\n                label: (\r\n                  <div style={{ color: \"black\" }}>\r\n                    <i className={lang.short_name + \" flag\"}></i>\r\n                    {lang.full_name}\r\n                  </div>\r\n                ),\r\n                value: lang.id\r\n              };\r\n            })}\r\n            onChange={evt => {\r\n              if (evt === null) {\r\n                //Sprachauswahl gelöscht\r\n                props.deleteKey(\"language\");\r\n              } else {\r\n                props.setSearchSettings(\"language\", evt.value);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"field\">\r\n        <label>Muscles</label>\r\n        <Select\r\n          isClearable\r\n          options={(props.muscles || []).map(muscle => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{muscle.name}</div>,\r\n              value: muscle.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Muskelauswahl gelöscht\r\n              props.deleteKey(\"muscles\");\r\n            } else {\r\n              props.setSearchSettings(\"muscles\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Equipment</label>\r\n        <Select\r\n          isClearable\r\n          options={props.equipment.map(equipment => {\r\n            return {\r\n              label: <div style={{ color: \"black\" }}>{equipment.name}</div>,\r\n              value: equipment.id\r\n            };\r\n          })}\r\n          onChange={evt => {\r\n            if (evt === null) {\r\n              //Sprachauswahl gelöscht\r\n              props.deleteKey(\"equipment\");\r\n            } else {\r\n              props.setSearchSettings(\"equipment\", evt.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label>Keyword{props.wgerSearch ? <span> (exact)</span> : null}:</label>\r\n        <input\r\n          type=\"text\"\r\n          onKeyDown={evt =>\r\n            evt.keyCode === 13\r\n              ? props.setSearchSettings(\"name\", evt.target.value)\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { editExercise, addExercise } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getId } from \"../../helpers\";\r\nimport SearchSettings from \"./SearchSettings\";\r\nimport Axios from \"axios\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nclass WgerSearch extends Component {\r\n  state = {\r\n    exercises: null,\r\n    //status:2 -> Nur \"verifizierte\" Übungen\r\n    searchSettings: { status: 2 },\r\n    shouldReload: false\r\n  };\r\n  componentDidMount() {\r\n    this.searchData();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.shouldReload) {\r\n      this.searchData();\r\n      this.setState({ shouldReload: false });\r\n    }\r\n  }\r\n  async searchData(url) {\r\n    this.setState({ exercises: null });\r\n    const { searchSettings } = this.state;\r\n    if (this.props.wgerSearch) {\r\n      if (!url) {\r\n        url =\r\n          \"http://wger.de/api/v2/exercise.json?\" +\r\n          Object.keys(searchSettings)\r\n            .map(key => key + \"=\" + searchSettings[key])\r\n            .join(\"&\");\r\n      }\r\n\r\n      const result = await Axios.get(url);\r\n      this.setState({\r\n        exercises: result.data.results,\r\n        next: result.data.next,\r\n        prev: result.data.previous\r\n      });\r\n    } else {\r\n      this.setState({\r\n        exercises: this.props.exercises.filter(exercise => {\r\n          const isRightEquipment =\r\n            searchSettings.equipment == null ||\r\n            exercise.equipment.includes(searchSettings.equipment);\r\n          const isRightMuscles =\r\n            searchSettings.muscles == null ||\r\n            exercise.muscles.includes(searchSettings.muscles);\r\n          const keywordMatches =\r\n            searchSettings.name == null ||\r\n            exercise.name.includes(searchSettings.name);\r\n          return isRightEquipment && isRightMuscles && keywordMatches;\r\n        })\r\n      });\r\n    }\r\n  }\r\n  renderArrowButtons() {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <div className=\"ui two column grid\">\r\n          <div className=\"right aligned column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.prev ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.prev) : null\r\n              }\r\n            >\r\n              Previous page\r\n              <i className=\"arrow left icon\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"column\">\r\n            <button\r\n              className={\r\n                \"circular ui icon button\" + (this.state.next ? \"\" : \" disabled\")\r\n              }\r\n              onClick={() =>\r\n                this.state.next ? this.searchData(this.state.next) : null\r\n              }\r\n            >\r\n              <i className=\"arrow right icon\"></i>\r\n              Next page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  editIcon = exercise => {\r\n    if (this.props.wgerSearch) {\r\n      return (\r\n        <i\r\n          className=\"plus icon\"\r\n          onClick={() => {\r\n            const idForNewExercise = getId(this.props.exercises);\r\n            this.props.addExercise(\"\");\r\n            this.props.editExercise(\r\n              {\r\n                name: exercise.name,\r\n                description: exercise.description,\r\n                muscles: exercise.muscles,\r\n                equipment: exercise.equipment\r\n              },\r\n              idForNewExercise\r\n            );\r\n            this.props.history.push(\"/exercise/\" + idForNewExercise);\r\n          }}\r\n        ></i>\r\n      );\r\n    } else {\r\n      return (\r\n        <i\r\n          className=\"edit icon\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/exercise/\" + exercise.id);\r\n          }}\r\n        ></i>\r\n      );\r\n    }\r\n  };\r\n  renderResults() {\r\n    if (this.state.exercises === null) {\r\n      return <Loader />;\r\n    } else if (this.state.exercises.length === 0) {\r\n      return (\r\n        <div className=\"ui negative message\">\r\n          <div className=\"header\">No results found</div>\r\n          <p>Please try with other search settings!</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.exercises.map(ex => (\r\n        <div key={ex.id} className=\"ui grey inverted segment grid \">\r\n          <div className=\"five wide column\">{ex.name}</div>\r\n          <div className=\"column\">{this.editIcon(ex)}</div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    const settingsProps = {\r\n      languages: this.props.languages,\r\n      muscles: this.props.muscles,\r\n      equipment: this.props.equipment,\r\n      setSearchSettings: (key, value) => {\r\n        this.setState({\r\n          shouldReload: true,\r\n          searchSettings: { ...this.state.searchSettings, [key]: value }\r\n        });\r\n      },\r\n      deleteKey: key => {\r\n        delete this.state.searchSettings[key];\r\n        this.setState({ shouldReload: true });\r\n      },\r\n      showLanguages: this.props.showLanguages\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"ui grey inverted raised segment\">\r\n          <SearchSettings\r\n            {...settingsProps}\r\n            wgerSearch={this.props.wgerSearch}\r\n          />\r\n        </div>\r\n        <div className=\"wger-search-results\">\r\n          <h1>Results:</h1>\r\n          <div className=\"ui segment\">\r\n            {this.renderArrowButtons()}\r\n            {this.renderResults()}\r\n            {this.renderArrowButtons()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    languages: state.wger.languages,\r\n    muscles: state.wger.muscles,\r\n    equipment: state.wger.equipment,\r\n    exercises: state.userData.exercises\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  editExercise,\r\n  addExercise\r\n})(WgerSearch);\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass WgerSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Import exercises from wger.de</h1>\r\n        <ExerciseSearch showLanguages wgerSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WgerSearch;\r\n","import React, { Component } from \"react\";\r\nimport ExerciseSearch from \"./ExerciseSearch\";\r\n\r\nclass InternalSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Search for exercises</h1>\r\n        <ExerciseSearch history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InternalSearch;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ExerciseWrapper from \"./ExerciseWrapper/ExerciseWrapper\";\r\nimport Menu from \"./Menu\";\r\nimport Overview from \"./Overview\";\r\nimport Main from \"./Main\";\r\nimport WorkoutCreator from \"./WorkoutCreator\";\r\nimport ExercisePreview from \"./ExercisePreview/ExercisePreview\";\r\nimport Settings from \"./Settings\";\r\nimport WgerSearch from \"./ExerciseSearch/WgerSearch\";\r\nimport InternalSearch from \"./ExerciseSearch/InternalSearch\";\r\nimport { loadDefaultData } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    //Lade, falls nötig, die Standarddaten aus JSON-Dateien und wger-Datenbank\r\n    if (this.props.muscles.length === 0) {\r\n      this.props.loadDefaultData();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Menu} />\r\n        <div className=\"content\">\r\n          {/*Da die Github Seite als Root /project hat, muss diew auf meine Hauptseite gelenkt werden (/)*/}\r\n          <Route path=\"/project\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n          <Route path=\"/overview\" component={Overview} />\r\n          <Route path=\"/workout\" component={ExerciseWrapper} exact />\r\n          <Route path=\"/workout/:id\" component={WorkoutCreator} />\r\n          <Route\r\n            path=\"/exercise/:id\"\r\n            component={ExercisePreview}\r\n            onLeave={() => alert(\"hi\")}\r\n          />\r\n          <Route path=\"/exercise/search\" component={InternalSearch} />\r\n          <Route path=\"/settings\" component={Settings} />\r\n          <Route path=\"/wger\" component={WgerSearch} />\r\n          <Route path=\"/\" component={Main} exact />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return { muscles: state.wger.muscles };\r\n  },\r\n  { loadDefaultData }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { prepareStore } from \"./helpers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={prepareStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}